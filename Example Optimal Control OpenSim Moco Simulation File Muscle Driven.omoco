<?xml version="1.0" encoding="UTF-8" ?>
<OpenSimDocument Version="40500">
	<MocoStudy name="RE_Post_01TP_2_timepoint3_S1_track">
		<!--Should the solution be written to a file at the end of solving the problem? Default: false.-->
		<write_solution>false</write_solution>
		<!--The optimal control problem to solve.-->
		<MocoProblem name="problem">
			<!--List of 1 or more MocoPhases.-->
			<MocoPhase name="phases">
				<!--OpenSim Model to provide dynamics.-->
				<ModelProcessor name="model">
					<!--Base model to process.-->
					<model>
						<Model name="NI">
							<!--List of components that this component owns and serializes.-->
							<components>
								<Bhargava2004SmoothedMuscleMetabolics name="metabolic_cost_Bhargava2004">
									<!--Metabolic parameters for each muscle.-->
									<muscle_parameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="addbrev_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/addbrev_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="addlong_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/addlong_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="addmagDist_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/addmagDist_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="addmagIsch_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/addmagIsch_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="addmagMid_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/addmagMid_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="addmagProx_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/addmagProx_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="bflh_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/bflh_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="bfsh_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/bfsh_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="edl_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/edl_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="ehl_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/ehl_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="fdl_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/fdl_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="fhl_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/fhl_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="gaslat_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/gaslat_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="gasmed_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/gasmed_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="glmax1_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/glmax1_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="glmax2_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/glmax2_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="glmax3_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/glmax3_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="glmed1_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/glmed1_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="glmed2_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/glmed2_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="glmed3_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/glmed3_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="glmin1_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/glmin1_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="glmin2_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/glmin2_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="glmin3_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/glmin3_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="grac_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/grac_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="iliacus_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/iliacus_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="perbrev_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/perbrev_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="perlong_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/perlong_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="piri_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/piri_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="psoas_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/psoas_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="recfem_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/recfem_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="sart_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/sart_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="semimem_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/semimem_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="semiten_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/semiten_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="soleus_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/soleus_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="tfl_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/tfl_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="tibant_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/tibant_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="tibpost_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/tibpost_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="vasint_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/vasint_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="vaslat_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/vaslat_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="vasmed_r">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/vasmed_r</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="addbrev_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/addbrev_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="addlong_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/addlong_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="addmagDist_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/addmagDist_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="addmagIsch_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/addmagIsch_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="addmagMid_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/addmagMid_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="addmagProx_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/addmagProx_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="bflh_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/bflh_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="bfsh_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/bfsh_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="edl_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/edl_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="ehl_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/ehl_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="fdl_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/fdl_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="fhl_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/fhl_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="gaslat_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/gaslat_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="gasmed_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/gasmed_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="glmax1_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/glmax1_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="glmax2_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/glmax2_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="glmax3_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/glmax3_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="glmed1_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/glmed1_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="glmed2_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/glmed2_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="glmed3_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/glmed3_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="glmin1_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/glmin1_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="glmin2_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/glmin2_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="glmin3_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/glmin3_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="grac_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/grac_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="iliacus_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/iliacus_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="perbrev_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/perbrev_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="perlong_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/perlong_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="piri_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/piri_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="psoas_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/psoas_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="recfem_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/recfem_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="sart_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/sart_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="semimem_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/semimem_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="semiten_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/semiten_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="soleus_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/soleus_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="tfl_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/tfl_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="tibant_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/tibant_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="tibpost_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/tibpost_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="vasint_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/vasint_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="vaslat_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/vaslat_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
										<Bhargava2004SmoothedMuscleMetabolics_MuscleParameters name="vasmed_l">
											<!--Path to a Component that satisfies the Socket 'muscle' of type Muscle (description: The muscle to which the Bhargava2004SmoothedMuscleMetabolics is connected.).-->
											<socket_muscle>/forceset/vasmed_l</socket_muscle>
											<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the 'provided_muscle_mass' property must be specified (default is false).-->
											<use_provided_muscle_mass>false</use_provided_muscle_mass>
										</Bhargava2004SmoothedMuscleMetabolics_MuscleParameters>
									</muscle_parameters>
									<!--An optional flag that allows the user to explicitly specify whether a smooth approximation of the metabolic energy model should be used (default is false).-->
									<use_smoothing>true</use_smoothing>
								</Bhargava2004SmoothedMuscleMetabolics>
							</components>
							<!--The model's ground reference frame.-->
							<Ground name="ground">
								<!--The geometry used to display the axes of this Frame.-->
								<FrameGeometry name="frame_geometry">
									<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
									<socket_frame>..</socket_frame>
									<!--Scale factors in X, Y, Z directions respectively.-->
									<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
								</FrameGeometry>
								<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
								<attached_geometry />
								<!--Set of wrap objects fixed to this body that GeometryPaths can wrap over.This property used to be a member of Body but was moved up with the introduction of Frames.-->
								<WrapObjectSet name="wrapobjectset">
									<objects />
									<groups />
								</WrapObjectSet>
							</Ground>
							<!--Acceleration due to gravity, expressed in ground.-->
							<gravity>0 -9.8066499999999994 0</gravity>
							<!--Credits (e.g., model author names) associated with the model.-->
							<credits>Rajagopal et al. (2016), Lai et al. (2017), Uhlrich et al. (2022) Notes: P. van den Bos changed the fiber-damping from 0.01 to default of 0.1 as suggested in M. Millard (2013) "Flexing Computational Muscle: Modeling and Simulation of Musculotendon Dynamics".</credits>
							<!--Publications and references associated with the model.-->
							<publications>Rajagopal, A., Dembia, C.L., DeMers, M.S., Delp, D.D., Hicks, J.L., Delp, S.L. (2016) Full-body musculoskeletal model for muscle-driven simulation of human gait. IEEE Transactions on Biomedical Engineering.</publications>
							<!--Units for all lengths.-->
							<length_units>meters</length_units>
							<!--Units for all forces.-->
							<force_units>N</force_units>
							<!--List of bodies that make up this model.-->
							<BodySet name="bodyset">
								<objects>
									<Body name="pelvis">
										<!--List of components that this component owns and serializes.-->
										<components>
											<PhysicalOffsetFrame name="pelvis_imu_offset">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>..</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>-0.1436123953669883 0.032148136617659924 -0.0010356427938445038</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>-1.7379803100776658 0.17047234914274739 0.050851376393000997</orientation>
											</PhysicalOffsetFrame>
										</components>
										<!--The geometry used to display the axes of this Frame.-->
										<FrameGeometry name="frame_geometry">
											<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
											<socket_frame>..</socket_frame>
											<!--Scale factors in X, Y, Z directions respectively.-->
											<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
										</FrameGeometry>
										<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
										<attached_geometry>
											<Mesh name="pelvis_geom_1">
												<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
												<socket_frame>..</socket_frame>
												<!--Scale factors in X, Y, Z directions respectively.-->
												<scale_factors>0.90508 0.98917999999999995 1.1476</scale_factors>
												<!--Default appearance attributes for this Geometry-->
												<Appearance>
													<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
													<opacity>1</opacity>
													<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
													<color>1 1 1</color>
												</Appearance>
												<!--Name of geometry file.-->
												<mesh_file>r_pelvis.vtp</mesh_file>
											</Mesh>
											<Mesh name="pelvis_geom_2">
												<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
												<socket_frame>..</socket_frame>
												<!--Scale factors in X, Y, Z directions respectively.-->
												<scale_factors>0.90508 0.98917999999999995 1.1476</scale_factors>
												<!--Default appearance attributes for this Geometry-->
												<Appearance>
													<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
													<opacity>1</opacity>
													<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
													<color>1 1 1</color>
												</Appearance>
												<!--Name of geometry file.-->
												<mesh_file>l_pelvis.vtp</mesh_file>
											</Mesh>
											<Mesh name="pelvis_geom_3">
												<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
												<socket_frame>..</socket_frame>
												<!--Scale factors in X, Y, Z directions respectively.-->
												<scale_factors>0.90508 0.98917999999999995 1.1476</scale_factors>
												<!--Default appearance attributes for this Geometry-->
												<Appearance>
													<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
													<opacity>1</opacity>
													<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
													<color>1 1 1</color>
												</Appearance>
												<!--Name of geometry file.-->
												<mesh_file>sacrum.vtp</mesh_file>
											</Mesh>
										</attached_geometry>
										<!--Set of wrap objects fixed to this body that GeometryPaths can wrap over.This property used to be a member of Body but was moved up with the introduction of Frames.-->
										<WrapObjectSet name="wrapobjectset">
											<objects>
												<WrapCylinder name="Gmax1_at_pelvis_r">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>-0.59999999999999998 0.45000000000000001 0</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>-0.069691160000000002 -0.09792882 0.070003599999999999</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>-x</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.039745162962704729</radius>
													<!--The length of the cylinder.-->
													<length>0.15982543098046367</length>
												</WrapCylinder>
												<WrapCylinder name="Gmax2_at_pelvis_r">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>-0.75 0.39000000000000001 0</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>-0.072406399999999996 -0.082101939999999998 0.078036800000000003</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>all</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.039951904904726235</radius>
													<!--The length of the cylinder.-->
													<length>0.10537941369110027</length>
												</WrapCylinder>
												<WrapCylinder name="Gmax3_at_pelvis_r">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>-0.10000000000000001 0 0</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>-0.075121640000000003 -0.087047839999999987 0.078036800000000003</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>all</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.037919277872921126</radius>
													<!--The length of the cylinder.-->
													<length>0.11461291121478555</length>
												</WrapCylinder>
												<WrapCylinder name="Gmax1_at_pelvis_l">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>0.59999999999999998 -0.45000000000000001 0</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>-0.069691160000000002 -0.09792882 -0.070003599999999999</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>-x</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.039745162962704729</radius>
													<!--The length of the cylinder.-->
													<length>0.15982543098046367</length>
												</WrapCylinder>
												<WrapCylinder name="Gmax2_at_pelvis_l">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>0.75 -0.39000000000000001 0</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>-0.072406399999999996 -0.082101939999999998 -0.078036800000000003</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>all</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.039951904904726235</radius>
													<!--The length of the cylinder.-->
													<length>0.10537941369110027</length>
												</WrapCylinder>
												<WrapCylinder name="Gmax3_at_pelvis_l">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>0.10000000000000001 0 0</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>-0.075121640000000003 -0.087047839999999987 -0.078036800000000003</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>all</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.037919277872921126</radius>
													<!--The length of the cylinder.-->
													<length>0.11461291121478555</length>
												</WrapCylinder>
												<WrapCylinder name="PS_at_brim_r">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>-0.25 -0.27000000000000002 0.10000000000000001</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>-0.066975919999999994 -0.059350799999999995 0.075282559999999998</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>-y</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.048078006269966028</radius>
													<!--The length of the cylinder.-->
													<length>0.11235313738940289</length>
												</WrapCylinder>
												<WrapCylinder name="PS_at_brim_l">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>0.25 0.27000000000000002 0.10000000000000001</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>-0.066975919999999994 -0.059350799999999995 -0.075282559999999998</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>-y</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.048078006269966028</radius>
													<!--The length of the cylinder.-->
													<length>0.11235313738940289</length>
												</WrapCylinder>
												<WrapCylinder name="IL_at_brim_r">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>-0.32000000000000001 -0.23999999999999999 0.90000000000000002</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>-0.064260680000000001 -0.064296699999999998 0.086758559999999998</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>-y</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.052906163149053033</radius>
													<!--The length of the cylinder.-->
													<length>0.1121273543736703</length>
												</WrapCylinder>
												<WrapCylinder name="IL_at_brim_l">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>0.32000000000000001 0.23999999999999999 0.90000000000000002</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>-0.064260680000000001 -0.064296699999999998 -0.086758559999999998</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>-y</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.052906163149053033</radius>
													<!--The length of the cylinder.-->
													<length>0.1121273543736703</length>
												</WrapCylinder>
											</objects>
											<groups />
										</WrapObjectSet>
										<!--The mass of the body (kg)-->
										<mass>12.595150845974953</mass>
										<!--The location (Vec3) of the mass center in the body frame.-->
										<mass_center>-0.063989156000000005 0 0</mass_center>
										<!--The elements of the inertia tensor (Vec6) as [Ixx Iyy Izz Ixy Ixz Iyz] measured about the mass_center and not the body origin.-->
										<inertia>0.1317351585450241 0.1317351585450241 0.055438255659379758 0 0 0</inertia>
									</Body>
									<Body name="femur_r">
										<!--List of components that this component owns and serializes.-->
										<components>
											<PhysicalOffsetFrame name="femur_r_imu_offset">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>..</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>0.0058975985999999998 -0.30539568312999998 0.05801712584000001</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>-1.3563848083178938 0.12266837539349448 -0.026638867242166735</orientation>
											</PhysicalOffsetFrame>
										</components>
										<!--The geometry used to display the axes of this Frame.-->
										<FrameGeometry name="frame_geometry">
											<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
											<socket_frame>..</socket_frame>
											<!--Scale factors in X, Y, Z directions respectively.-->
											<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
										</FrameGeometry>
										<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
										<attached_geometry>
											<Mesh name="femur_r_geom_1">
												<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
												<socket_frame>..</socket_frame>
												<!--Scale factors in X, Y, Z directions respectively.-->
												<scale_factors>1.0705 0.99456999999999995 1.1464000000000001</scale_factors>
												<!--Default appearance attributes for this Geometry-->
												<Appearance>
													<!--Flag indicating whether the associated Geometry is visible or hidden.-->
													<visible>true</visible>
													<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
													<opacity>1</opacity>
													<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
													<color>1 1 1</color>
												</Appearance>
												<!--Name of geometry file.-->
												<mesh_file>r_femur.vtp</mesh_file>
											</Mesh>
										</attached_geometry>
										<!--Set of wrap objects fixed to this body that GeometryPaths can wrap over.This property used to be a member of Body but was moved up with the introduction of Frames.-->
										<WrapObjectSet name="wrapobjectset">
											<objects>
												<WrapCylinder name="GasLat_at_condyles_r">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>0 0 0</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>0.0053525000000000005 -0.40777369999999996 0</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>all</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.026845909999999997</radius>
													<!--The length of the cylinder.-->
													<length>0.11464000000000002</length>
												</WrapCylinder>
												<WrapCylinder name="GasMed_at_condyles_r">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>0 0 0</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>0.0053525000000000005 -0.40777369999999996 0</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>all</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.025813375</radius>
													<!--The length of the cylinder.-->
													<length>0.11464000000000002</length>
												</WrapCylinder>
												<WrapCylinder name="KnExt_at_fem_r">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>-0.062336599999999999 0.050760100000000002 0</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>0.0038412537400000003 -0.40054516523999995 0.0023972485040000004</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>all</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.025823809806584386</radius>
													<!--The length of the cylinder.-->
													<length>0.11456620457310729</length>
												</WrapCylinder>
												<WrapCylinder name="KnExtVL_at_fem_r">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>-0.062336599999999999 0.050760100000000002 0</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>0.0020214037399999998 -0.40054516523999995 0.0023972485040000004</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>all</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.025823809806584386</radius>
													<!--The length of the cylinder.-->
													<length>0.11456620457310729</length>
												</WrapCylinder>
												<WrapCylinder name="AB_at_femshaft_r">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>1.66157 0.186644 0</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>0.0156757597 -0.11198360915 0.026785636000000002</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>all</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.018259334630941867</radius>
													<!--The length of the cylinder.-->
													<length>0.06990010214078636</length>
												</WrapCylinder>
												<WrapCylinder name="AL_at_femshaft_r">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>1.77711 0.136489 0</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>0.032899355349999999 -0.23064973413000001 0.017326345680000001</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>all</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.022207447095105106</radius>
													<!--The length of the cylinder.-->
													<length>0.10027268557459741</length>
												</WrapCylinder>
												<WrapCylinder name="AMprox_at_femshaft_r">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>1.6112599999999999 0.18656 0</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>0.0055483907950000001 -0.072498981235999987 0.029121999200000002</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>all</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.023359324813894418</radius>
													<!--The length of the cylinder.-->
													<length>0.069827499805289267</length>
												</WrapCylinder>
												<WrapCylinder name="AMmid_at_femshaft_r">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>1.6113900000000001 0.13655999999999999 0</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>0.024634881250000001 -0.15983833926999999 0.023597726880000003</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>all</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.023703848609931168</radius>
													<!--The length of the cylinder.-->
													<length>0.11955523045558594</length>
												</WrapCylinder>
												<WrapCylinder name="AMdist_at_femshaft_r">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>1.7118800000000001 0.186636 0</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>0.033834758250000006 -0.25932020352000001 0.010735577440000001</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>all</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.024107227920815814</radius>
													<!--The length of the cylinder.-->
													<length>0.20007741961455811</length>
												</WrapCylinder>
												<WrapCylinder name="AMisch_at_condyles_r">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>1.7111499999999999 -0.46336300000000002 0</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>-0.024248002550000002 -0.37478480767 -0.0036161697680000002</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>all</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.043999832480901675</radius>
													<!--The length of the cylinder.-->
													<length>0.24305076476982249</length>
												</WrapCylinder>
												<WrapCylinder name="PECT_at_femshaft_r">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>1.8129500000000001 0.27634399999999998 0</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>0.0065147739649999998 -0.084044049253000006 0.034896989199999999</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>all</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.016529292809271675</radius>
													<!--The length of the cylinder.-->
													<length>0.050451514130965242</length>
												</WrapCylinder>
											</objects>
											<groups />
										</WrapObjectSet>
										<!--The mass of the body (kg)-->
										<mass>9.9475703556721946</mass>
										<!--The location (Vec3) of the mass center in the body frame.-->
										<mass_center>0 -0.1690769 0</mass_center>
										<!--The elements of the inertia tensor (Vec6) as [Ixx Iyy Izz Ixy Ixz Iyz] measured about the mass_center and not the body origin.-->
										<inertia>0.14611915192577749 0.046067926326889851 0.14611915192577749 0 0 0</inertia>
									</Body>
									<Body name="tibia_r">
										<!--List of components that this component owns and serializes.-->
										<components>
											<PhysicalOffsetFrame name="tibia_r_imu_offset">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>..</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>0.0049837219650999999 -0.28806606800000001 -0.015119248444</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>-1.6854554000494244 0.20050513990709784 0.022932583624897175</orientation>
											</PhysicalOffsetFrame>
										</components>
										<!--The geometry used to display the axes of this Frame.-->
										<FrameGeometry name="frame_geometry">
											<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
											<socket_frame>..</socket_frame>
											<!--Scale factors in X, Y, Z directions respectively.-->
											<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
										</FrameGeometry>
										<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
										<attached_geometry>
											<Mesh name="tibia_r_geom_1">
												<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
												<socket_frame>..</socket_frame>
												<!--Scale factors in X, Y, Z directions respectively.-->
												<scale_factors>0.96557000000000004 1.0056 0.92552000000000001</scale_factors>
												<!--Default appearance attributes for this Geometry-->
												<Appearance>
													<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
													<opacity>1</opacity>
													<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
													<color>1 1 1</color>
												</Appearance>
												<!--Name of geometry file.-->
												<mesh_file>r_tibia.vtp</mesh_file>
											</Mesh>
											<Mesh name="tibia_r_geom_2">
												<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
												<socket_frame>..</socket_frame>
												<!--Scale factors in X, Y, Z directions respectively.-->
												<scale_factors>0.96557000000000004 1.0056 0.92552000000000001</scale_factors>
												<!--Default appearance attributes for this Geometry-->
												<Appearance>
													<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
													<opacity>1</opacity>
													<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
													<color>1 1 1</color>
												</Appearance>
												<!--Name of geometry file.-->
												<mesh_file>r_fibula.vtp</mesh_file>
											</Mesh>
										</attached_geometry>
										<!--Set of wrap objects fixed to this body that GeometryPaths can wrap over.This property used to be a member of Body but was moved up with the introduction of Frames.-->
										<WrapObjectSet name="wrapobjectset">
											<objects>
												<WrapCylinder name="GasLat_at_shank_r">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>2.9672299999999998 -0.279725 -1.4781200000000001</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>-0.0071452180000000009 -0.074414400000000006 -0.0030542160000000002</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>-y</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.054067330304925734</radius>
													<!--The length of the cylinder.-->
													<length>0.093094567154116487</length>
												</WrapCylinder>
												<WrapCylinder name="GasMed_at_shank_r">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>2.9672299999999998 0.027972500000000001 -1.4781200000000001</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>-0.0071452180000000009 -0.074414400000000006 -0.0030542160000000002</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>-y</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.05808060683073088</radius>
													<!--The length of the cylinder.-->
													<length>0.092806086253799186</length>
												</WrapCylinder>
												<WrapCylinder name="GR_at_condyles_r">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>0 -0.40000000000000002 0</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>-0.0028967100000000003 -0.020112000000000001 0</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>all</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.035373673416498573</radius>
													<!--The length of the cylinder.-->
													<length>0.093170419525358955</length>
												</WrapCylinder>
												<WrapCylinder name="SM_at_condyles_r">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>0 -0.10000000000000001 0</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>-0.00096557000000000001 -0.020112000000000001 0</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>all</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.033995938309005568</radius>
													<!--The length of the cylinder.-->
													<length>0.092592771354117434</length>
												</WrapCylinder>
												<WrapCylinder name="ST_at_condyles_r">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>0 -0.20000000000000001 0</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>-0.00193114 -0.020614800000000003 0</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>all</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.041854441721719364</radius>
													<!--The length of the cylinder.-->
													<length>0.092713354901877168</length>
												</WrapCylinder>
												<WrapCylinder name="BF_at_gastroc_r">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>0 0 0</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>-0.03765723 -0.060336000000000001 0</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>y</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.028581965000000004</radius>
													<!--The length of the cylinder.-->
													<length>0.13882800000000001</length>
												</WrapCylinder>
											</objects>
											<groups />
										</WrapObjectSet>
										<!--The mass of the body (kg)-->
										<mass>3.965060861123558</mass>
										<!--The location (Vec3) of the mass center in the body frame.-->
										<mass_center>0 -0.18774552000000003 0</mass_center>
										<!--The elements of the inertia tensor (Vec6) as [Ixx Iyy Izz Ixy Ixz Iyz] measured about the mass_center and not the body origin.-->
										<inertia>0.054186034220079698 0.0048742572484548443 0.054186034220079698 0 0 0</inertia>
									</Body>
									<Body name="patella_r">
										<!--The geometry used to display the axes of this Frame.-->
										<FrameGeometry name="frame_geometry">
											<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
											<socket_frame>..</socket_frame>
											<!--Scale factors in X, Y, Z directions respectively.-->
											<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
										</FrameGeometry>
										<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
										<attached_geometry>
											<Mesh name="patella_r_geom_1">
												<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
												<socket_frame>..</socket_frame>
												<!--Scale factors in X, Y, Z directions respectively.-->
												<scale_factors>1 1 1</scale_factors>
												<!--Default appearance attributes for this Geometry-->
												<Appearance>
													<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
													<opacity>1</opacity>
													<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
													<color>1 1 1</color>
												</Appearance>
												<!--Name of geometry file.-->
												<mesh_file>r_patella.vtp</mesh_file>
											</Mesh>
										</attached_geometry>
										<!--Set of wrap objects fixed to this body that GeometryPaths can wrap over.This property used to be a member of Body but was moved up with the introduction of Frames.-->
										<WrapObjectSet name="wrapobjectset">
											<objects />
											<groups />
										</WrapObjectSet>
										<!--The mass of the body (kg)-->
										<mass>0.092188333440013676</mass>
										<!--The location (Vec3) of the mass center in the body frame.-->
										<mass_center>0.0018 0.0264 0</mass_center>
										<!--The elements of the inertia tensor (Vec6) as [Ixx Iyy Izz Ixy Ixz Iyz] measured about the mass_center and not the body origin.-->
										<inertia>3.0693795472487154e-06 1.4020754656596046e-05 1.4020754656596046e-05 0 0 0</inertia>
									</Body>
									<Body name="talus_r">
										<!--The geometry used to display the axes of this Frame.-->
										<FrameGeometry name="frame_geometry">
											<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
											<socket_frame>..</socket_frame>
											<!--Scale factors in X, Y, Z directions respectively.-->
											<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
										</FrameGeometry>
										<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
										<attached_geometry>
											<Mesh name="talus_r_geom_1">
												<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
												<socket_frame>..</socket_frame>
												<!--Scale factors in X, Y, Z directions respectively.-->
												<scale_factors>0.77378391230382737 0.77378391230382737 0.77378391230382737</scale_factors>
												<!--Default appearance attributes for this Geometry-->
												<Appearance>
													<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
													<opacity>1</opacity>
													<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
													<color>1 1 1</color>
												</Appearance>
												<!--Name of geometry file.-->
												<mesh_file>r_talus.vtp</mesh_file>
											</Mesh>
										</attached_geometry>
										<!--Set of wrap objects fixed to this body that GeometryPaths can wrap over.This property used to be a member of Body but was moved up with the introduction of Frames.-->
										<WrapObjectSet name="wrapobjectset">
											<objects />
											<groups />
										</WrapObjectSet>
										<!--The mass of the body (kg)-->
										<mass>0.10694702255222005</mass>
										<!--The location (Vec3) of the mass center in the body frame.-->
										<mass_center>0 0 0</mass_center>
										<!--The elements of the inertia tensor (Vec6) as [Ixx Iyy Izz Ixy Ixz Iyz] measured about the mass_center and not the body origin.-->
										<inertia>0.00064033625295778431 0.00064033625295778431 0.00064033625295778431 0 0 0</inertia>
									</Body>
									<Body name="calcn_r">
										<!--The geometry used to display the axes of this Frame.-->
										<FrameGeometry name="frame_geometry">
											<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
											<socket_frame>..</socket_frame>
											<!--Scale factors in X, Y, Z directions respectively.-->
											<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
										</FrameGeometry>
										<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
										<attached_geometry>
											<Mesh name="calcn_r_geom_1">
												<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
												<socket_frame>..</socket_frame>
												<!--Scale factors in X, Y, Z directions respectively.-->
												<scale_factors>0.77378391230382737 0.77378391230382737 0.77378391230382737</scale_factors>
												<!--Default appearance attributes for this Geometry-->
												<Appearance>
													<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
													<opacity>1</opacity>
													<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
													<color>1 1 1</color>
												</Appearance>
												<!--Name of geometry file.-->
												<mesh_file>r_foot.vtp</mesh_file>
											</Mesh>
										</attached_geometry>
										<!--Set of wrap objects fixed to this body that GeometryPaths can wrap over.This property used to be a member of Body but was moved up with the introduction of Frames.-->
										<WrapObjectSet name="wrapobjectset">
											<objects />
											<groups />
										</WrapObjectSet>
										<!--The mass of the body (kg)-->
										<mass>1.3368377819027506</mass>
										<!--The location (Vec3) of the mass center in the body frame.-->
										<mass_center>0.077378391230382745 0.023213517369114822 0</mass_center>
										<!--The elements of the inertia tensor (Vec6) as [Ixx Iyy Izz Ixy Ixz Iyz] measured about the mass_center and not the body origin.-->
										<inertia>0.00089647075414089796 0.0024973113865353587 0.0026253786371269162 0 0 0</inertia>
									</Body>
									<Body name="toes_r">
										<!--List of components that this component owns and serializes.-->
										<components>
											<PhysicalOffsetFrame name="toes_r_imu_offset">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>..</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>0 0.01 0</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>-1.3084488457810128 0.2094078643814144 -0.1182095756419136</orientation>
											</PhysicalOffsetFrame>
										</components>
										<!--The geometry used to display the axes of this Frame.-->
										<FrameGeometry name="frame_geometry">
											<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
											<socket_frame>..</socket_frame>
											<!--Scale factors in X, Y, Z directions respectively.-->
											<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
										</FrameGeometry>
										<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
										<attached_geometry>
											<Mesh name="toes_r_geom_1">
												<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
												<socket_frame>..</socket_frame>
												<!--Scale factors in X, Y, Z directions respectively.-->
												<scale_factors>0.77378391230382737 0.77378391230382737 0.77378391230382737</scale_factors>
												<!--Default appearance attributes for this Geometry-->
												<Appearance>
													<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
													<opacity>1</opacity>
													<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
													<color>1 1 1</color>
												</Appearance>
												<!--Name of geometry file.-->
												<mesh_file>r_bofoot.vtp</mesh_file>
											</Mesh>
										</attached_geometry>
										<!--Set of wrap objects fixed to this body that GeometryPaths can wrap over.This property used to be a member of Body but was moved up with the introduction of Frames.-->
										<WrapObjectSet name="wrapobjectset">
											<objects />
											<groups />
										</WrapObjectSet>
										<!--The mass of the body (kg)-->
										<mass>0.23164725084810858</mass>
										<!--The location (Vec3) of the mass center in the body frame.-->
										<mass_center>0.026772923365712426 0.0046427034738229641 -0.01354121846531698</mass_center>
										<!--The elements of the inertia tensor (Vec6) as [Ixx Iyy Izz Ixy Ixz Iyz] measured about the mass_center and not the body origin.-->
										<inertia>6.4033625295778428e-05 0.00012806725059155686 0.00064033625295778431 0 0 0</inertia>
									</Body>
									<Body name="femur_l">
										<!--List of components that this component owns and serializes.-->
										<components>
											<PhysicalOffsetFrame name="femur_l_imu_offset">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>..</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>0.0058975985999999998 -0.30539568312999998 -0.05801712584000001</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>-1.7030792263092955 -0.062889469447742388 -0.0083623587847989414</orientation>
											</PhysicalOffsetFrame>
										</components>
										<!--The geometry used to display the axes of this Frame.-->
										<FrameGeometry name="frame_geometry">
											<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
											<socket_frame>..</socket_frame>
											<!--Scale factors in X, Y, Z directions respectively.-->
											<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
										</FrameGeometry>
										<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
										<attached_geometry>
											<Mesh name="femur_l_geom_1">
												<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
												<socket_frame>..</socket_frame>
												<!--Scale factors in X, Y, Z directions respectively.-->
												<scale_factors>1.0705 0.99456999999999995 1.1464000000000001</scale_factors>
												<!--Default appearance attributes for this Geometry-->
												<Appearance>
													<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
													<opacity>1</opacity>
													<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
													<color>1 1 1</color>
												</Appearance>
												<!--Name of geometry file.-->
												<mesh_file>l_femur.vtp</mesh_file>
											</Mesh>
										</attached_geometry>
										<!--Set of wrap objects fixed to this body that GeometryPaths can wrap over.This property used to be a member of Body but was moved up with the introduction of Frames.-->
										<WrapObjectSet name="wrapobjectset">
											<objects>
												<WrapCylinder name="GasLat_at_condyles_l">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>0 0 0</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>0.0053525000000000005 -0.40777369999999996 0</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>all</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.026845909999999997</radius>
													<!--The length of the cylinder.-->
													<length>0.11464000000000002</length>
												</WrapCylinder>
												<WrapCylinder name="GasMed_at_condyles_l">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>0 0 0</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>0.0053525000000000005 -0.40777369999999996 0</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>all</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.025813375</radius>
													<!--The length of the cylinder.-->
													<length>0.11464000000000002</length>
												</WrapCylinder>
												<WrapCylinder name="KnExt_at_fem_l">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>0.062336599999999999 -0.050760100000000002 0</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>0.0038412537400000003 -0.40054516523999995 -0.0023972485040000004</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>all</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.025823809806584386</radius>
													<!--The length of the cylinder.-->
													<length>0.11456620457310729</length>
												</WrapCylinder>
												<WrapCylinder name="KnExtVL_at_fem_l">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>0.062336599999999999 -0.050760100000000002 0</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>0.0020214037399999998 -0.40054516523999995 -0.0023972485040000004</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>all</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.025823809806584386</radius>
													<!--The length of the cylinder.-->
													<length>0.11456620457310729</length>
												</WrapCylinder>
												<WrapCylinder name="AB_at_femshaft_l">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>-1.66157 -0.186644 0</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>0.0156757597 -0.11198360915 -0.026785636000000002</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>all</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.018259334630941867</radius>
													<!--The length of the cylinder.-->
													<length>0.06990010214078636</length>
												</WrapCylinder>
												<WrapCylinder name="AL_at_femshaft_l">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>-1.77711 -0.136489 0</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>0.032899355349999999 -0.23064973413000001 -0.017326345680000001</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>all</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.022207447095105106</radius>
													<!--The length of the cylinder.-->
													<length>0.10027268557459741</length>
												</WrapCylinder>
												<WrapCylinder name="AMprox_at_femshaft_l">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>-1.6112599999999999 -0.18656 0</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>0.0055483907950000001 -0.072498981235999987 -0.029121999200000002</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>all</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.023359324813894418</radius>
													<!--The length of the cylinder.-->
													<length>0.069827499805289267</length>
												</WrapCylinder>
												<WrapCylinder name="AMmid_at_femshaft_l">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>-1.6113900000000001 -0.13655999999999999 0</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>0.024634881250000001 -0.15983833926999999 -0.023597726880000003</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>all</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.023703848609931168</radius>
													<!--The length of the cylinder.-->
													<length>0.11955523045558594</length>
												</WrapCylinder>
												<WrapCylinder name="AMdist_at_femshaft_l">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>-1.7118800000000001 -0.186636 0</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>0.033834758250000006 -0.25932020352000001 -0.010735577440000001</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>all</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.024107227920815814</radius>
													<!--The length of the cylinder.-->
													<length>0.20007741961455811</length>
												</WrapCylinder>
												<WrapCylinder name="AMisch_at_condyles_l">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>-1.7111499999999999 0.46336300000000002 0</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>-0.024248002550000002 -0.37478480767 0.0036161697680000002</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>all</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.043999832480901675</radius>
													<!--The length of the cylinder.-->
													<length>0.24305076476982249</length>
												</WrapCylinder>
												<WrapCylinder name="PECT_at_femshaft_l">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>-1.8129500000000001 -0.27634399999999998 0</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>0.0065147739649999998 -0.084044049253000006 -0.034896989199999999</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>all</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.016529292809271675</radius>
													<!--The length of the cylinder.-->
													<length>0.050451514130965242</length>
												</WrapCylinder>
											</objects>
											<groups />
										</WrapObjectSet>
										<!--The mass of the body (kg)-->
										<mass>9.9475703556721946</mass>
										<!--The location (Vec3) of the mass center in the body frame.-->
										<mass_center>0 -0.1690769 0</mass_center>
										<!--The elements of the inertia tensor (Vec6) as [Ixx Iyy Izz Ixy Ixz Iyz] measured about the mass_center and not the body origin.-->
										<inertia>0.14611915192577749 0.046067926326889851 0.14611915192577749 0 0 0</inertia>
									</Body>
									<Body name="tibia_l">
										<!--List of components that this component owns and serializes.-->
										<components>
											<PhysicalOffsetFrame name="tibia_l_imu_offset">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>..</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>0.014005496293 -0.28806103999999999 0.01497132721</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>-1.5183448011687499 0.14626211297886146 -0.0076512160677346692</orientation>
											</PhysicalOffsetFrame>
										</components>
										<!--The geometry used to display the axes of this Frame.-->
										<FrameGeometry name="frame_geometry">
											<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
											<socket_frame>..</socket_frame>
											<!--Scale factors in X, Y, Z directions respectively.-->
											<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
										</FrameGeometry>
										<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
										<attached_geometry>
											<Mesh name="tibia_l_geom_1">
												<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
												<socket_frame>..</socket_frame>
												<!--Scale factors in X, Y, Z directions respectively.-->
												<scale_factors>0.96557000000000004 1.0056 0.92552000000000001</scale_factors>
												<!--Default appearance attributes for this Geometry-->
												<Appearance>
													<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
													<opacity>1</opacity>
													<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
													<color>1 1 1</color>
												</Appearance>
												<!--Name of geometry file.-->
												<mesh_file>l_tibia.vtp</mesh_file>
											</Mesh>
											<Mesh name="tibia_l_geom_2">
												<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
												<socket_frame>..</socket_frame>
												<!--Scale factors in X, Y, Z directions respectively.-->
												<scale_factors>0.96557000000000004 1.0056 0.92552000000000001</scale_factors>
												<!--Default appearance attributes for this Geometry-->
												<Appearance>
													<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
													<opacity>1</opacity>
													<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
													<color>1 1 1</color>
												</Appearance>
												<!--Name of geometry file.-->
												<mesh_file>l_fibula.vtp</mesh_file>
											</Mesh>
										</attached_geometry>
										<!--Set of wrap objects fixed to this body that GeometryPaths can wrap over.This property used to be a member of Body but was moved up with the introduction of Frames.-->
										<WrapObjectSet name="wrapobjectset">
											<objects>
												<WrapCylinder name="GasLat_at_shank_l">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>-2.9672299999999998 0.279725 -1.4781200000000001</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>-0.0071452180000000009 -0.074414400000000006 0.0030542160000000002</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>-y</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.054067330304925734</radius>
													<!--The length of the cylinder.-->
													<length>0.093094567154116487</length>
												</WrapCylinder>
												<WrapCylinder name="GasMed_at_shank_l">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>-2.9672299999999998 -0.027972500000000001 -1.4781200000000001</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>-0.0071452180000000009 -0.074414400000000006 0.0030542160000000002</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>-y</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.05808060683073088</radius>
													<!--The length of the cylinder.-->
													<length>0.092806086253799186</length>
												</WrapCylinder>
												<WrapCylinder name="GR_at_condyles_l">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>0 0.40000000000000002 0</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>-0.0028967100000000003 -0.020112000000000001 0</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>all</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.035373673416498573</radius>
													<!--The length of the cylinder.-->
													<length>0.093170419525358955</length>
												</WrapCylinder>
												<WrapCylinder name="SM_at_condyles_l">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>0 0.10000000000000001 0</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>-0.00096557000000000001 -0.020112000000000001 0</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>all</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.033995938309005568</radius>
													<!--The length of the cylinder.-->
													<length>0.092592771354117434</length>
												</WrapCylinder>
												<WrapCylinder name="ST_at_condyles_l">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>0 0.20000000000000001 0</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>-0.00193114 -0.020614800000000003 0</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>all</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.041854441721719364</radius>
													<!--The length of the cylinder.-->
													<length>0.092713354901877168</length>
												</WrapCylinder>
												<WrapCylinder name="BF_at_gastroc_l">
													<!--Whether or not the WrapObject is considered active in computing paths-->
													<active>true</active>
													<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
													<xyz_body_rotation>0 0 0</xyz_body_rotation>
													<!--Translation of the WrapObject.-->
													<translation>-0.03765723 -0.060336000000000001 0</translation>
													<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
													<quadrant>all</quadrant>
													<!--Default appearance for this Geometry-->
													<Appearance>
														<!--Flag indicating whether the associated Geometry is visible or hidden.-->
														<visible>false</visible>
														<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
														<opacity>0.5</opacity>
														<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
														<color>0 1 1</color>
														<!--Visuals applied to surfaces associated with this Appearance.-->
														<SurfaceProperties>
															<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
															<representation>3</representation>
														</SurfaceProperties>
													</Appearance>
													<!--The radius of the cylinder.-->
													<radius>0.028581965000000004</radius>
													<!--The length of the cylinder.-->
													<length>0.13882800000000001</length>
												</WrapCylinder>
											</objects>
											<groups />
										</WrapObjectSet>
										<!--The mass of the body (kg)-->
										<mass>3.965060861123558</mass>
										<!--The location (Vec3) of the mass center in the body frame.-->
										<mass_center>0 -0.18774552000000003 0</mass_center>
										<!--The elements of the inertia tensor (Vec6) as [Ixx Iyy Izz Ixy Ixz Iyz] measured about the mass_center and not the body origin.-->
										<inertia>0.054186034220079698 0.0048742572484548443 0.054186034220079698 0 0 0</inertia>
									</Body>
									<Body name="patella_l">
										<!--The geometry used to display the axes of this Frame.-->
										<FrameGeometry name="frame_geometry">
											<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
											<socket_frame>..</socket_frame>
											<!--Scale factors in X, Y, Z directions respectively.-->
											<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
										</FrameGeometry>
										<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
										<attached_geometry>
											<Mesh name="patella_l_geom_1">
												<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
												<socket_frame>..</socket_frame>
												<!--Scale factors in X, Y, Z directions respectively.-->
												<scale_factors>1 1 1</scale_factors>
												<!--Default appearance attributes for this Geometry-->
												<Appearance>
													<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
													<opacity>1</opacity>
													<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
													<color>1 1 1</color>
												</Appearance>
												<!--Name of geometry file.-->
												<mesh_file>l_patella.vtp</mesh_file>
											</Mesh>
										</attached_geometry>
										<!--Set of wrap objects fixed to this body that GeometryPaths can wrap over.This property used to be a member of Body but was moved up with the introduction of Frames.-->
										<WrapObjectSet name="wrapobjectset">
											<objects />
											<groups />
										</WrapObjectSet>
										<!--The mass of the body (kg)-->
										<mass>0.092188333440013676</mass>
										<!--The location (Vec3) of the mass center in the body frame.-->
										<mass_center>0.0018 0.0264 0</mass_center>
										<!--The elements of the inertia tensor (Vec6) as [Ixx Iyy Izz Ixy Ixz Iyz] measured about the mass_center and not the body origin.-->
										<inertia>3.0693795472487154e-06 1.4020754656596046e-05 1.4020754656596046e-05 0 0 0</inertia>
									</Body>
									<Body name="talus_l">
										<!--The geometry used to display the axes of this Frame.-->
										<FrameGeometry name="frame_geometry">
											<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
											<socket_frame>..</socket_frame>
											<!--Scale factors in X, Y, Z directions respectively.-->
											<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
										</FrameGeometry>
										<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
										<attached_geometry>
											<Mesh name="talus_l_geom_1">
												<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
												<socket_frame>..</socket_frame>
												<!--Scale factors in X, Y, Z directions respectively.-->
												<scale_factors>0.77378391230382737 0.77378391230382737 0.77378391230382737</scale_factors>
												<!--Default appearance attributes for this Geometry-->
												<Appearance>
													<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
													<opacity>1</opacity>
													<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
													<color>1 1 1</color>
												</Appearance>
												<!--Name of geometry file.-->
												<mesh_file>l_talus.vtp</mesh_file>
											</Mesh>
										</attached_geometry>
										<!--Set of wrap objects fixed to this body that GeometryPaths can wrap over.This property used to be a member of Body but was moved up with the introduction of Frames.-->
										<WrapObjectSet name="wrapobjectset">
											<objects />
											<groups />
										</WrapObjectSet>
										<!--The mass of the body (kg)-->
										<mass>0.10694702255222005</mass>
										<!--The location (Vec3) of the mass center in the body frame.-->
										<mass_center>0 0 0</mass_center>
										<!--The elements of the inertia tensor (Vec6) as [Ixx Iyy Izz Ixy Ixz Iyz] measured about the mass_center and not the body origin.-->
										<inertia>0.00064033625295778431 0.00064033625295778431 0.00064033625295778431 0 0 0</inertia>
									</Body>
									<Body name="calcn_l">
										<!--The geometry used to display the axes of this Frame.-->
										<FrameGeometry name="frame_geometry">
											<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
											<socket_frame>..</socket_frame>
											<!--Scale factors in X, Y, Z directions respectively.-->
											<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
										</FrameGeometry>
										<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
										<attached_geometry>
											<Mesh name="calcn_l_geom_1">
												<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
												<socket_frame>..</socket_frame>
												<!--Scale factors in X, Y, Z directions respectively.-->
												<scale_factors>0.77378391230382737 0.77378391230382737 0.77378391230382737</scale_factors>
												<!--Default appearance attributes for this Geometry-->
												<Appearance>
													<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
													<opacity>1</opacity>
													<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
													<color>1 1 1</color>
													<!--Visuals applied to surfaces associated with this Appearance.-->
													<SurfaceProperties>
														<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
														<representation>3</representation>
													</SurfaceProperties>
												</Appearance>
												<!--Name of geometry file.-->
												<mesh_file>l_foot.vtp</mesh_file>
											</Mesh>
										</attached_geometry>
										<!--Set of wrap objects fixed to this body that GeometryPaths can wrap over.This property used to be a member of Body but was moved up with the introduction of Frames.-->
										<WrapObjectSet name="wrapobjectset">
											<objects />
											<groups />
										</WrapObjectSet>
										<!--The mass of the body (kg)-->
										<mass>1.3368377819027506</mass>
										<!--The location (Vec3) of the mass center in the body frame.-->
										<mass_center>0.077378391230382745 0.023213517369114822 0</mass_center>
										<!--The elements of the inertia tensor (Vec6) as [Ixx Iyy Izz Ixy Ixz Iyz] measured about the mass_center and not the body origin.-->
										<inertia>0.00089647075414089796 0.0024973113865353587 0.0026253786371269162 0 0 0</inertia>
									</Body>
									<Body name="toes_l">
										<!--List of components that this component owns and serializes.-->
										<components>
											<PhysicalOffsetFrame name="toes_l_imu_offset">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>..</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>0 0.01 0</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>-1.7650288641174723 0.21724140975427622 0.088148600392382537</orientation>
											</PhysicalOffsetFrame>
										</components>
										<!--The geometry used to display the axes of this Frame.-->
										<FrameGeometry name="frame_geometry">
											<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
											<socket_frame>..</socket_frame>
											<!--Scale factors in X, Y, Z directions respectively.-->
											<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
										</FrameGeometry>
										<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
										<attached_geometry>
											<Mesh name="toes_l_geom_1">
												<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
												<socket_frame>..</socket_frame>
												<!--Scale factors in X, Y, Z directions respectively.-->
												<scale_factors>0.77378391230382737 0.77378391230382737 0.77378391230382737</scale_factors>
												<!--Default appearance attributes for this Geometry-->
												<Appearance>
													<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
													<opacity>1</opacity>
													<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
													<color>1 1 1</color>
												</Appearance>
												<!--Name of geometry file.-->
												<mesh_file>l_bofoot.vtp</mesh_file>
											</Mesh>
										</attached_geometry>
										<!--Set of wrap objects fixed to this body that GeometryPaths can wrap over.This property used to be a member of Body but was moved up with the introduction of Frames.-->
										<WrapObjectSet name="wrapobjectset">
											<objects />
											<groups />
										</WrapObjectSet>
										<!--The mass of the body (kg)-->
										<mass>0.23164725084810858</mass>
										<!--The location (Vec3) of the mass center in the body frame.-->
										<mass_center>0.026772923365712426 0.0046427034738229641 0.01354121846531698</mass_center>
										<!--The elements of the inertia tensor (Vec6) as [Ixx Iyy Izz Ixy Ixz Iyz] measured about the mass_center and not the body origin.-->
										<inertia>6.4033625295778428e-05 0.00012806725059155686 0.00064033625295778431 0 0 0</inertia>
									</Body>
									<Body name="torso">
										<!--List of components that this component owns and serializes.-->
										<components>
											<PhysicalOffsetFrame name="torso_imu_offset">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>..</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>0.03369945000004429 0.36915444315882262 1.5431847362468165e-07</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>-1.6382136168991854 -0.51681091318751915 -0.033349752118520808</orientation>
											</PhysicalOffsetFrame>
										</components>
										<!--The geometry used to display the axes of this Frame.-->
										<FrameGeometry name="frame_geometry">
											<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
											<socket_frame>..</socket_frame>
											<!--Scale factors in X, Y, Z directions respectively.-->
											<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
										</FrameGeometry>
										<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
										<attached_geometry>
											<Mesh name="torso_geom_1">
												<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
												<socket_frame>..</socket_frame>
												<!--Scale factors in X, Y, Z directions respectively.-->
												<scale_factors>0.93856266636948982 0.93856266636948982 0.93856266636948982</scale_factors>
												<!--Default appearance attributes for this Geometry-->
												<Appearance>
													<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
													<opacity>1</opacity>
													<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
													<color>1 1 1</color>
												</Appearance>
												<!--Name of geometry file.-->
												<mesh_file>hat_spine.vtp</mesh_file>
											</Mesh>
											<Mesh name="torso_geom_2">
												<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
												<socket_frame>..</socket_frame>
												<!--Scale factors in X, Y, Z directions respectively.-->
												<scale_factors>0.93856266636948982 0.93856266636948982 0.93856266636948982</scale_factors>
												<!--Default appearance attributes for this Geometry-->
												<Appearance>
													<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
													<opacity>1</opacity>
													<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
													<color>1 1 1</color>
												</Appearance>
												<!--Name of geometry file.-->
												<mesh_file>hat_jaw.vtp</mesh_file>
											</Mesh>
											<Mesh name="torso_geom_3">
												<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
												<socket_frame>..</socket_frame>
												<!--Scale factors in X, Y, Z directions respectively.-->
												<scale_factors>0.93856266636948982 0.93856266636948982 0.93856266636948982</scale_factors>
												<!--Default appearance attributes for this Geometry-->
												<Appearance>
													<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
													<opacity>1</opacity>
													<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
													<color>1 1 1</color>
												</Appearance>
												<!--Name of geometry file.-->
												<mesh_file>hat_skull.vtp</mesh_file>
											</Mesh>
											<Mesh name="torso_geom_4">
												<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
												<socket_frame>..</socket_frame>
												<!--Scale factors in X, Y, Z directions respectively.-->
												<scale_factors>0.93856266636948982 0.93856266636948982 0.93856266636948982</scale_factors>
												<!--Default appearance attributes for this Geometry-->
												<Appearance>
													<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
													<opacity>1</opacity>
													<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
													<color>1 1 1</color>
												</Appearance>
												<!--Name of geometry file.-->
												<mesh_file>hat_ribs_scap.vtp</mesh_file>
											</Mesh>
										</attached_geometry>
										<!--Set of wrap objects fixed to this body that GeometryPaths can wrap over.This property used to be a member of Body but was moved up with the introduction of Frames.-->
										<WrapObjectSet name="wrapobjectset">
											<objects />
											<groups />
										</WrapObjectSet>
										<!--The mass of the body (kg)-->
										<mass>36.244345942947369</mass>
										<!--The location (Vec3) of the mass center in the body frame.-->
										<mass_center>-0.028156879991084693 0.30034005323823676 0</mass_center>
										<!--The elements of the inertia tensor (Vec6) as [Ixx Iyy Izz Ixy Ixz Iyz] measured about the mass_center and not the body origin.-->
										<inertia>1.3891208350133997 0.71175367300957848 1.3485164891408481 0 0 0</inertia>
									</Body>
								</objects>
								<groups />
							</BodySet>
							<!--List of joints that connect the bodies.-->
							<JointSet name="jointset">
								<objects>
									<CustomJoint name="ground_pelvis">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The parent frame for the joint.).-->
										<socket_parent_frame>ground_offset</socket_parent_frame>
										<!--Path to a Component that satisfies the Socket 'child_frame' of type PhysicalFrame (description: The child frame for the joint.).-->
										<socket_child_frame>pelvis_offset</socket_child_frame>
										<!--List containing the generalized coordinates (q's) that parameterize this joint.-->
										<coordinates>
											<Coordinate name="pelvis_tilt">
												<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
												<default_value>0</default_value>
												<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
												<default_speed_value>0</default_speed_value>
												<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
												<range>-1.5707963300000001 1.5707963300000001</range>
												<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
												<clamped>true</clamped>
												<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
												<locked>false</locked>
												<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
												<prescribed_function />
												<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
												<prescribed>false</prescribed>
											</Coordinate>
											<Coordinate name="pelvis_list">
												<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
												<default_value>0</default_value>
												<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
												<default_speed_value>0</default_speed_value>
												<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
												<range>-1.5707963300000001 1.5707963300000001</range>
												<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
												<clamped>true</clamped>
												<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
												<locked>false</locked>
												<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
												<prescribed_function />
												<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
												<prescribed>false</prescribed>
											</Coordinate>
											<Coordinate name="pelvis_rotation">
												<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
												<default_value>0</default_value>
												<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
												<default_speed_value>0</default_speed_value>
												<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
												<range>-6.2831853071795862 6.2831853071795862</range>
												<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
												<clamped>true</clamped>
												<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
												<locked>false</locked>
												<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
												<prescribed_function />
												<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
												<prescribed>false</prescribed>
											</Coordinate>
											<Coordinate name="pelvis_tx">
												<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
												<default_value>0</default_value>
												<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
												<default_speed_value>0</default_speed_value>
												<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
												<range>-50 50</range>
												<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
												<clamped>true</clamped>
												<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
												<locked>false</locked>
												<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
												<prescribed_function />
												<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
												<prescribed>false</prescribed>
											</Coordinate>
											<Coordinate name="pelvis_ty">
												<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
												<default_value>0.93999999999999995</default_value>
												<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
												<default_speed_value>0</default_speed_value>
												<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
												<range>-1 2</range>
												<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
												<clamped>true</clamped>
												<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
												<locked>false</locked>
												<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
												<prescribed_function />
												<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
												<prescribed>false</prescribed>
											</Coordinate>
											<Coordinate name="pelvis_tz">
												<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
												<default_value>0</default_value>
												<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
												<default_speed_value>0</default_speed_value>
												<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
												<range>-3 3</range>
												<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
												<clamped>true</clamped>
												<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
												<locked>false</locked>
												<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
												<prescribed_function />
												<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
												<prescribed>false</prescribed>
											</Coordinate>
										</coordinates>
										<!--Physical offset frames owned by the Joint that are typically used to satisfy the owning Joint's parent and child frame connections (sockets). PhysicalOffsetFrames are often used to describe the fixed transformation from a Body's origin to another location of interest on the Body (e.g., the joint center). When the joint is deleted, so are the PhysicalOffsetFrame components in this list.-->
										<frames>
											<PhysicalOffsetFrame name="ground_offset">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>/ground</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>0 0 0</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>0 0 0</orientation>
											</PhysicalOffsetFrame>
											<PhysicalOffsetFrame name="pelvis_offset">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>/bodyset/pelvis</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>0 0 0</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>0 0 0</orientation>
											</PhysicalOffsetFrame>
										</frames>
										<!--Defines how the child body moves with respect to the parent as a function of the generalized coordinates.-->
										<SpatialTransform>
											<!--3 Axes for rotations are listed first.-->
											<TransformAxis name="rotation1">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates>pelvis_tilt</coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>0 0 1</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<LinearFunction name="function">
													<coefficients> 1 0</coefficients>
												</LinearFunction>
											</TransformAxis>
											<TransformAxis name="rotation2">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates>pelvis_list</coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>1 0 0</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<LinearFunction name="function">
													<coefficients> 1 0</coefficients>
												</LinearFunction>
											</TransformAxis>
											<TransformAxis name="rotation3">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates>pelvis_rotation</coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>0 1 0</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<LinearFunction name="function">
													<coefficients> 1 0</coefficients>
												</LinearFunction>
											</TransformAxis>
											<!--3 Axes for translations are listed next.-->
											<TransformAxis name="translation1">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates>pelvis_tx</coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>1 0 0</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<LinearFunction name="function">
													<coefficients> 1 0</coefficients>
												</LinearFunction>
											</TransformAxis>
											<TransformAxis name="translation2">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates>pelvis_ty</coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>0 1 0</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<LinearFunction name="function">
													<coefficients> 1 0</coefficients>
												</LinearFunction>
											</TransformAxis>
											<TransformAxis name="translation3">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates>pelvis_tz</coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>0 0 1</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<LinearFunction name="function">
													<coefficients> 1 0</coefficients>
												</LinearFunction>
											</TransformAxis>
										</SpatialTransform>
									</CustomJoint>
									<CustomJoint name="hip_r">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The parent frame for the joint.).-->
										<socket_parent_frame>pelvis_offset</socket_parent_frame>
										<!--Path to a Component that satisfies the Socket 'child_frame' of type PhysicalFrame (description: The child frame for the joint.).-->
										<socket_child_frame>femur_r_offset</socket_child_frame>
										<!--List containing the generalized coordinates (q's) that parameterize this joint.-->
										<coordinates>
											<Coordinate name="hip_flexion_r">
												<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
												<default_value>0</default_value>
												<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
												<default_speed_value>0</default_speed_value>
												<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
												<range>-0.52359878000000004 2.0943950999999998</range>
												<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
												<clamped>true</clamped>
												<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
												<locked>false</locked>
												<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
												<prescribed_function />
												<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
												<prescribed>false</prescribed>
											</Coordinate>
											<Coordinate name="hip_adduction_r">
												<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
												<default_value>0</default_value>
												<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
												<default_speed_value>0</default_speed_value>
												<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
												<range>-0.87266463000000005 0.52359878000000004</range>
												<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
												<clamped>true</clamped>
												<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
												<locked>false</locked>
												<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
												<prescribed_function />
												<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
												<prescribed>false</prescribed>
											</Coordinate>
											<Coordinate name="hip_rotation_r">
												<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
												<default_value>0</default_value>
												<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
												<default_speed_value>0</default_speed_value>
												<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
												<range>-0.69813170000000002 0.69813170000000002</range>
												<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
												<clamped>true</clamped>
												<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
												<locked>false</locked>
												<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
												<prescribed_function />
												<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
												<prescribed>false</prescribed>
											</Coordinate>
										</coordinates>
										<!--Physical offset frames owned by the Joint that are typically used to satisfy the owning Joint's parent and child frame connections (sockets). PhysicalOffsetFrames are often used to describe the fixed transformation from a Body's origin to another location of interest on the Body (e.g., the joint center). When the joint is deleted, so are the PhysicalOffsetFrame components in this list.-->
										<frames>
											<PhysicalOffsetFrame name="pelvis_offset">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>/bodyset/pelvis</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>-0.050934282079999997 -0.077640738200000003 0.088663575999999994</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>0 0 0</orientation>
											</PhysicalOffsetFrame>
											<PhysicalOffsetFrame name="femur_r_offset">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>/bodyset/femur_r</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>0 0 0</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>0 0 0</orientation>
											</PhysicalOffsetFrame>
										</frames>
										<!--Defines how the child body moves with respect to the parent as a function of the generalized coordinates.-->
										<SpatialTransform>
											<!--3 Axes for rotations are listed first.-->
											<TransformAxis name="rotation1">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates>hip_flexion_r</coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>0 0 1</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<LinearFunction name="function">
													<coefficients> 1 0</coefficients>
												</LinearFunction>
											</TransformAxis>
											<TransformAxis name="rotation2">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates>hip_adduction_r</coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>1 0 0</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<LinearFunction name="function">
													<coefficients> 1 0</coefficients>
												</LinearFunction>
											</TransformAxis>
											<TransformAxis name="rotation3">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates>hip_rotation_r</coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>0 1 0</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<LinearFunction name="function">
													<coefficients> 1 0</coefficients>
												</LinearFunction>
											</TransformAxis>
											<!--3 Axes for translations are listed next.-->
											<TransformAxis name="translation1">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates></coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>1 0 0</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<MultiplierFunction name="function">
													<function>
														<Constant name="function">
															<value>0</value>
														</Constant>
													</function>
													<scale>0.90508</scale>
												</MultiplierFunction>
											</TransformAxis>
											<TransformAxis name="translation2">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates></coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>0 1 0</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<MultiplierFunction name="function">
													<function>
														<Constant name="function">
															<value>0</value>
														</Constant>
													</function>
													<scale>0.98917999999999995</scale>
												</MultiplierFunction>
											</TransformAxis>
											<TransformAxis name="translation3">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates></coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>0 0 1</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<MultiplierFunction name="function">
													<function>
														<Constant name="function">
															<value>0</value>
														</Constant>
													</function>
													<scale>1.1476</scale>
												</MultiplierFunction>
											</TransformAxis>
										</SpatialTransform>
									</CustomJoint>
									<CustomJoint name="knee_r">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The parent frame for the joint.).-->
										<socket_parent_frame>femur_r_offset</socket_parent_frame>
										<!--Path to a Component that satisfies the Socket 'child_frame' of type PhysicalFrame (description: The child frame for the joint.).-->
										<socket_child_frame>tibia_r_offset</socket_child_frame>
										<!--List containing the generalized coordinates (q's) that parameterize this joint.-->
										<coordinates>
											<Coordinate name="knee_angle_r">
												<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
												<default_value>0</default_value>
												<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
												<default_speed_value>0</default_speed_value>
												<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
												<range>0 2.4434609527920599</range>
												<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
												<clamped>true</clamped>
												<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
												<locked>false</locked>
												<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
												<prescribed_function />
												<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
												<prescribed>false</prescribed>
											</Coordinate>
										</coordinates>
										<!--Physical offset frames owned by the Joint that are typically used to satisfy the owning Joint's parent and child frame connections (sockets). PhysicalOffsetFrames are often used to describe the fixed transformation from a Body's origin to another location of interest on the Body (e.g., the joint center). When the joint is deleted, so are the PhysicalOffsetFrame components in this list.-->
										<frames>
											<PhysicalOffsetFrame name="femur_r_offset">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>/bodyset/femur_r</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>-0.0048172499999999995 -0.40737587200000003 -0.0020062000000000001</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>-1.64157 1.44618 1.5708</orientation>
											</PhysicalOffsetFrame>
											<PhysicalOffsetFrame name="tibia_r_offset">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>/bodyset/tibia_r</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>-0.0078110171377999997 -0.0035545948799999998 -0.0013741565648</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>-1.64157 1.44618 1.5708</orientation>
											</PhysicalOffsetFrame>
										</frames>
										<!--Defines how the child body moves with respect to the parent as a function of the generalized coordinates.-->
										<SpatialTransform>
											<!--3 Axes for rotations are listed first.-->
											<TransformAxis name="rotation1">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates>knee_angle_r</coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>1 0 0</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<LinearFunction name="function">
													<coefficients> 1 0</coefficients>
												</LinearFunction>
											</TransformAxis>
											<TransformAxis name="rotation2">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates>knee_angle_r</coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>0 0 1</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<PolynomialFunction name="function">
													<!--Coefficients of a polynomial function, from highest to lowest order.Polynomial order is n-1, where n is the number of coefficients.-->
													<coefficients>0.010832094539863 -0.025218325501241 -0.032847810398851998 0.079100011967026998 -1.4732523509004629e-08</coefficients>
												</PolynomialFunction>
											</TransformAxis>
											<TransformAxis name="rotation3">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates>knee_angle_r</coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>0 1 0</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<PolynomialFunction name="function">
													<!--Coefficients of a polynomial function, from highest to lowest order.Polynomial order is n-1, where n is the number of coefficients.-->
													<coefficients>0.025165762727423002 -0.16948005139054001 0.36949934868824902 -4.4303583088363053e-08</coefficients>
												</PolynomialFunction>
											</TransformAxis>
											<!--3 Axes for translations are listed next.-->
											<TransformAxis name="translation1">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates>knee_angle_r</coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>1 0 0</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<MultiplierFunction name="function">
													<function>
														<PolynomialFunction name="function">
															<!--Coefficients of a polynomial function, from highest to lowest order.Polynomial order is n-1, where n is the number of coefficients.-->
															<coefficients>0.00015904478788503811 -0.001015149915669 0.001817510974968 2.6414266451992301e-05 -7.7465635324718924e-07</coefficients>
														</PolynomialFunction>
													</function>
													<scale>1.0705</scale>
												</MultiplierFunction>
											</TransformAxis>
											<TransformAxis name="translation2">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates>knee_angle_r</coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>0 1 0</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<MultiplierFunction name="function">
													<function>
														<PolynomialFunction name="function">
															<!--Coefficients of a polynomial function, from highest to lowest order.Polynomial order is n-1, where n is the number of coefficients.-->
															<coefficients>-0.00057968780523386836 0.0050797657456260002 -0.011442375726364 0.0039369086688440004 -2.5163503832135249e-05</coefficients>
														</PolynomialFunction>
													</function>
													<scale>0.99456999999999995</scale>
												</MultiplierFunction>
											</TransformAxis>
											<TransformAxis name="translation3">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates>knee_angle_r</coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>0 0 1</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<MultiplierFunction name="function">
													<function>
														<PolynomialFunction name="function">
															<!--Coefficients of a polynomial function, from highest to lowest order.Polynomial order is n-1, where n is the number of coefficients.-->
															<coefficients>0.001208086889206 -0.004453611224706 0.00061164940729817395 0.006265429606387 -1.461912533723326e-05</coefficients>
														</PolynomialFunction>
													</function>
													<scale>1.1464000000000001</scale>
												</MultiplierFunction>
											</TransformAxis>
										</SpatialTransform>
									</CustomJoint>
									<CustomJoint name="patellofemoral_r">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The parent frame for the joint.).-->
										<socket_parent_frame>femur_r_offset</socket_parent_frame>
										<!--Path to a Component that satisfies the Socket 'child_frame' of type PhysicalFrame (description: The child frame for the joint.).-->
										<socket_child_frame>patella_r_offset</socket_child_frame>
										<!--List containing the generalized coordinates (q's) that parameterize this joint.-->
										<coordinates>
											<Coordinate name="knee_angle_r_beta">
												<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
												<default_value>0</default_value>
												<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
												<default_speed_value>0</default_speed_value>
												<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
												<range>-99999.899999999994 99999.899999999994</range>
												<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
												<clamped>false</clamped>
												<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
												<locked>false</locked>
												<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
												<prescribed_function />
												<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
												<prescribed>false</prescribed>
											</Coordinate>
										</coordinates>
										<!--Physical offset frames owned by the Joint that are typically used to satisfy the owning Joint's parent and child frame connections (sockets). PhysicalOffsetFrames are often used to describe the fixed transformation from a Body's origin to another location of interest on the Body (e.g., the joint center). When the joint is deleted, so are the PhysicalOffsetFrame components in this list.-->
										<frames>
											<PhysicalOffsetFrame name="femur_r_offset">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>/bodyset/femur_r</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>-0.0086603449999999998 -0.40574477719999996 -0.0031526000000000002</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>0 0 0</orientation>
											</PhysicalOffsetFrame>
											<PhysicalOffsetFrame name="patella_r_offset">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>/bodyset/patella_r</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>0 0 0</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>0 0 0</orientation>
											</PhysicalOffsetFrame>
										</frames>
										<!--Defines how the child body moves with respect to the parent as a function of the generalized coordinates.-->
										<SpatialTransform>
											<!--3 Axes for rotations are listed first.-->
											<TransformAxis name="rotation1">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates>knee_angle_r_beta</coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>0 0 1</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<SimmSpline name="function">
													<x> 0 0.1745329999999999937 0.3490659999999999874 0.52359900000000003661 0.6981319999999999748 0.87266500000000002402 1.0471999999999999087 1.2217299999999999827 1.3962600000000000566 1.5707999999999999741 1.745330000000000048 1.9198599999999999 2.0943999999999998174</x>
													<y> 0.0011368599999999999539 -0.0062921200000000000047 -0.1055819999999999953 -0.25368299999999999184 -0.41424499999999997435 -0.57904699999999997839 -0.74724400000000001931 -0.91798999999999997268 -1.0904400000000000759 -1.2637899999999999689 -1.4376299999999999635 -1.6118600000000000705 -1.7863400000000000389</y>
												</SimmSpline>
											</TransformAxis>
											<TransformAxis name="rotation2">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates></coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>0 1 0</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<Constant name="function">
													<value>0</value>
												</Constant>
											</TransformAxis>
											<TransformAxis name="rotation3">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates></coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>1 0 0</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<Constant name="function">
													<value>0</value>
												</Constant>
											</TransformAxis>
											<!--3 Axes for translations are listed next.-->
											<TransformAxis name="translation1">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates>knee_angle_r_beta</coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>1 0 0</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<MultiplierFunction name="function">
													<function>
														<SimmSpline name="function">
															<x> 0 0.1745329999999999937 0.3490659999999999874 0.52359900000000003661 0.6981319999999999748 0.87266500000000002402 1.0471999999999999087 1.2217299999999999827 1.3962600000000000566 1.5707999999999999741 1.745330000000000048 1.9198599999999999 2.0943999999999998174</x>
															<y> 0.052400000000000002132 0.048800000000000003098 0.043700000000000002731 0.037100000000000001033 0.02960000000000000131 0.021600000000000001144 0.013599999999999999242 0.0057000000000000002054 -0.0018999999999999999962 -0.0088000000000000005301 -0.014800000000000000655 -0.019599999999999999367 -0.022700000000000001427</y>
														</SimmSpline>
													</function>
													<scale>1.0705</scale>
												</MultiplierFunction>
											</TransformAxis>
											<TransformAxis name="translation2">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates>knee_angle_r_beta</coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>0 1 0</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<MultiplierFunction name="function">
													<function>
														<SimmSpline name="function">
															<x> 0 0.1745329999999999937 0.3490659999999999874 0.52359900000000003661 0.6981319999999999748 0.87266500000000002402 1.0471999999999999087 1.2217299999999999827 1.3962600000000000566 1.5707999999999999741 1.745330000000000048 1.9198599999999999 2.0943999999999998174</x>
															<y> -0.010800000000000000572 -0.018999999999999999528 -0.026300000000000000461 -0.032199999999999999456 -0.036700000000000003453 -0.039500000000000000389 -0.040800000000000002931 -0.040399999999999998412 -0.038399999999999996636 -0.034900000000000000466 -0.030099999999999998285 -0.024500000000000000944 -0.018700000000000001343</y>
														</SimmSpline>
													</function>
													<scale>0.99456999999999995</scale>
												</MultiplierFunction>
											</TransformAxis>
											<TransformAxis name="translation3">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates></coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>0 0 1</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<MultiplierFunction name="function">
													<function>
														<Constant name="function">
															<value>0.0027499999999999998</value>
														</Constant>
													</function>
													<scale>1.1464000000000001</scale>
												</MultiplierFunction>
											</TransformAxis>
										</SpatialTransform>
									</CustomJoint>
									<PinJoint name="ankle_r">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The parent frame for the joint.).-->
										<socket_parent_frame>tibia_r_offset</socket_parent_frame>
										<!--Path to a Component that satisfies the Socket 'child_frame' of type PhysicalFrame (description: The child frame for the joint.).-->
										<socket_child_frame>talus_r_offset</socket_child_frame>
										<!--List containing the generalized coordinates (q's) that parameterize this joint.-->
										<coordinates>
											<Coordinate name="ankle_angle_r">
												<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
												<default_value>0</default_value>
												<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
												<default_speed_value>0</default_speed_value>
												<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
												<range>-0.87266462599716477 0.87266462599716477</range>
												<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
												<clamped>true</clamped>
												<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
												<locked>false</locked>
												<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
												<prescribed_function />
												<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
												<prescribed>false</prescribed>
											</Coordinate>
										</coordinates>
										<!--Physical offset frames owned by the Joint that are typically used to satisfy the owning Joint's parent and child frame connections (sockets). PhysicalOffsetFrames are often used to describe the fixed transformation from a Body's origin to another location of interest on the Body (e.g., the joint center). When the joint is deleted, so are the PhysicalOffsetFrame components in this list.-->
										<frames>
											<PhysicalOffsetFrame name="tibia_r_offset">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>/bodyset/tibia_r</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>-0.0096557000000000014 -0.40224000000000004 0</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>0.175895 -0.105208 0.0186622</orientation>
											</PhysicalOffsetFrame>
											<PhysicalOffsetFrame name="talus_r_offset">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>/bodyset/talus_r</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>0 0 0</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>0.175895 -0.105208 0.0186622</orientation>
											</PhysicalOffsetFrame>
										</frames>
									</PinJoint>
									<PinJoint name="subtalar_r">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The parent frame for the joint.).-->
										<socket_parent_frame>talus_r_offset</socket_parent_frame>
										<!--Path to a Component that satisfies the Socket 'child_frame' of type PhysicalFrame (description: The child frame for the joint.).-->
										<socket_child_frame>calcn_r_offset</socket_child_frame>
										<!--List containing the generalized coordinates (q's) that parameterize this joint.-->
										<coordinates>
											<Coordinate name="subtalar_angle_r">
												<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
												<default_value>0</default_value>
												<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
												<default_speed_value>0</default_speed_value>
												<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
												<range>-0.61086523819801497 0.61086523819801497</range>
												<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
												<clamped>true</clamped>
												<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
												<locked>false</locked>
												<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
												<prescribed_function />
												<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
												<prescribed>false</prescribed>
											</Coordinate>
										</coordinates>
										<!--Physical offset frames owned by the Joint that are typically used to satisfy the owning Joint's parent and child frame connections (sockets). PhysicalOffsetFrames are often used to describe the fixed transformation from a Body's origin to another location of interest on the Body (e.g., the joint center). When the joint is deleted, so are the PhysicalOffsetFrame components in this list.-->
										<frames>
											<PhysicalOffsetFrame name="talus_r_offset">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>/bodyset/talus_r</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>-0.03773744140305766 -0.032460235121145556 0.0061283685854463124</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>-1.7681899999999999 0.906223 1.8196000000000001</orientation>
											</PhysicalOffsetFrame>
											<PhysicalOffsetFrame name="calcn_r_offset">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>/bodyset/calcn_r</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>0 0 0</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>-1.7681899999999999 0.906223 1.8196000000000001</orientation>
											</PhysicalOffsetFrame>
										</frames>
									</PinJoint>
									<PinJoint name="mtp_r">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The parent frame for the joint.).-->
										<socket_parent_frame>calcn_r_offset</socket_parent_frame>
										<!--Path to a Component that satisfies the Socket 'child_frame' of type PhysicalFrame (description: The child frame for the joint.).-->
										<socket_child_frame>toes_r_offset</socket_child_frame>
										<!--List containing the generalized coordinates (q's) that parameterize this joint.-->
										<coordinates>
											<Coordinate name="mtp_angle_r">
												<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
												<default_value>0</default_value>
												<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
												<default_speed_value>0</default_speed_value>
												<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
												<range>-0.78539816339744828 0.52359878000000004</range>
												<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
												<clamped>true</clamped>
												<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
												<locked>false</locked>
												<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
												<prescribed_function />
												<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
												<prescribed>false</prescribed>
											</Coordinate>
										</coordinates>
										<!--Physical offset frames owned by the Joint that are typically used to satisfy the owning Joint's parent and child frame connections (sockets). PhysicalOffsetFrames are often used to describe the fixed transformation from a Body's origin to another location of interest on the Body (e.g., the joint center). When the joint is deleted, so are the PhysicalOffsetFrame components in this list.-->
										<frames>
											<PhysicalOffsetFrame name="calcn_r_offset">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>/bodyset/calcn_r</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>0.13835256351992431 -0.0015475678246076549 0.00083568662528813354</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>-3.1415899999999999 0.61990100000000004 0</orientation>
											</PhysicalOffsetFrame>
											<PhysicalOffsetFrame name="toes_r_offset">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>/bodyset/toes_r</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>0 0 0</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>-3.1415899999999999 0.61990100000000004 0</orientation>
											</PhysicalOffsetFrame>
										</frames>
									</PinJoint>
									<CustomJoint name="hip_l">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The parent frame for the joint.).-->
										<socket_parent_frame>pelvis_offset</socket_parent_frame>
										<!--Path to a Component that satisfies the Socket 'child_frame' of type PhysicalFrame (description: The child frame for the joint.).-->
										<socket_child_frame>femur_l_offset</socket_child_frame>
										<!--List containing the generalized coordinates (q's) that parameterize this joint.-->
										<coordinates>
											<Coordinate name="hip_flexion_l">
												<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
												<default_value>0</default_value>
												<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
												<default_speed_value>0</default_speed_value>
												<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
												<range>-0.52359878000000004 2.0943950999999998</range>
												<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
												<clamped>true</clamped>
												<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
												<locked>false</locked>
												<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
												<prescribed_function />
												<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
												<prescribed>false</prescribed>
											</Coordinate>
											<Coordinate name="hip_adduction_l">
												<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
												<default_value>0</default_value>
												<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
												<default_speed_value>0</default_speed_value>
												<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
												<range>-0.87266463000000005 0.52359878000000004</range>
												<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
												<clamped>true</clamped>
												<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
												<locked>false</locked>
												<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
												<prescribed_function />
												<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
												<prescribed>false</prescribed>
											</Coordinate>
											<Coordinate name="hip_rotation_l">
												<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
												<default_value>0</default_value>
												<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
												<default_speed_value>0</default_speed_value>
												<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
												<range>-0.69813170000000002 0.69813170000000002</range>
												<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
												<clamped>true</clamped>
												<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
												<locked>false</locked>
												<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
												<prescribed_function />
												<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
												<prescribed>false</prescribed>
											</Coordinate>
										</coordinates>
										<!--Physical offset frames owned by the Joint that are typically used to satisfy the owning Joint's parent and child frame connections (sockets). PhysicalOffsetFrames are often used to describe the fixed transformation from a Body's origin to another location of interest on the Body (e.g., the joint center). When the joint is deleted, so are the PhysicalOffsetFrame components in this list.-->
										<frames>
											<PhysicalOffsetFrame name="pelvis_offset">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>/bodyset/pelvis</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>-0.050934282079999997 -0.077640738200000003 -0.088663575999999994</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>0 0 0</orientation>
											</PhysicalOffsetFrame>
											<PhysicalOffsetFrame name="femur_l_offset">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>/bodyset/femur_l</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>0 0 0</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>0 0 0</orientation>
											</PhysicalOffsetFrame>
										</frames>
										<!--Defines how the child body moves with respect to the parent as a function of the generalized coordinates.-->
										<SpatialTransform>
											<!--3 Axes for rotations are listed first.-->
											<TransformAxis name="rotation1">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates>hip_flexion_l</coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>0 0 1</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<LinearFunction name="function">
													<coefficients> 1 0</coefficients>
												</LinearFunction>
											</TransformAxis>
											<TransformAxis name="rotation2">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates>hip_adduction_l</coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>1 0 0</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<LinearFunction name="function">
													<coefficients> -1 0</coefficients>
												</LinearFunction>
											</TransformAxis>
											<TransformAxis name="rotation3">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates>hip_rotation_l</coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>0 1 0</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<LinearFunction name="function">
													<coefficients> -1 0</coefficients>
												</LinearFunction>
											</TransformAxis>
											<!--3 Axes for translations are listed next.-->
											<TransformAxis name="translation1">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates></coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>1 0 0</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<MultiplierFunction name="function">
													<function>
														<Constant name="function">
															<value>0</value>
														</Constant>
													</function>
													<scale>0.90508</scale>
												</MultiplierFunction>
											</TransformAxis>
											<TransformAxis name="translation2">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates></coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>0 1 0</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<MultiplierFunction name="function">
													<function>
														<Constant name="function">
															<value>0</value>
														</Constant>
													</function>
													<scale>0.98917999999999995</scale>
												</MultiplierFunction>
											</TransformAxis>
											<TransformAxis name="translation3">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates></coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>0 0 1</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<MultiplierFunction name="function">
													<function>
														<Constant name="function">
															<value>0</value>
														</Constant>
													</function>
													<scale>1.1476</scale>
												</MultiplierFunction>
											</TransformAxis>
										</SpatialTransform>
									</CustomJoint>
									<CustomJoint name="knee_l">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The parent frame for the joint.).-->
										<socket_parent_frame>femur_l_offset</socket_parent_frame>
										<!--Path to a Component that satisfies the Socket 'child_frame' of type PhysicalFrame (description: The child frame for the joint.).-->
										<socket_child_frame>tibia_l_offset</socket_child_frame>
										<!--List containing the generalized coordinates (q's) that parameterize this joint.-->
										<coordinates>
											<Coordinate name="knee_angle_l">
												<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
												<default_value>0</default_value>
												<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
												<default_speed_value>0</default_speed_value>
												<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
												<range>0 2.4434609527920599</range>
												<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
												<clamped>true</clamped>
												<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
												<locked>false</locked>
												<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
												<prescribed_function />
												<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
												<prescribed>false</prescribed>
											</Coordinate>
										</coordinates>
										<!--Physical offset frames owned by the Joint that are typically used to satisfy the owning Joint's parent and child frame connections (sockets). PhysicalOffsetFrames are often used to describe the fixed transformation from a Body's origin to another location of interest on the Body (e.g., the joint center). When the joint is deleted, so are the PhysicalOffsetFrame components in this list.-->
										<frames>
											<PhysicalOffsetFrame name="femur_l_offset">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>/bodyset/femur_l</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>-0.0048172499999999995 -0.40737587200000003 0.0020062000000000001</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>1.64157 -1.44618 1.5708</orientation>
											</PhysicalOffsetFrame>
											<PhysicalOffsetFrame name="tibia_l_offset">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>/bodyset/tibia_l</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>-0.0078110171377999997 -0.0035545948799999998 0.0013741565648</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>1.64157 -1.44618 1.5708</orientation>
											</PhysicalOffsetFrame>
										</frames>
										<!--Defines how the child body moves with respect to the parent as a function of the generalized coordinates.-->
										<SpatialTransform>
											<!--3 Axes for rotations are listed first.-->
											<TransformAxis name="rotation1">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates>knee_angle_l</coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>-1 0 0</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<LinearFunction name="function">
													<coefficients> 1 0</coefficients>
												</LinearFunction>
											</TransformAxis>
											<TransformAxis name="rotation2">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates>knee_angle_l</coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>0 0 1</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<PolynomialFunction name="function">
													<!--Coefficients of a polynomial function, from highest to lowest order.Polynomial order is n-1, where n is the number of coefficients.-->
													<coefficients>0.010832094539863 -0.025218325501241 -0.032847810398851998 0.079100011967026998 -1.4732523509004629e-08</coefficients>
												</PolynomialFunction>
											</TransformAxis>
											<TransformAxis name="rotation3">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates>knee_angle_l</coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>0 1 0</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<PolynomialFunction name="function">
													<!--Coefficients of a polynomial function, from highest to lowest order.Polynomial order is n-1, where n is the number of coefficients.-->
													<coefficients>-0.025165762727423002 0.16948005139054001 -0.36949934868824902 4.4303583088363053e-08</coefficients>
												</PolynomialFunction>
											</TransformAxis>
											<!--3 Axes for translations are listed next.-->
											<TransformAxis name="translation1">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates>knee_angle_l</coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>1 0 0</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<MultiplierFunction name="function">
													<function>
														<PolynomialFunction name="function">
															<!--Coefficients of a polynomial function, from highest to lowest order.Polynomial order is n-1, where n is the number of coefficients.-->
															<coefficients>0.00015904478788503811 -0.001015149915669 0.001817510974968 2.6414266451992301e-05 -7.7465635324718924e-07</coefficients>
														</PolynomialFunction>
													</function>
													<scale>1.0705</scale>
												</MultiplierFunction>
											</TransformAxis>
											<TransformAxis name="translation2">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates>knee_angle_l</coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>0 1 0</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<MultiplierFunction name="function">
													<function>
														<PolynomialFunction name="function">
															<!--Coefficients of a polynomial function, from highest to lowest order.Polynomial order is n-1, where n is the number of coefficients.-->
															<coefficients>-0.00057968780523386836 0.0050797657456260002 -0.011442375726364 0.0039369086688440004 -2.5163503832135249e-05</coefficients>
														</PolynomialFunction>
													</function>
													<scale>0.99456999999999995</scale>
												</MultiplierFunction>
											</TransformAxis>
											<TransformAxis name="translation3">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates>knee_angle_l</coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>0 0 1</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<MultiplierFunction name="function">
													<function>
														<PolynomialFunction name="function">
															<!--Coefficients of a polynomial function, from highest to lowest order.Polynomial order is n-1, where n is the number of coefficients.-->
															<coefficients>-0.001208086889206 0.004453611224706 -0.00061164940729817395 -0.006265429606387 1.461912533723326e-05</coefficients>
														</PolynomialFunction>
													</function>
													<scale>1.1464000000000001</scale>
												</MultiplierFunction>
											</TransformAxis>
										</SpatialTransform>
									</CustomJoint>
									<CustomJoint name="patellofemoral_l">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The parent frame for the joint.).-->
										<socket_parent_frame>femur_l_offset</socket_parent_frame>
										<!--Path to a Component that satisfies the Socket 'child_frame' of type PhysicalFrame (description: The child frame for the joint.).-->
										<socket_child_frame>patella_l_offset</socket_child_frame>
										<!--List containing the generalized coordinates (q's) that parameterize this joint.-->
										<coordinates>
											<Coordinate name="knee_angle_l_beta">
												<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
												<default_value>0</default_value>
												<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
												<default_speed_value>0</default_speed_value>
												<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
												<range>-99999.899999999994 99999.899999999994</range>
												<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
												<clamped>false</clamped>
												<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
												<locked>false</locked>
												<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
												<prescribed_function />
												<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
												<prescribed>false</prescribed>
											</Coordinate>
										</coordinates>
										<!--Physical offset frames owned by the Joint that are typically used to satisfy the owning Joint's parent and child frame connections (sockets). PhysicalOffsetFrames are often used to describe the fixed transformation from a Body's origin to another location of interest on the Body (e.g., the joint center). When the joint is deleted, so are the PhysicalOffsetFrame components in this list.-->
										<frames>
											<PhysicalOffsetFrame name="femur_l_offset">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>/bodyset/femur_l</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>-0.0086603449999999998 -0.40574477719999996 0.0031526000000000002</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>0 0 0</orientation>
											</PhysicalOffsetFrame>
											<PhysicalOffsetFrame name="patella_l_offset">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>/bodyset/patella_l</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>0 0 0</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>0 0 0</orientation>
											</PhysicalOffsetFrame>
										</frames>
										<!--Defines how the child body moves with respect to the parent as a function of the generalized coordinates.-->
										<SpatialTransform>
											<!--3 Axes for rotations are listed first.-->
											<TransformAxis name="rotation1">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates>knee_angle_l_beta</coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>0 0 1</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<SimmSpline name="function">
													<x> 0 0.1745329999999999937 0.3490659999999999874 0.52359900000000003661 0.6981319999999999748 0.87266500000000002402 1.0471999999999999087 1.2217299999999999827 1.3962600000000000566 1.5707999999999999741 1.745330000000000048 1.9198599999999999 2.0943999999999998174</x>
													<y> 0.0011368599999999999539 -0.0062921200000000000047 -0.1055819999999999953 -0.25368299999999999184 -0.41424499999999997435 -0.57904699999999997839 -0.74724400000000001931 -0.91798999999999997268 -1.0904400000000000759 -1.2637899999999999689 -1.4376299999999999635 -1.6118600000000000705 -1.7863400000000000389</y>
												</SimmSpline>
											</TransformAxis>
											<TransformAxis name="rotation2">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates></coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>0 1 0</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<Constant name="function">
													<value>0</value>
												</Constant>
											</TransformAxis>
											<TransformAxis name="rotation3">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates></coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>1 0 0</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<Constant name="function">
													<value>0</value>
												</Constant>
											</TransformAxis>
											<!--3 Axes for translations are listed next.-->
											<TransformAxis name="translation1">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates>knee_angle_l_beta</coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>1 0 0</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<MultiplierFunction name="function">
													<function>
														<SimmSpline name="function">
															<x> 0 0.1745329999999999937 0.3490659999999999874 0.52359900000000003661 0.6981319999999999748 0.87266500000000002402 1.0471999999999999087 1.2217299999999999827 1.3962600000000000566 1.5707999999999999741 1.745330000000000048 1.9198599999999999 2.0943999999999998174</x>
															<y> 0.052400000000000002132 0.048800000000000003098 0.043700000000000002731 0.037100000000000001033 0.02960000000000000131 0.021600000000000001144 0.013599999999999999242 0.0057000000000000002054 -0.0018999999999999999962 -0.0088000000000000005301 -0.014800000000000000655 -0.019599999999999999367 -0.022700000000000001427</y>
														</SimmSpline>
													</function>
													<scale>1.0705</scale>
												</MultiplierFunction>
											</TransformAxis>
											<TransformAxis name="translation2">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates>knee_angle_l_beta</coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>0 1 0</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<MultiplierFunction name="function">
													<function>
														<SimmSpline name="function">
															<x> 0 0.1745329999999999937 0.3490659999999999874 0.52359900000000003661 0.6981319999999999748 0.87266500000000002402 1.0471999999999999087 1.2217299999999999827 1.3962600000000000566 1.5707999999999999741 1.745330000000000048 1.9198599999999999 2.0943999999999998174</x>
															<y> -0.010800000000000000572 -0.018999999999999999528 -0.026300000000000000461 -0.032199999999999999456 -0.036700000000000003453 -0.039500000000000000389 -0.040800000000000002931 -0.040399999999999998412 -0.038399999999999996636 -0.034900000000000000466 -0.030099999999999998285 -0.024500000000000000944 -0.018700000000000001343</y>
														</SimmSpline>
													</function>
													<scale>0.99456999999999995</scale>
												</MultiplierFunction>
											</TransformAxis>
											<TransformAxis name="translation3">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates></coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>0 0 1</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<MultiplierFunction name="function">
													<function>
														<Constant name="function">
															<value>-0.0027499999999999998</value>
														</Constant>
													</function>
													<scale>1.1464000000000001</scale>
												</MultiplierFunction>
											</TransformAxis>
										</SpatialTransform>
									</CustomJoint>
									<PinJoint name="ankle_l">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The parent frame for the joint.).-->
										<socket_parent_frame>tibia_l_offset</socket_parent_frame>
										<!--Path to a Component that satisfies the Socket 'child_frame' of type PhysicalFrame (description: The child frame for the joint.).-->
										<socket_child_frame>talus_l_offset</socket_child_frame>
										<!--List containing the generalized coordinates (q's) that parameterize this joint.-->
										<coordinates>
											<Coordinate name="ankle_angle_l">
												<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
												<default_value>0</default_value>
												<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
												<default_speed_value>0</default_speed_value>
												<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
												<range>-0.87266462599716477 0.87266462599716477</range>
												<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
												<clamped>true</clamped>
												<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
												<locked>false</locked>
												<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
												<prescribed_function />
												<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
												<prescribed>false</prescribed>
											</Coordinate>
										</coordinates>
										<!--Physical offset frames owned by the Joint that are typically used to satisfy the owning Joint's parent and child frame connections (sockets). PhysicalOffsetFrames are often used to describe the fixed transformation from a Body's origin to another location of interest on the Body (e.g., the joint center). When the joint is deleted, so are the PhysicalOffsetFrame components in this list.-->
										<frames>
											<PhysicalOffsetFrame name="tibia_l_offset">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>/bodyset/tibia_l</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>-0.0096557000000000014 -0.40224000000000004 0</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>-0.175895 0.105208 0.0186622</orientation>
											</PhysicalOffsetFrame>
											<PhysicalOffsetFrame name="talus_l_offset">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>/bodyset/talus_l</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>0 0 0</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>-0.175895 0.105208 0.0186622</orientation>
											</PhysicalOffsetFrame>
										</frames>
									</PinJoint>
									<PinJoint name="subtalar_l">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The parent frame for the joint.).-->
										<socket_parent_frame>talus_l_offset</socket_parent_frame>
										<!--Path to a Component that satisfies the Socket 'child_frame' of type PhysicalFrame (description: The child frame for the joint.).-->
										<socket_child_frame>calcn_l_offset</socket_child_frame>
										<!--List containing the generalized coordinates (q's) that parameterize this joint.-->
										<coordinates>
											<Coordinate name="subtalar_angle_l">
												<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
												<default_value>0</default_value>
												<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
												<default_speed_value>0</default_speed_value>
												<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
												<range>-0.61086523819801497 0.61086523819801497</range>
												<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
												<clamped>true</clamped>
												<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
												<locked>false</locked>
												<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
												<prescribed_function />
												<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
												<prescribed>false</prescribed>
											</Coordinate>
										</coordinates>
										<!--Physical offset frames owned by the Joint that are typically used to satisfy the owning Joint's parent and child frame connections (sockets). PhysicalOffsetFrames are often used to describe the fixed transformation from a Body's origin to another location of interest on the Body (e.g., the joint center). When the joint is deleted, so are the PhysicalOffsetFrame components in this list.-->
										<frames>
											<PhysicalOffsetFrame name="talus_l_offset">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>/bodyset/talus_l</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>-0.03773744140305766 -0.032460235121145556 -0.0061283685854463124</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>1.7681899999999999 -0.906223 1.8196000000000001</orientation>
											</PhysicalOffsetFrame>
											<PhysicalOffsetFrame name="calcn_l_offset">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>/bodyset/calcn_l</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>0 0 0</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>1.7681899999999999 -0.906223 1.8196000000000001</orientation>
											</PhysicalOffsetFrame>
										</frames>
									</PinJoint>
									<PinJoint name="mtp_l">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The parent frame for the joint.).-->
										<socket_parent_frame>calcn_l_offset</socket_parent_frame>
										<!--Path to a Component that satisfies the Socket 'child_frame' of type PhysicalFrame (description: The child frame for the joint.).-->
										<socket_child_frame>toes_l_offset</socket_child_frame>
										<!--List containing the generalized coordinates (q's) that parameterize this joint.-->
										<coordinates>
											<Coordinate name="mtp_angle_l">
												<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
												<default_value>0</default_value>
												<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
												<default_speed_value>0</default_speed_value>
												<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
												<range>-0.78539816339744828 0.52359878000000004</range>
												<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
												<clamped>true</clamped>
												<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
												<locked>false</locked>
												<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
												<prescribed_function />
												<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
												<prescribed>false</prescribed>
											</Coordinate>
										</coordinates>
										<!--Physical offset frames owned by the Joint that are typically used to satisfy the owning Joint's parent and child frame connections (sockets). PhysicalOffsetFrames are often used to describe the fixed transformation from a Body's origin to another location of interest on the Body (e.g., the joint center). When the joint is deleted, so are the PhysicalOffsetFrame components in this list.-->
										<frames>
											<PhysicalOffsetFrame name="calcn_l_offset">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>/bodyset/calcn_l</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>0.13835256351992431 -0.0015475678246076549 -0.00083568662528813354</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>-3.1415899999999999 -0.61990100000000004 0</orientation>
											</PhysicalOffsetFrame>
											<PhysicalOffsetFrame name="toes_l_offset">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>/bodyset/toes_l</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>0 0 0</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>-3.1415899999999999 -0.61990100000000004 0</orientation>
											</PhysicalOffsetFrame>
										</frames>
									</PinJoint>
									<CustomJoint name="lumbar">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The parent frame for the joint.).-->
										<socket_parent_frame>pelvis_offset</socket_parent_frame>
										<!--Path to a Component that satisfies the Socket 'child_frame' of type PhysicalFrame (description: The child frame for the joint.).-->
										<socket_child_frame>torso_offset</socket_child_frame>
										<!--List containing the generalized coordinates (q's) that parameterize this joint.-->
										<coordinates>
											<Coordinate name="lumbar_ext">
												<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
												<default_value>0</default_value>
												<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
												<default_speed_value>0</default_speed_value>
												<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
												<range>-1.5707963300000001 1.5707963300000001</range>
												<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
												<clamped>true</clamped>
												<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
												<locked>false</locked>
												<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
												<prescribed_function />
												<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
												<prescribed>false</prescribed>
											</Coordinate>
											<Coordinate name="lumbar_bend">
												<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
												<default_value>0</default_value>
												<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
												<default_speed_value>0</default_speed_value>
												<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
												<range>-1.5707963300000001 1.5707963300000001</range>
												<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
												<clamped>true</clamped>
												<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
												<locked>false</locked>
												<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
												<prescribed_function />
												<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
												<prescribed>false</prescribed>
											</Coordinate>
											<Coordinate name="lumbar_rota">
												<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
												<default_value>0</default_value>
												<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
												<default_speed_value>0</default_speed_value>
												<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
												<range>-1.5707963300000001 1.5707963300000001</range>
												<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
												<clamped>true</clamped>
												<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
												<locked>false</locked>
												<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
												<prescribed_function />
												<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
												<prescribed>false</prescribed>
											</Coordinate>
										</coordinates>
										<!--Physical offset frames owned by the Joint that are typically used to satisfy the owning Joint's parent and child frame connections (sockets). PhysicalOffsetFrames are often used to describe the fixed transformation from a Body's origin to another location of interest on the Body (e.g., the joint center). When the joint is deleted, so are the PhysicalOffsetFrame components in this list.-->
										<frames>
											<PhysicalOffsetFrame name="pelvis_offset">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>/bodyset/pelvis</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>-0.091141555999999999 0.080618170000000003 0</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>0 0 0</orientation>
											</PhysicalOffsetFrame>
											<PhysicalOffsetFrame name="torso_offset">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>/bodyset/torso</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>0 0 0</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>0 0 0</orientation>
											</PhysicalOffsetFrame>
										</frames>
										<!--Defines how the child body moves with respect to the parent as a function of the generalized coordinates.-->
										<SpatialTransform>
											<!--3 Axes for rotations are listed first.-->
											<TransformAxis name="rotation1">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates>lumbar_ext</coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>0 0 1</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<LinearFunction name="function">
													<coefficients> 1 0</coefficients>
												</LinearFunction>
											</TransformAxis>
											<TransformAxis name="rotation2">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates>lumbar_bend</coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>1 0 0</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<LinearFunction name="function">
													<coefficients> 1 0</coefficients>
												</LinearFunction>
											</TransformAxis>
											<TransformAxis name="rotation3">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates>lumbar_rota</coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>0 1 0</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<LinearFunction name="function">
													<coefficients> 1 0</coefficients>
												</LinearFunction>
											</TransformAxis>
											<!--3 Axes for translations are listed next.-->
											<TransformAxis name="translation1">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates></coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>1 0 0</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<MultiplierFunction name="function">
													<function>
														<Constant name="function">
															<value>0</value>
														</Constant>
													</function>
													<scale>0.90508</scale>
												</MultiplierFunction>
											</TransformAxis>
											<TransformAxis name="translation2">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates></coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>0 1 0</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<MultiplierFunction name="function">
													<function>
														<Constant name="function">
															<value>0</value>
														</Constant>
													</function>
													<scale>0.98917999999999995</scale>
												</MultiplierFunction>
											</TransformAxis>
											<TransformAxis name="translation3">
												<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
												<coordinates></coordinates>
												<!--Rotation or translation axis for the transform.-->
												<axis>0 0 1</axis>
												<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
												<MultiplierFunction name="function">
													<function>
														<Constant name="function">
															<value>0</value>
														</Constant>
													</function>
													<scale>1.1476</scale>
												</MultiplierFunction>
											</TransformAxis>
										</SpatialTransform>
									</CustomJoint>
								</objects>
								<groups />
							</JointSet>
							<!--Controllers that provide the control inputs for Actuators.-->
							<ControllerSet name="controllerset">
								<objects />
								<groups />
							</ControllerSet>
							<!--Constraints in the model.-->
							<ConstraintSet name="constraintset">
								<objects>
									<CoordinateCouplerConstraint name="patellofemoral_knee_angle_r_con">
										<!--Flag indicating whether the constraint is enforced or not.Enforced means that the constraint is active in subsequent dynamics realizations. NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant the constraint was not being enforced. Thus, if 'isDisabled' is'true', then 'isEnforced' is false.-->
										<isEnforced>true</isEnforced>
										<!--Constraint function of generalized coordinates (to be specified) used to evaluate the constraint errors and their derivatives, and must valid to at least 2nd order. Constraint function must evaluate to zero when coordinates satisfy the constraint.-->
										<coupled_coordinates_function>
											<LinearFunction>
												<coefficients> 1 0</coefficients>
											</LinearFunction>
										</coupled_coordinates_function>
										<!--List of names of the right hand side (independent) coordinates. Note the constraint function above, must be able to handle multiple coordinate values if more than one coordinate name is provided.-->
										<independent_coordinate_names>knee_angle_r</independent_coordinate_names>
										<!--Name of the left-hand side (dependent) coordinate of the constraint coupling function.-->
										<dependent_coordinate_name>knee_angle_r_beta</dependent_coordinate_name>
										<!--Scale factor for the coupling function.-->
										<scale_factor>1</scale_factor>
									</CoordinateCouplerConstraint>
									<CoordinateCouplerConstraint name="patellofemoral_knee_angle_l_con">
										<!--Flag indicating whether the constraint is enforced or not.Enforced means that the constraint is active in subsequent dynamics realizations. NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant the constraint was not being enforced. Thus, if 'isDisabled' is'true', then 'isEnforced' is false.-->
										<isEnforced>true</isEnforced>
										<!--Constraint function of generalized coordinates (to be specified) used to evaluate the constraint errors and their derivatives, and must valid to at least 2nd order. Constraint function must evaluate to zero when coordinates satisfy the constraint.-->
										<coupled_coordinates_function>
											<LinearFunction>
												<coefficients> 1 0</coefficients>
											</LinearFunction>
										</coupled_coordinates_function>
										<!--List of names of the right hand side (independent) coordinates. Note the constraint function above, must be able to handle multiple coordinate values if more than one coordinate name is provided.-->
										<independent_coordinate_names>knee_angle_l</independent_coordinate_names>
										<!--Name of the left-hand side (dependent) coordinate of the constraint coupling function.-->
										<dependent_coordinate_name>knee_angle_l_beta</dependent_coordinate_name>
										<!--Scale factor for the coupling function.-->
										<scale_factor>1</scale_factor>
									</CoordinateCouplerConstraint>
								</objects>
								<groups />
							</ConstraintSet>
							<!--Forces in the model (includes Actuators).-->
							<ForceSet name="forceset">
								<objects>
									<ExpressionBasedCoordinateForce name="SubtalarDamping_r">
										<!--Coordinate (name) to apply force to.-->
										<coordinate>subtalar_angle_r</coordinate>
										<!--Expression of the force magnitude as a function of the coordinate value (q)and its time derivative (qdot). Note, expression cannot have any whitespaceseparating characters-->
										<expression>-60.21*exp(16.32*(q-0.65))+60.21*exp(-16.32*(q+0.65))-0.1*qdot</expression>
									</ExpressionBasedCoordinateForce>
									<ExpressionBasedCoordinateForce name="SubtalarDamping_l">
										<!--Coordinate (name) to apply force to.-->
										<coordinate>subtalar_angle_l</coordinate>
										<!--Expression of the force magnitude as a function of the coordinate value (q)and its time derivative (qdot). Note, expression cannot have any whitespaceseparating characters-->
										<expression>-60.21*exp(16.32*(q-0.65))+60.21*exp(-16.32*(q+0.65))-0.1*qdot</expression>
									</ExpressionBasedCoordinateForce>
									<ExpressionBasedCoordinateForce name="PassiveHipDampingX_r">
										<!--Coordinate (name) to apply force to.-->
										<coordinate>hip_flexion_r</coordinate>
										<!--Expression of the force magnitude as a function of the coordinate value (q)and its time derivative (qdot). Note, expression cannot have any whitespaceseparating characters-->
										<expression>-2.44*exp(5.05*(q-1.81))+1.51*exp(-21.88*(q+0.47))-0.1*qdot</expression>
									</ExpressionBasedCoordinateForce>
									<ExpressionBasedCoordinateForce name="PassiveHipDampingY_r">
										<!--Coordinate (name) to apply force to.-->
										<coordinate>hip_adduction_r</coordinate>
										<!--Expression of the force magnitude as a function of the coordinate value (q)and its time derivative (qdot). Note, expression cannot have any whitespaceseparating characters-->
										<expression>-0.03*exp(14.94*(q-0.50))+0.03*exp(-14.94*(q+0.50))-0.1*qdot</expression>
									</ExpressionBasedCoordinateForce>
									<ExpressionBasedCoordinateForce name="PassiveHipDampingZ_r">
										<!--Coordinate (name) to apply force to.-->
										<coordinate>hip_rotation_r</coordinate>
										<!--Expression of the force magnitude as a function of the coordinate value (q)and its time derivative (qdot). Note, expression cannot have any whitespaceseparating characters-->
										<expression>-0.03*exp(14.94*(q-0.92))+0.03*exp(-14.94*(q+0.92))-0.1*qdot</expression>
									</ExpressionBasedCoordinateForce>
									<ExpressionBasedCoordinateForce name="PassiveHipDampingX_l">
										<!--Coordinate (name) to apply force to.-->
										<coordinate>hip_flexion_l</coordinate>
										<!--Expression of the force magnitude as a function of the coordinate value (q)and its time derivative (qdot). Note, expression cannot have any whitespaceseparating characters-->
										<expression>-2.44*exp(5.05*(q-1.81))+1.51*exp(-21.88*(q+0.47))-0.1*qdot</expression>
									</ExpressionBasedCoordinateForce>
									<ExpressionBasedCoordinateForce name="PassiveHipDampingY_l">
										<!--Coordinate (name) to apply force to.-->
										<coordinate>hip_adduction_l</coordinate>
										<!--Expression of the force magnitude as a function of the coordinate value (q)and its time derivative (qdot). Note, expression cannot have any whitespaceseparating characters-->
										<expression>-0.03*exp(14.94*(q-0.50))+0.03*exp(-14.94*(q+0.50))-0.1*qdot</expression>
									</ExpressionBasedCoordinateForce>
									<ExpressionBasedCoordinateForce name="PassiveHipDampingZ_l">
										<!--Coordinate (name) to apply force to.-->
										<coordinate>hip_rotation_l</coordinate>
										<!--Expression of the force magnitude as a function of the coordinate value (q)and its time derivative (qdot). Note, expression cannot have any whitespaceseparating characters-->
										<expression>-0.03*exp(14.94*(q-0.92))+0.03*exp(-14.94*(q+0.92))-0.1*qdot</expression>
									</ExpressionBasedCoordinateForce>
									<ExpressionBasedCoordinateForce name="PassiveKneeDamping_r">
										<!--Coordinate (name) to apply force to.-->
										<coordinate>knee_angle_r</coordinate>
										<!--Expression of the force magnitude as a function of the coordinate value (q)and its time derivative (qdot). Note, expression cannot have any whitespaceseparating characters-->
										<expression>6.09*exp(33.94*(-q-0.13))-11.03*exp(-11.33*(-q+2.40))-0.1*qdot</expression>
									</ExpressionBasedCoordinateForce>
									<ExpressionBasedCoordinateForce name="PassiveKneeDamping_l">
										<!--Coordinate (name) to apply force to.-->
										<coordinate>knee_angle_l</coordinate>
										<!--Expression of the force magnitude as a function of the coordinate value (q)and its time derivative (qdot). Note, expression cannot have any whitespaceseparating characters-->
										<expression>6.09*exp(33.94*(-q-0.13))-11.03*exp(-11.33*(-q+2.40))-0.1*qdot</expression>
									</ExpressionBasedCoordinateForce>
									<ExpressionBasedBushingForce name="PassiveAnkleBushing_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Path to a Component that satisfies the Socket 'frame1' of type F (description: The first frame participating in this linker.).-->
										<socket_frame1>/bodyset/tibia_r</socket_frame1>
										<!--Path to a Component that satisfies the Socket 'frame2' of type F (description: The second frame participating in this linker.).-->
										<socket_frame2>/bodyset/calcn_r</socket_frame2>
										<!--Frames created/added to satisfy this component's connections.-->
										<frames>
											<PhysicalOffsetFrame name="tibia_r_offset_bushing">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>/bodyset/tibia_r</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>-0.0096557000000000014 -0.40224000000000004 0</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>0.175895 -0.105208 0.0186622</orientation>
											</PhysicalOffsetFrame>
											<PhysicalOffsetFrame name="calcn_r_offset_bushing">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>/bodyset/calcn_r</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>0.03773744140305766 0.032460235121145556 -0.0061283685854463124</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>0.175895 -0.105208 0.0186622</orientation>
											</PhysicalOffsetFrame>
										</frames>
										<!--Expression defining the contribution of theta_x deflection to the moment about body_2's x axis. The expression is a string and can not have any whitespace separating characters.-->
										<Mx_expression>9.52095038*theta_x-29.57608094*theta_x^2+169.01588105*theta_x^3</Mx_expression>
										<!--Expression defining the contribution of theta_y deflection to the moment about body_2's y axis. The expression is a string and can not have any whitespace separating characters.-->
										<My_expression>3.61796125*theta_y-10.1612135*theta_y^2+64.5279144*theta_y^3</My_expression>
										<!--Expression defining the contribution of theta_z deflection to the moment about body_2's z axis. The expression is a string and can not have any whitespace separating characters.-->
										<Mz_expression>5.98187224*theta_z+15.74951827*theta_z^2+33.6780792*theta_z^3</Mz_expression>
										<!--Expression defining the contribution of x deflection to the force in the x direction. The expression is a string and can not have any whitespace separating characters.-->
										<Fx_expression>0.0</Fx_expression>
										<!--Expression defining the contribution of y deflection to the force in the y direction. The expression is a string and can not have any whitespace separating characters.-->
										<Fy_expression>0.0</Fy_expression>
										<!--Expression defining the contribution of z deflection to the force in the z direction. The expression is a string and can not have any whitespace separating characters.-->
										<Fz_expression>0.0</Fz_expression>
										<!--Damping parameters resisting angular deflection rate (theta_dot).-->
										<rotational_damping>2 2 2</rotational_damping>
										<!--Damping parameters resisting translational deflection (delta_dot) .-->
										<translational_damping>0 0 0</translational_damping>
										<!--Scale factor applied to the bushing moments before displaying them.-->
										<moment_visual_scale>1</moment_visual_scale>
										<!--Scale factor applied to the bushing forces before displaying them.-->
										<force_visual_scale>1</force_visual_scale>
										<!--Scalar number signifying the ratio of length/diameter used to display the force and moment vectors.-->
										<visual_aspect_ratio>1</visual_aspect_ratio>
									</ExpressionBasedBushingForce>
									<ExpressionBasedBushingForce name="PassiveAnkleBushing_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Path to a Component that satisfies the Socket 'frame1' of type F (description: The first frame participating in this linker.).-->
										<socket_frame1>/bodyset/tibia_l</socket_frame1>
										<!--Path to a Component that satisfies the Socket 'frame2' of type F (description: The second frame participating in this linker.).-->
										<socket_frame2>/bodyset/calcn_l</socket_frame2>
										<!--Frames created/added to satisfy this component's connections.-->
										<frames>
											<PhysicalOffsetFrame name="tibia_l_offset_bushing">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>/bodyset/tibia_l</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>-0.0096557000000000014 -0.40224000000000004 0</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>-0.175895 0.105208 0.0186622</orientation>
											</PhysicalOffsetFrame>
											<PhysicalOffsetFrame name="calcn_l_offset_bushing">
												<!--The geometry used to display the axes of this Frame.-->
												<FrameGeometry name="frame_geometry">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Scale factors in X, Y, Z directions respectively.-->
													<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
												</FrameGeometry>
												<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
												<socket_parent>/bodyset/calcn_l</socket_parent>
												<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
												<translation>0.03773744140305766 0.032460235121145556 0.0061283685854463124</translation>
												<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
												<orientation>-0.175895 0.105208 0.0186622</orientation>
											</PhysicalOffsetFrame>
										</frames>
										<!--Expression defining the contribution of theta_x deflection to the moment about body_2's x axis. The expression is a string and can not have any whitespace separating characters.-->
										<Mx_expression>9.52095038*theta_x+29.57608094*theta_x^2+169.01588105*theta_x^3</Mx_expression>
										<!--Expression defining the contribution of theta_y deflection to the moment about body_2's y axis. The expression is a string and can not have any whitespace separating characters.-->
										<My_expression>3.61796125*theta_y+10.1612135*theta_y^2+64.5279144*theta_y^3</My_expression>
										<!--Expression defining the contribution of theta_z deflection to the moment about body_2's z axis. The expression is a string and can not have any whitespace separating characters.-->
										<Mz_expression>5.98187224*theta_z+15.74951827*theta_z^2+33.6780792*theta_z^3</Mz_expression>
										<!--Expression defining the contribution of x deflection to the force in the x direction. The expression is a string and can not have any whitespace separating characters.-->
										<Fx_expression>0.0</Fx_expression>
										<!--Expression defining the contribution of y deflection to the force in the y direction. The expression is a string and can not have any whitespace separating characters.-->
										<Fy_expression>0.0</Fy_expression>
										<!--Expression defining the contribution of z deflection to the force in the z direction. The expression is a string and can not have any whitespace separating characters.-->
										<Fz_expression>0.0</Fz_expression>
										<!--Damping parameters resisting angular deflection rate (theta_dot).-->
										<rotational_damping>2 2 2</rotational_damping>
										<!--Damping parameters resisting translational deflection (delta_dot) .-->
										<translational_damping>0 0 0</translational_damping>
										<!--Scale factor applied to the bushing moments before displaying them.-->
										<moment_visual_scale>1</moment_visual_scale>
										<!--Scale factor applied to the bushing forces before displaying them.-->
										<force_visual_scale>1</force_visual_scale>
										<!--Scalar number signifying the ratio of length/diameter used to display the force and moment vectors.-->
										<visual_aspect_ratio>1</visual_aspect_ratio>
									</ExpressionBasedBushingForce>
									<ExpressionBasedCoordinateForce name="PassiveToeDamping_r">
										<!--Coordinate (name) to apply force to.-->
										<coordinate>mtp_angle_r</coordinate>
										<!--Expression of the force magnitude as a function of the coordinate value (q)and its time derivative (qdot). Note, expression cannot have any whitespaceseparating characters-->
										<expression>-25.0*q-2.0*qdot</expression>
									</ExpressionBasedCoordinateForce>
									<ExpressionBasedCoordinateForce name="PassiveToeDamping_l">
										<!--Coordinate (name) to apply force to.-->
										<coordinate>mtp_angle_l</coordinate>
										<!--Expression of the force magnitude as a function of the coordinate value (q)and its time derivative (qdot). Note, expression cannot have any whitespaceseparating characters-->
										<expression>-25.0*q-2.0*qdot</expression>
									</ExpressionBasedCoordinateForce>
									<SmoothSphereHalfSpaceForce name="SmoothSphereHalfSpaceForce_heel_r">
										<!--Path to a Component that satisfies the Socket 'sphere' of type ContactSphere (description: The sphere participating in this contact.).-->
										<socket_sphere>/contactgeometryset/heel_r</socket_sphere>
										<!--Path to a Component that satisfies the Socket 'half_space' of type ContactHalfSpace (description: The half-space participating in this contact.).-->
										<socket_half_space>/contactgeometryset/floor</socket_half_space>
										<!--The stiffness constant (i.e., plain strain modulus), default is 1 (N/m^2)-->
										<stiffness>306000</stiffness>
										<!--The dissipation coefficient, default is 0 (s/m).-->
										<dissipation>2</dissipation>
										<!--The coefficient of static friction, default is 0.-->
										<static_friction>0.80000000000000004</static_friction>
										<!--The coefficient of dynamic friction, default is 0.-->
										<dynamic_friction>0.80000000000000004</dynamic_friction>
										<!--The coefficient of viscous friction, default is 0.-->
										<viscous_friction>0.5</viscous_friction>
										<!--The transition velocity, default is 0.01 (m/s).-->
										<transition_velocity>0.20000000000000001</transition_velocity>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hertz force. The larger the steeper the transition but the worse for optimization, default is 300.-->
										<hertz_smoothing>300</hertz_smoothing>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hunt-Crossley force. The larger the steeper the transition but the worse for optimization, default is 50.-->
										<hunt_crossley_smoothing>50</hunt_crossley_smoothing>
									</SmoothSphereHalfSpaceForce>
									<SmoothSphereHalfSpaceForce name="SmoothSphereHalfSpaceForce_mh1_r">
										<!--Path to a Component that satisfies the Socket 'sphere' of type ContactSphere (description: The sphere participating in this contact.).-->
										<socket_sphere>/contactgeometryset/mh1_r</socket_sphere>
										<!--Path to a Component that satisfies the Socket 'half_space' of type ContactHalfSpace (description: The half-space participating in this contact.).-->
										<socket_half_space>/contactgeometryset/floor</socket_half_space>
										<!--The stiffness constant (i.e., plain strain modulus), default is 1 (N/m^2)-->
										<stiffness>306000</stiffness>
										<!--The dissipation coefficient, default is 0 (s/m).-->
										<dissipation>2</dissipation>
										<!--The coefficient of static friction, default is 0.-->
										<static_friction>0.80000000000000004</static_friction>
										<!--The coefficient of dynamic friction, default is 0.-->
										<dynamic_friction>0.80000000000000004</dynamic_friction>
										<!--The coefficient of viscous friction, default is 0.-->
										<viscous_friction>0.5</viscous_friction>
										<!--The transition velocity, default is 0.01 (m/s).-->
										<transition_velocity>0.20000000000000001</transition_velocity>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hertz force. The larger the steeper the transition but the worse for optimization, default is 300.-->
										<hertz_smoothing>300</hertz_smoothing>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hunt-Crossley force. The larger the steeper the transition but the worse for optimization, default is 50.-->
										<hunt_crossley_smoothing>50</hunt_crossley_smoothing>
									</SmoothSphereHalfSpaceForce>
									<SmoothSphereHalfSpaceForce name="SmoothSphereHalfSpaceForce_mh3_r">
										<!--Path to a Component that satisfies the Socket 'sphere' of type ContactSphere (description: The sphere participating in this contact.).-->
										<socket_sphere>/contactgeometryset/mh3_r</socket_sphere>
										<!--Path to a Component that satisfies the Socket 'half_space' of type ContactHalfSpace (description: The half-space participating in this contact.).-->
										<socket_half_space>/contactgeometryset/floor</socket_half_space>
										<!--The stiffness constant (i.e., plain strain modulus), default is 1 (N/m^2)-->
										<stiffness>306000</stiffness>
										<!--The dissipation coefficient, default is 0 (s/m).-->
										<dissipation>2</dissipation>
										<!--The coefficient of static friction, default is 0.-->
										<static_friction>0.80000000000000004</static_friction>
										<!--The coefficient of dynamic friction, default is 0.-->
										<dynamic_friction>0.80000000000000004</dynamic_friction>
										<!--The coefficient of viscous friction, default is 0.-->
										<viscous_friction>0.5</viscous_friction>
										<!--The transition velocity, default is 0.01 (m/s).-->
										<transition_velocity>0.20000000000000001</transition_velocity>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hertz force. The larger the steeper the transition but the worse for optimization, default is 300.-->
										<hertz_smoothing>300</hertz_smoothing>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hunt-Crossley force. The larger the steeper the transition but the worse for optimization, default is 50.-->
										<hunt_crossley_smoothing>50</hunt_crossley_smoothing>
									</SmoothSphereHalfSpaceForce>
									<SmoothSphereHalfSpaceForce name="SmoothSphereHalfSpaceForce_mh5_r">
										<!--Path to a Component that satisfies the Socket 'sphere' of type ContactSphere (description: The sphere participating in this contact.).-->
										<socket_sphere>/contactgeometryset/mh5_r</socket_sphere>
										<!--Path to a Component that satisfies the Socket 'half_space' of type ContactHalfSpace (description: The half-space participating in this contact.).-->
										<socket_half_space>/contactgeometryset/floor</socket_half_space>
										<!--The stiffness constant (i.e., plain strain modulus), default is 1 (N/m^2)-->
										<stiffness>306000</stiffness>
										<!--The dissipation coefficient, default is 0 (s/m).-->
										<dissipation>2</dissipation>
										<!--The coefficient of static friction, default is 0.-->
										<static_friction>0.80000000000000004</static_friction>
										<!--The coefficient of dynamic friction, default is 0.-->
										<dynamic_friction>0.80000000000000004</dynamic_friction>
										<!--The coefficient of viscous friction, default is 0.-->
										<viscous_friction>0.5</viscous_friction>
										<!--The transition velocity, default is 0.01 (m/s).-->
										<transition_velocity>0.20000000000000001</transition_velocity>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hertz force. The larger the steeper the transition but the worse for optimization, default is 300.-->
										<hertz_smoothing>300</hertz_smoothing>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hunt-Crossley force. The larger the steeper the transition but the worse for optimization, default is 50.-->
										<hunt_crossley_smoothing>50</hunt_crossley_smoothing>
									</SmoothSphereHalfSpaceForce>
									<SmoothSphereHalfSpaceForce name="SmoothSphereHalfSpaceForce_hallux_r">
										<!--Path to a Component that satisfies the Socket 'sphere' of type ContactSphere (description: The sphere participating in this contact.).-->
										<socket_sphere>/contactgeometryset/hallux_r</socket_sphere>
										<!--Path to a Component that satisfies the Socket 'half_space' of type ContactHalfSpace (description: The half-space participating in this contact.).-->
										<socket_half_space>/contactgeometryset/floor</socket_half_space>
										<!--The stiffness constant (i.e., plain strain modulus), default is 1 (N/m^2)-->
										<stiffness>306000</stiffness>
										<!--The dissipation coefficient, default is 0 (s/m).-->
										<dissipation>2</dissipation>
										<!--The coefficient of static friction, default is 0.-->
										<static_friction>0.80000000000000004</static_friction>
										<!--The coefficient of dynamic friction, default is 0.-->
										<dynamic_friction>0.80000000000000004</dynamic_friction>
										<!--The coefficient of viscous friction, default is 0.-->
										<viscous_friction>0.5</viscous_friction>
										<!--The transition velocity, default is 0.01 (m/s).-->
										<transition_velocity>0.20000000000000001</transition_velocity>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hertz force. The larger the steeper the transition but the worse for optimization, default is 300.-->
										<hertz_smoothing>300</hertz_smoothing>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hunt-Crossley force. The larger the steeper the transition but the worse for optimization, default is 50.-->
										<hunt_crossley_smoothing>50</hunt_crossley_smoothing>
									</SmoothSphereHalfSpaceForce>
									<SmoothSphereHalfSpaceForce name="SmoothSphereHalfSpaceForce_othertoes_r">
										<!--Path to a Component that satisfies the Socket 'sphere' of type ContactSphere (description: The sphere participating in this contact.).-->
										<socket_sphere>/contactgeometryset/othertoes_r</socket_sphere>
										<!--Path to a Component that satisfies the Socket 'half_space' of type ContactHalfSpace (description: The half-space participating in this contact.).-->
										<socket_half_space>/contactgeometryset/floor</socket_half_space>
										<!--The stiffness constant (i.e., plain strain modulus), default is 1 (N/m^2)-->
										<stiffness>306000</stiffness>
										<!--The dissipation coefficient, default is 0 (s/m).-->
										<dissipation>2</dissipation>
										<!--The coefficient of static friction, default is 0.-->
										<static_friction>0.80000000000000004</static_friction>
										<!--The coefficient of dynamic friction, default is 0.-->
										<dynamic_friction>0.80000000000000004</dynamic_friction>
										<!--The coefficient of viscous friction, default is 0.-->
										<viscous_friction>0.5</viscous_friction>
										<!--The transition velocity, default is 0.01 (m/s).-->
										<transition_velocity>0.20000000000000001</transition_velocity>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hertz force. The larger the steeper the transition but the worse for optimization, default is 300.-->
										<hertz_smoothing>300</hertz_smoothing>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hunt-Crossley force. The larger the steeper the transition but the worse for optimization, default is 50.-->
										<hunt_crossley_smoothing>50</hunt_crossley_smoothing>
									</SmoothSphereHalfSpaceForce>
									<SmoothSphereHalfSpaceForce name="SmoothSphereHalfSpaceForce_latheel_r">
										<!--Path to a Component that satisfies the Socket 'sphere' of type ContactSphere (description: The sphere participating in this contact.).-->
										<socket_sphere>/contactgeometryset/latheel_r</socket_sphere>
										<!--Path to a Component that satisfies the Socket 'half_space' of type ContactHalfSpace (description: The half-space participating in this contact.).-->
										<socket_half_space>/contactgeometryset/floor</socket_half_space>
										<!--The stiffness constant (i.e., plain strain modulus), default is 1 (N/m^2)-->
										<stiffness>306000</stiffness>
										<!--The dissipation coefficient, default is 0 (s/m).-->
										<dissipation>2</dissipation>
										<!--The coefficient of static friction, default is 0.-->
										<static_friction>0.80000000000000004</static_friction>
										<!--The coefficient of dynamic friction, default is 0.-->
										<dynamic_friction>0.80000000000000004</dynamic_friction>
										<!--The coefficient of viscous friction, default is 0.-->
										<viscous_friction>0.5</viscous_friction>
										<!--The transition velocity, default is 0.01 (m/s).-->
										<transition_velocity>0.20000000000000001</transition_velocity>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hertz force. The larger the steeper the transition but the worse for optimization, default is 300.-->
										<hertz_smoothing>300</hertz_smoothing>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hunt-Crossley force. The larger the steeper the transition but the worse for optimization, default is 50.-->
										<hunt_crossley_smoothing>50</hunt_crossley_smoothing>
									</SmoothSphereHalfSpaceForce>
									<SmoothSphereHalfSpaceForce name="SmoothSphereHalfSpaceForce_medheel_r">
										<!--Path to a Component that satisfies the Socket 'sphere' of type ContactSphere (description: The sphere participating in this contact.).-->
										<socket_sphere>/contactgeometryset/medheel_r</socket_sphere>
										<!--Path to a Component that satisfies the Socket 'half_space' of type ContactHalfSpace (description: The half-space participating in this contact.).-->
										<socket_half_space>/contactgeometryset/floor</socket_half_space>
										<!--The stiffness constant (i.e., plain strain modulus), default is 1 (N/m^2)-->
										<stiffness>306000</stiffness>
										<!--The dissipation coefficient, default is 0 (s/m).-->
										<dissipation>2</dissipation>
										<!--The coefficient of static friction, default is 0.-->
										<static_friction>0.80000000000000004</static_friction>
										<!--The coefficient of dynamic friction, default is 0.-->
										<dynamic_friction>0.80000000000000004</dynamic_friction>
										<!--The coefficient of viscous friction, default is 0.-->
										<viscous_friction>0.5</viscous_friction>
										<!--The transition velocity, default is 0.01 (m/s).-->
										<transition_velocity>0.20000000000000001</transition_velocity>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hertz force. The larger the steeper the transition but the worse for optimization, default is 300.-->
										<hertz_smoothing>300</hertz_smoothing>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hunt-Crossley force. The larger the steeper the transition but the worse for optimization, default is 50.-->
										<hunt_crossley_smoothing>50</hunt_crossley_smoothing>
									</SmoothSphereHalfSpaceForce>
									<SmoothSphereHalfSpaceForce name="SmoothSphereHalfSpaceForce_mid_r">
										<!--Path to a Component that satisfies the Socket 'sphere' of type ContactSphere (description: The sphere participating in this contact.).-->
										<socket_sphere>/contactgeometryset/mid_r</socket_sphere>
										<!--Path to a Component that satisfies the Socket 'half_space' of type ContactHalfSpace (description: The half-space participating in this contact.).-->
										<socket_half_space>/contactgeometryset/floor</socket_half_space>
										<!--The stiffness constant (i.e., plain strain modulus), default is 1 (N/m^2)-->
										<stiffness>306000</stiffness>
										<!--The dissipation coefficient, default is 0 (s/m).-->
										<dissipation>2</dissipation>
										<!--The coefficient of static friction, default is 0.-->
										<static_friction>0.80000000000000004</static_friction>
										<!--The coefficient of dynamic friction, default is 0.-->
										<dynamic_friction>0.80000000000000004</dynamic_friction>
										<!--The coefficient of viscous friction, default is 0.-->
										<viscous_friction>0.5</viscous_friction>
										<!--The transition velocity, default is 0.01 (m/s).-->
										<transition_velocity>0.20000000000000001</transition_velocity>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hertz force. The larger the steeper the transition but the worse for optimization, default is 300.-->
										<hertz_smoothing>300</hertz_smoothing>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hunt-Crossley force. The larger the steeper the transition but the worse for optimization, default is 50.-->
										<hunt_crossley_smoothing>50</hunt_crossley_smoothing>
									</SmoothSphereHalfSpaceForce>
									<SmoothSphereHalfSpaceForce name="SmoothSphereHalfSpaceForce_latmid_r">
										<!--Path to a Component that satisfies the Socket 'sphere' of type ContactSphere (description: The sphere participating in this contact.).-->
										<socket_sphere>/contactgeometryset/latmid_r</socket_sphere>
										<!--Path to a Component that satisfies the Socket 'half_space' of type ContactHalfSpace (description: The half-space participating in this contact.).-->
										<socket_half_space>/contactgeometryset/floor</socket_half_space>
										<!--The stiffness constant (i.e., plain strain modulus), default is 1 (N/m^2)-->
										<stiffness>306000</stiffness>
										<!--The dissipation coefficient, default is 0 (s/m).-->
										<dissipation>2</dissipation>
										<!--The coefficient of static friction, default is 0.-->
										<static_friction>0.80000000000000004</static_friction>
										<!--The coefficient of dynamic friction, default is 0.-->
										<dynamic_friction>0.80000000000000004</dynamic_friction>
										<!--The coefficient of viscous friction, default is 0.-->
										<viscous_friction>0.5</viscous_friction>
										<!--The transition velocity, default is 0.01 (m/s).-->
										<transition_velocity>0.20000000000000001</transition_velocity>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hertz force. The larger the steeper the transition but the worse for optimization, default is 300.-->
										<hertz_smoothing>300</hertz_smoothing>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hunt-Crossley force. The larger the steeper the transition but the worse for optimization, default is 50.-->
										<hunt_crossley_smoothing>50</hunt_crossley_smoothing>
									</SmoothSphereHalfSpaceForce>
									<SmoothSphereHalfSpaceForce name="SmoothSphereHalfSpaceForce_latmid_l">
										<!--Path to a Component that satisfies the Socket 'sphere' of type ContactSphere (description: The sphere participating in this contact.).-->
										<socket_sphere>/contactgeometryset/latmid_l</socket_sphere>
										<!--Path to a Component that satisfies the Socket 'half_space' of type ContactHalfSpace (description: The half-space participating in this contact.).-->
										<socket_half_space>/contactgeometryset/floor</socket_half_space>
										<!--The stiffness constant (i.e., plain strain modulus), default is 1 (N/m^2)-->
										<stiffness>306000</stiffness>
										<!--The dissipation coefficient, default is 0 (s/m).-->
										<dissipation>2</dissipation>
										<!--The coefficient of static friction, default is 0.-->
										<static_friction>0.80000000000000004</static_friction>
										<!--The coefficient of dynamic friction, default is 0.-->
										<dynamic_friction>0.80000000000000004</dynamic_friction>
										<!--The coefficient of viscous friction, default is 0.-->
										<viscous_friction>0.5</viscous_friction>
										<!--The transition velocity, default is 0.01 (m/s).-->
										<transition_velocity>0.20000000000000001</transition_velocity>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hertz force. The larger the steeper the transition but the worse for optimization, default is 300.-->
										<hertz_smoothing>300</hertz_smoothing>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hunt-Crossley force. The larger the steeper the transition but the worse for optimization, default is 50.-->
										<hunt_crossley_smoothing>50</hunt_crossley_smoothing>
									</SmoothSphereHalfSpaceForce>
									<SmoothSphereHalfSpaceForce name="SmoothSphereHalfSpaceForce_medmid_r">
										<!--Path to a Component that satisfies the Socket 'sphere' of type ContactSphere (description: The sphere participating in this contact.).-->
										<socket_sphere>/contactgeometryset/medmid_r</socket_sphere>
										<!--Path to a Component that satisfies the Socket 'half_space' of type ContactHalfSpace (description: The half-space participating in this contact.).-->
										<socket_half_space>/contactgeometryset/floor</socket_half_space>
										<!--The stiffness constant (i.e., plain strain modulus), default is 1 (N/m^2)-->
										<stiffness>306000</stiffness>
										<!--The dissipation coefficient, default is 0 (s/m).-->
										<dissipation>2</dissipation>
										<!--The coefficient of static friction, default is 0.-->
										<static_friction>0.80000000000000004</static_friction>
										<!--The coefficient of dynamic friction, default is 0.-->
										<dynamic_friction>0.80000000000000004</dynamic_friction>
										<!--The coefficient of viscous friction, default is 0.-->
										<viscous_friction>0.5</viscous_friction>
										<!--The transition velocity, default is 0.01 (m/s).-->
										<transition_velocity>0.20000000000000001</transition_velocity>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hertz force. The larger the steeper the transition but the worse for optimization, default is 300.-->
										<hertz_smoothing>300</hertz_smoothing>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hunt-Crossley force. The larger the steeper the transition but the worse for optimization, default is 50.-->
										<hunt_crossley_smoothing>50</hunt_crossley_smoothing>
									</SmoothSphereHalfSpaceForce>
									<SmoothSphereHalfSpaceForce name="SmoothSphereHalfSpaceForce_medmid_l">
										<!--Path to a Component that satisfies the Socket 'sphere' of type ContactSphere (description: The sphere participating in this contact.).-->
										<socket_sphere>/contactgeometryset/medmid_l</socket_sphere>
										<!--Path to a Component that satisfies the Socket 'half_space' of type ContactHalfSpace (description: The half-space participating in this contact.).-->
										<socket_half_space>/contactgeometryset/floor</socket_half_space>
										<!--The stiffness constant (i.e., plain strain modulus), default is 1 (N/m^2)-->
										<stiffness>306000</stiffness>
										<!--The dissipation coefficient, default is 0 (s/m).-->
										<dissipation>2</dissipation>
										<!--The coefficient of static friction, default is 0.-->
										<static_friction>0.80000000000000004</static_friction>
										<!--The coefficient of dynamic friction, default is 0.-->
										<dynamic_friction>0.80000000000000004</dynamic_friction>
										<!--The coefficient of viscous friction, default is 0.-->
										<viscous_friction>0.5</viscous_friction>
										<!--The transition velocity, default is 0.01 (m/s).-->
										<transition_velocity>0.20000000000000001</transition_velocity>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hertz force. The larger the steeper the transition but the worse for optimization, default is 300.-->
										<hertz_smoothing>300</hertz_smoothing>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hunt-Crossley force. The larger the steeper the transition but the worse for optimization, default is 50.-->
										<hunt_crossley_smoothing>50</hunt_crossley_smoothing>
									</SmoothSphereHalfSpaceForce>
									<SmoothSphereHalfSpaceForce name="SmoothSphereHalfSpaceForce_heel_l">
										<!--Path to a Component that satisfies the Socket 'sphere' of type ContactSphere (description: The sphere participating in this contact.).-->
										<socket_sphere>/contactgeometryset/heel_l</socket_sphere>
										<!--Path to a Component that satisfies the Socket 'half_space' of type ContactHalfSpace (description: The half-space participating in this contact.).-->
										<socket_half_space>/contactgeometryset/floor</socket_half_space>
										<!--The stiffness constant (i.e., plain strain modulus), default is 1 (N/m^2)-->
										<stiffness>306000</stiffness>
										<!--The dissipation coefficient, default is 0 (s/m).-->
										<dissipation>2</dissipation>
										<!--The coefficient of static friction, default is 0.-->
										<static_friction>0.80000000000000004</static_friction>
										<!--The coefficient of dynamic friction, default is 0.-->
										<dynamic_friction>0.80000000000000004</dynamic_friction>
										<!--The coefficient of viscous friction, default is 0.-->
										<viscous_friction>0.5</viscous_friction>
										<!--The transition velocity, default is 0.01 (m/s).-->
										<transition_velocity>0.20000000000000001</transition_velocity>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hertz force. The larger the steeper the transition but the worse for optimization, default is 300.-->
										<hertz_smoothing>300</hertz_smoothing>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hunt-Crossley force. The larger the steeper the transition but the worse for optimization, default is 50.-->
										<hunt_crossley_smoothing>50</hunt_crossley_smoothing>
									</SmoothSphereHalfSpaceForce>
									<SmoothSphereHalfSpaceForce name="SmoothSphereHalfSpaceForce_mh1_l">
										<!--Path to a Component that satisfies the Socket 'sphere' of type ContactSphere (description: The sphere participating in this contact.).-->
										<socket_sphere>/contactgeometryset/mh1_l</socket_sphere>
										<!--Path to a Component that satisfies the Socket 'half_space' of type ContactHalfSpace (description: The half-space participating in this contact.).-->
										<socket_half_space>/contactgeometryset/floor</socket_half_space>
										<!--The stiffness constant (i.e., plain strain modulus), default is 1 (N/m^2)-->
										<stiffness>306000</stiffness>
										<!--The dissipation coefficient, default is 0 (s/m).-->
										<dissipation>2</dissipation>
										<!--The coefficient of static friction, default is 0.-->
										<static_friction>0.80000000000000004</static_friction>
										<!--The coefficient of dynamic friction, default is 0.-->
										<dynamic_friction>0.80000000000000004</dynamic_friction>
										<!--The coefficient of viscous friction, default is 0.-->
										<viscous_friction>0.5</viscous_friction>
										<!--The transition velocity, default is 0.01 (m/s).-->
										<transition_velocity>0.20000000000000001</transition_velocity>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hertz force. The larger the steeper the transition but the worse for optimization, default is 300.-->
										<hertz_smoothing>300</hertz_smoothing>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hunt-Crossley force. The larger the steeper the transition but the worse for optimization, default is 50.-->
										<hunt_crossley_smoothing>50</hunt_crossley_smoothing>
									</SmoothSphereHalfSpaceForce>
									<SmoothSphereHalfSpaceForce name="SmoothSphereHalfSpaceForce_mh3_l">
										<!--Path to a Component that satisfies the Socket 'sphere' of type ContactSphere (description: The sphere participating in this contact.).-->
										<socket_sphere>/contactgeometryset/mh3_l</socket_sphere>
										<!--Path to a Component that satisfies the Socket 'half_space' of type ContactHalfSpace (description: The half-space participating in this contact.).-->
										<socket_half_space>/contactgeometryset/floor</socket_half_space>
										<!--The stiffness constant (i.e., plain strain modulus), default is 1 (N/m^2)-->
										<stiffness>306000</stiffness>
										<!--The dissipation coefficient, default is 0 (s/m).-->
										<dissipation>2</dissipation>
										<!--The coefficient of static friction, default is 0.-->
										<static_friction>0.80000000000000004</static_friction>
										<!--The coefficient of dynamic friction, default is 0.-->
										<dynamic_friction>0.80000000000000004</dynamic_friction>
										<!--The coefficient of viscous friction, default is 0.-->
										<viscous_friction>0.5</viscous_friction>
										<!--The transition velocity, default is 0.01 (m/s).-->
										<transition_velocity>0.20000000000000001</transition_velocity>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hertz force. The larger the steeper the transition but the worse for optimization, default is 300.-->
										<hertz_smoothing>300</hertz_smoothing>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hunt-Crossley force. The larger the steeper the transition but the worse for optimization, default is 50.-->
										<hunt_crossley_smoothing>50</hunt_crossley_smoothing>
									</SmoothSphereHalfSpaceForce>
									<SmoothSphereHalfSpaceForce name="SmoothSphereHalfSpaceForce_mh5_l">
										<!--Path to a Component that satisfies the Socket 'sphere' of type ContactSphere (description: The sphere participating in this contact.).-->
										<socket_sphere>/contactgeometryset/mh5_l</socket_sphere>
										<!--Path to a Component that satisfies the Socket 'half_space' of type ContactHalfSpace (description: The half-space participating in this contact.).-->
										<socket_half_space>/contactgeometryset/floor</socket_half_space>
										<!--The stiffness constant (i.e., plain strain modulus), default is 1 (N/m^2)-->
										<stiffness>306000</stiffness>
										<!--The dissipation coefficient, default is 0 (s/m).-->
										<dissipation>2</dissipation>
										<!--The coefficient of static friction, default is 0.-->
										<static_friction>0.80000000000000004</static_friction>
										<!--The coefficient of dynamic friction, default is 0.-->
										<dynamic_friction>0.80000000000000004</dynamic_friction>
										<!--The coefficient of viscous friction, default is 0.-->
										<viscous_friction>0.5</viscous_friction>
										<!--The transition velocity, default is 0.01 (m/s).-->
										<transition_velocity>0.20000000000000001</transition_velocity>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hertz force. The larger the steeper the transition but the worse for optimization, default is 300.-->
										<hertz_smoothing>300</hertz_smoothing>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hunt-Crossley force. The larger the steeper the transition but the worse for optimization, default is 50.-->
										<hunt_crossley_smoothing>50</hunt_crossley_smoothing>
									</SmoothSphereHalfSpaceForce>
									<SmoothSphereHalfSpaceForce name="SmoothSphereHalfSpaceForce_hallux_l">
										<!--Path to a Component that satisfies the Socket 'sphere' of type ContactSphere (description: The sphere participating in this contact.).-->
										<socket_sphere>/contactgeometryset/hallux_l</socket_sphere>
										<!--Path to a Component that satisfies the Socket 'half_space' of type ContactHalfSpace (description: The half-space participating in this contact.).-->
										<socket_half_space>/contactgeometryset/floor</socket_half_space>
										<!--The stiffness constant (i.e., plain strain modulus), default is 1 (N/m^2)-->
										<stiffness>306000</stiffness>
										<!--The dissipation coefficient, default is 0 (s/m).-->
										<dissipation>2</dissipation>
										<!--The coefficient of static friction, default is 0.-->
										<static_friction>0.80000000000000004</static_friction>
										<!--The coefficient of dynamic friction, default is 0.-->
										<dynamic_friction>0.80000000000000004</dynamic_friction>
										<!--The coefficient of viscous friction, default is 0.-->
										<viscous_friction>0.5</viscous_friction>
										<!--The transition velocity, default is 0.01 (m/s).-->
										<transition_velocity>0.20000000000000001</transition_velocity>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hertz force. The larger the steeper the transition but the worse for optimization, default is 300.-->
										<hertz_smoothing>300</hertz_smoothing>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hunt-Crossley force. The larger the steeper the transition but the worse for optimization, default is 50.-->
										<hunt_crossley_smoothing>50</hunt_crossley_smoothing>
									</SmoothSphereHalfSpaceForce>
									<SmoothSphereHalfSpaceForce name="SmoothSphereHalfSpaceForce_othertoes_l">
										<!--Path to a Component that satisfies the Socket 'sphere' of type ContactSphere (description: The sphere participating in this contact.).-->
										<socket_sphere>/contactgeometryset/othertoes_l</socket_sphere>
										<!--Path to a Component that satisfies the Socket 'half_space' of type ContactHalfSpace (description: The half-space participating in this contact.).-->
										<socket_half_space>/contactgeometryset/floor</socket_half_space>
										<!--The stiffness constant (i.e., plain strain modulus), default is 1 (N/m^2)-->
										<stiffness>306000</stiffness>
										<!--The dissipation coefficient, default is 0 (s/m).-->
										<dissipation>2</dissipation>
										<!--The coefficient of static friction, default is 0.-->
										<static_friction>0.80000000000000004</static_friction>
										<!--The coefficient of dynamic friction, default is 0.-->
										<dynamic_friction>0.80000000000000004</dynamic_friction>
										<!--The coefficient of viscous friction, default is 0.-->
										<viscous_friction>0.5</viscous_friction>
										<!--The transition velocity, default is 0.01 (m/s).-->
										<transition_velocity>0.20000000000000001</transition_velocity>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hertz force. The larger the steeper the transition but the worse for optimization, default is 300.-->
										<hertz_smoothing>300</hertz_smoothing>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hunt-Crossley force. The larger the steeper the transition but the worse for optimization, default is 50.-->
										<hunt_crossley_smoothing>50</hunt_crossley_smoothing>
									</SmoothSphereHalfSpaceForce>
									<SmoothSphereHalfSpaceForce name="SmoothSphereHalfSpaceForce_latheel_l">
										<!--Path to a Component that satisfies the Socket 'sphere' of type ContactSphere (description: The sphere participating in this contact.).-->
										<socket_sphere>/contactgeometryset/latheel_l</socket_sphere>
										<!--Path to a Component that satisfies the Socket 'half_space' of type ContactHalfSpace (description: The half-space participating in this contact.).-->
										<socket_half_space>/contactgeometryset/floor</socket_half_space>
										<!--The stiffness constant (i.e., plain strain modulus), default is 1 (N/m^2)-->
										<stiffness>306000</stiffness>
										<!--The dissipation coefficient, default is 0 (s/m).-->
										<dissipation>2</dissipation>
										<!--The coefficient of static friction, default is 0.-->
										<static_friction>0.80000000000000004</static_friction>
										<!--The coefficient of dynamic friction, default is 0.-->
										<dynamic_friction>0.80000000000000004</dynamic_friction>
										<!--The coefficient of viscous friction, default is 0.-->
										<viscous_friction>0.5</viscous_friction>
										<!--The transition velocity, default is 0.01 (m/s).-->
										<transition_velocity>0.20000000000000001</transition_velocity>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hertz force. The larger the steeper the transition but the worse for optimization, default is 300.-->
										<hertz_smoothing>300</hertz_smoothing>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hunt-Crossley force. The larger the steeper the transition but the worse for optimization, default is 50.-->
										<hunt_crossley_smoothing>50</hunt_crossley_smoothing>
									</SmoothSphereHalfSpaceForce>
									<SmoothSphereHalfSpaceForce name="SmoothSphereHalfSpaceForce_medheel_l">
										<!--Path to a Component that satisfies the Socket 'sphere' of type ContactSphere (description: The sphere participating in this contact.).-->
										<socket_sphere>/contactgeometryset/medheel_l</socket_sphere>
										<!--Path to a Component that satisfies the Socket 'half_space' of type ContactHalfSpace (description: The half-space participating in this contact.).-->
										<socket_half_space>/contactgeometryset/floor</socket_half_space>
										<!--The stiffness constant (i.e., plain strain modulus), default is 1 (N/m^2)-->
										<stiffness>306000</stiffness>
										<!--The dissipation coefficient, default is 0 (s/m).-->
										<dissipation>2</dissipation>
										<!--The coefficient of static friction, default is 0.-->
										<static_friction>0.80000000000000004</static_friction>
										<!--The coefficient of dynamic friction, default is 0.-->
										<dynamic_friction>0.80000000000000004</dynamic_friction>
										<!--The coefficient of viscous friction, default is 0.-->
										<viscous_friction>0.5</viscous_friction>
										<!--The transition velocity, default is 0.01 (m/s).-->
										<transition_velocity>0.20000000000000001</transition_velocity>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hertz force. The larger the steeper the transition but the worse for optimization, default is 300.-->
										<hertz_smoothing>300</hertz_smoothing>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hunt-Crossley force. The larger the steeper the transition but the worse for optimization, default is 50.-->
										<hunt_crossley_smoothing>50</hunt_crossley_smoothing>
									</SmoothSphereHalfSpaceForce>
									<SmoothSphereHalfSpaceForce name="SmoothSphereHalfSpaceForce_mid_l">
										<!--Path to a Component that satisfies the Socket 'sphere' of type ContactSphere (description: The sphere participating in this contact.).-->
										<socket_sphere>/contactgeometryset/mid_l</socket_sphere>
										<!--Path to a Component that satisfies the Socket 'half_space' of type ContactHalfSpace (description: The half-space participating in this contact.).-->
										<socket_half_space>/contactgeometryset/floor</socket_half_space>
										<!--The stiffness constant (i.e., plain strain modulus), default is 1 (N/m^2)-->
										<stiffness>306000</stiffness>
										<!--The dissipation coefficient, default is 0 (s/m).-->
										<dissipation>2</dissipation>
										<!--The coefficient of static friction, default is 0.-->
										<static_friction>0.80000000000000004</static_friction>
										<!--The coefficient of dynamic friction, default is 0.-->
										<dynamic_friction>0.80000000000000004</dynamic_friction>
										<!--The coefficient of viscous friction, default is 0.-->
										<viscous_friction>0.5</viscous_friction>
										<!--The transition velocity, default is 0.01 (m/s).-->
										<transition_velocity>0.20000000000000001</transition_velocity>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hertz force. The larger the steeper the transition but the worse for optimization, default is 300.-->
										<hertz_smoothing>300</hertz_smoothing>
										<!--The parameter that determines the smoothness of the transition of the tanh used to smooth the Hunt-Crossley force. The larger the steeper the transition but the worse for optimization, default is 50.-->
										<hunt_crossley_smoothing>50</hunt_crossley_smoothing>
									</SmoothSphereHalfSpaceForce>
									<CoordinateActuator name="lumbar_ext">
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>-Inf</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>Inf</max_control>
										<!--Name of the generalized coordinate to which the actuator applies.-->
										<coordinate>lumbar_ext</coordinate>
										<!--The maximum generalized force produced by this actuator.-->
										<optimal_force>10</optimal_force>
									</CoordinateActuator>
									<CoordinateActuator name="lumbar_bend">
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>-Inf</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>Inf</max_control>
										<!--Name of the generalized coordinate to which the actuator applies.-->
										<coordinate>lumbar_bend</coordinate>
										<!--The maximum generalized force produced by this actuator.-->
										<optimal_force>10</optimal_force>
									</CoordinateActuator>
									<CoordinateActuator name="lumbar_rot">
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>-Inf</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>Inf</max_control>
										<!--Name of the generalized coordinate to which the actuator applies.-->
										<coordinate>lumbar_rota</coordinate>
										<!--The maximum generalized force produced by this actuator.-->
										<optimal_force>10</optimal_force>
									</CoordinateActuator>
									<SpringGeneralizedForce name="R_toe_spring">
										<!--Name of the coordinate to which this force is applied.-->
										<coordinate>mtp_angle_r</coordinate>
										<!--Spring stiffness.-->
										<stiffness>25</stiffness>
										<!--Coordinate value at which spring produces no force.-->
										<rest_length>0</rest_length>
										<!--Damping constant.-->
										<viscosity>0.029999999999999999</viscosity>
									</SpringGeneralizedForce>
									<SpringGeneralizedForce name="L_toe_spring">
										<!--Name of the coordinate to which this force is applied.-->
										<coordinate>mtp_angle_l</coordinate>
										<!--Spring stiffness.-->
										<stiffness>25</stiffness>
										<!--Coordinate value at which spring produces no force.-->
										<rest_length>0</rest_length>
										<!--Damping constant.-->
										<viscosity>0.029999999999999999</viscosity>
									</SpringGeneralizedForce>
									<DeGrooteFregly2016Muscle name="addbrev_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_r/hip_flexion_r /jointset/hip_r/hip_adduction_r /jointset/hip_r/hip_rotation_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.14730533111920865 -0.004075450434194345 -0.0054049524767514241 0.00076313812234932946 -0.00052179748737896537 -0.00034646785064683519 -0.059765871664816797 -0.0022515799620603703 -0.00089107981026786357 -0.00072455723995973331 -0.0012224071441558322 -0.012374060371354962 -0.0013664893122713167 0.0029465296287400616 -0.00085095665825247503 0.0052334938057833702 -0.0011737742313535 0.002554732460724496 0.0027744959408077512 -9.9730103281068616e-05 0.00069334476425267442 -0.027456208376918936 0.0013522598303102274 -0.00056952813826598387 0.0016619510276964459 0.0011260677308830135 -0.017468837368578155 -0.00081136765868947938 0.00017038389136791668 -0.00034605874166326227 0.0035516277965269003 -0.00069613117169543218 -0.0006474692381260496 0.0008571450227904127 0.00043287754986827561 -0.0011950058415506823 0.0030928481899161905 0.0024923973789605191 -0.0020698590949778778 -0.0013379047915712283 -0.0010275066724102844 0.0021851854272354984 -0.00026905444583810983 -0.0045241505359905881 0.0013187720096040239 -0.00092663461407645859 0.0056897016771418557 0.001228106218868691 0.00097982505583263987 0.0058882706760212287 7.9150350618361492e-05 0.0015137603425646672 0.00028038865194456779 -0.00072806261298236465 -0.00065574190901586296 -0.00050635241555675042</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>938.72950819672201</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.10410962230220239</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.042971715423664535</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.11478091999999999</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.50035146882994685</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="addlong_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_r/hip_flexion_r /jointset/hip_r/hip_adduction_r /jointset/hip_r/hip_rotation_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.24527259289170142 -0.0065419091769902959 -0.0014312701944717105 0.0011650364378122102 0.00031408518137004612 5.7067169214550711e-05 -0.065778012325472451 -0.0012531767143242251 -0.00010101290332050253 -0.00015754640024972372 -0.00019427482056327524 -0.0063080324914755112 0.00094217169351694396 0.0011523697073524387 -0.00070632573905441169 0.008902080276151034 3.1748236346502809e-05 0.0011403498514451068 0.0012368636286076045 -0.00032918053187364039 -0.00018423336808416391 -0.042304748435322684 -0.0004409959464001404 -0.00068154825505426105 -0.00014792097800746685 1.1464059089296916e-05 -0.014698732758686488 0.0014398313838999842 0.0012828423493963825 8.2176473573438582e-05 0.017341831789358258 0.0019602929145997768 0.00077570766829684152 0.008652664732837833 0.001111859406507418 0.0029605034329149744 0.0023360822086833052 0.0016291922598802491 -0.00062136605013293105 -0.00020258706308188602 -0.0019245231895480995 0.00045581903448233511 -0.00029100993006196706 -0.0029722101440224037 -0.00041586343951332535 -0.0020366190983099491 0.0077092695885965044 0.00060931431577628393 0.00023017301136528336 0.004150462810928084 -0.00012457758596866198 -0.0015917365977133095 0.00089310972542989487 -0.00033744464735895497 -0.00016754584619852361 -0.00071783502571088221</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>1375.1999999999998</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.10996026977503746</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.13446981858877402</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.13777038999999999</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.50010550174062107</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="addmagDist_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_r/hip_flexion_r /jointset/hip_r/hip_adduction_r /jointset/hip_r/hip_rotation_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.22428724172701914 -4.4756067448803937e-05 -0.0018277596903939375 0.00038184233058653153 0.00012226791008398529 -7.4058813055873009e-05 -0.054732706569394392 0.0019181505096841378 0.00069666978013422547 -0.00086617536976942543 -9.5350159252002332e-05 0.019751822844230951 0.0017883539004497221 0.0012567866287414775 -0.00010247100530988516 0.013841111033559363 -9.8485138795093762e-05 2.6649002872505953e-05 0.00076957020983313125 -0.00044732685552921329 -0.00082463979816190663 0.020530751739101429 0.003378421336942836 -0.0017495683877128193 -0.00065773863713963505 0.00017591149572774483 0.0061551245648345573 0.00042835823907243318 0.00012064135342923271 0.00034757903936334216 -0.011034859613190817 -0.00054552446547096118 -0.00064158670085348547 -0.0059678089021582593 -0.00012392540261064306 -0.00080036001916161258 0.027745002260888493 0.00014478374671611429 0.00096963032618137333 0.00028847539648177239 0.0093005528346634652 -0.0015447346862114764 -0.0010017419019279236 -0.010931866099251375 -5.6030541802241408e-05 -0.00048498802364690252 -0.0068520986897513195 -0.0016395566869050492 -3.7566617015181189e-05 -0.0048879173821911072 0.00010326190595341666 0.0033514846527254445 -0.0024190692565517714 0.00046186673021295582 0.00058769236512827984 0.00078164190244867234</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>895.94262295082092</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.17814765209650482</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.087246298551049456</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.19470502000000001</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.70000199462391366</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="addmagIsch_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_r/hip_flexion_r /jointset/hip_r/hip_adduction_r /jointset/hip_r/hip_rotation_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.33748252403001505 -0.0043793744877669259 0.0026449875496636034 0.00067563245937945181 0.00011817741249357198 0.00012543843072215099 -0.040262040559568855 -0.00051458426874049557 -0.0020869788846516932 0.00028431159087759228 -1.8312119673520588e-05 0.029823610471926793 4.0291542484794524e-05 -0.0019512850205213542 -4.0617020685947483e-06 0.011089217886457113 0.00054255450286867454 -0.00018653488349568278 -0.0019380630216582575 0.00026458479105870042 -0.00023243988810799055 0.035309935428967987 -0.0059702232501364586 -7.9480597245561863e-05 0.00042820505903020355 -0.00015297582449556608 0.00053215622078521183 -0.0017710697802691142 0.001538910050384564 -0.00019703371267031214 -0.021517938237107022 -0.0005517393379971011 0.0012819910738315907 -0.0055659651961685683 -0.00066781429069341625 0.0023587883167999414 0.026810218018305378 0.00263579375324579 -0.00027595172379429661 -0.00031109541428838523 7.9029423764937547e-05 0.002037703785969285 0.00071449142952972552 -0.01330839168148173 0.00030498515745169688 0.0012530074457982345 -0.0088423303016921459 0.0011623755980626411 8.2827450038108937e-05 -0.0010562572011921676 -0.00051172859210235351 0.0060887352309728594 -0.0017678659569564604 -0.00047398628791637805 0.00046083073112612738 0.00064897128536526704</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>895.94262295082092</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.15418834860969047</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.21583185683377692</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.16804429000000001</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.70208833583576524</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="addmagMid_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_r/hip_flexion_r /jointset/hip_r/hip_adduction_r /jointset/hip_r/hip_rotation_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.14983904957893449 -0.0001851140165067041 -0.0043148308147527171 0.0012582747409396189 0.00072122776216220711 0.00012756713134448843 -0.069751667559607169 8.0921542178731022e-05 0.002228064805257193 0.0014887544865637842 0.00085395168067614428 0.00032889593169247382 0.0011334504250787585 0.0046442034882188087 0.00089282776487119471 0.011538957766212624 1.9299913840724358e-05 0.0015856997530124995 0.0048245125144685272 0.0015047783027070461 0.001119948179081484 -0.0038724947994829176 0.0066077448547612744 -0.0021203379771308709 -0.00079660013595451475 0.00044114570097174722 -0.0023021400242208244 0.0029601327350027191 -0.0015825784176527625 -0.0016771667391516684 -0.00025957784923542893 -0.00013008592970622807 -0.0012595680303421159 0.00025835692498021433 0.0014879487841405708 -0.0021103604699633832 0.023703786754611704 0.0019897170798385249 0.00093976719635489436 -0.00020738914924044562 0.015913068016004939 0.00025579185870863822 -0.00086311227748415878 -0.002741233525853161 0.00052387289267853947 -0.0029908612119730806 0.00025806611072113044 -0.0031038276334385715 -8.4635108594802643e-06 -0.0018567090054568338 -0.0010363398230540733 -0.00095127139011777452 -0.0038226054930767073 0.00059555409193532479 -0.0012771075747716955 0.00074708895332941175</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>895.94262295082092</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.14358371991356617</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.046921029832673614</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.20730759000000001</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.70000007865603253</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="addmagProx_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_r/hip_flexion_r /jointset/hip_r/hip_adduction_r /jointset/hip_r/hip_rotation_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.12790601014351058 0.0064355354244448144 -0.0089061706242986038 -0.00058555993330836748 -0.0014738064459296051 -0.00090004226467218043 -0.053621019190930319 -0.0022938401504858244 -0.0012542961182212143 -0.0020813729759974614 -0.0019111697118957272 -0.012001983177372272 -0.0056073242113286875 0.0021501331023429798 -0.0021654131485624832 0.0042074811671341285 -0.0033752800109575921 0.0013420576421685863 0.0030168334163571389 -0.00026773575918712165 0.0013836020026127696 -0.01930726043786023 0.0063904156123984479 -0.00024825844191471436 0.0012931069450598728 0.00098477223506720363 -0.014186453153046804 0.00091943385423450745 0.0012719917415131672 0.00099232316418433825 -0.002126431146881335 0.00095732247241521115 -0.00030048744626849644 -0.0034378786844274866 0.0019977683093388406 -0.0031281837317675351 0.0061397522721530649 0.0033824987713397237 -0.00065739105410405913 -0.00061018149844407031 0.0040503704137161856 0.0037604143166054208 -0.0016096908784220675 -0.0017028142154339064 0.0019103069273715564 0.0010044227689742177 0.0044274752402668951 -0.0010997758872271102 0.00051536424400734117 0.0059422159141821439 -0.0010733534792980589 0.0013131177466742929 -0.00057654237658235805 -0.00033548602833967302 -0.0016782814055414388 -0.00028901533632203326</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>895.94262295082092</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.10562406278844201</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.051724254695833104</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.31148325999999998</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.70000008947633718</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="bflh_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_r/hip_flexion_r /jointset/hip_r/hip_adduction_r /jointset/hip_r/hip_rotation_r /jointset/knee_r/knee_angle_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.41977874211813837 -0.030113633669680555 0.010354335530445676 -0.013986968748033748 0.006336217315147938 -0.00087173193764913937 0.0051874833339328758 0.001217026916356825 6.3152462938999331e-05 -0.00018186770169331418 -2.3784460668324072e-05 0.00048564117586950579 0.00082793252847831143 0.00026270877141331664 -0.0002924922564414224 -0.0016374753275608632 0.00062387174661460501 -0.00011439967646213398 -0.000839300461317357 0.00039346512861522173 -0.00021167303578950494 -0.026590812354775947 -0.001218495504030353 0.0012165424995955558 -0.00070585352422098519 0.00014493646216942244 -0.0027566195665506164 -0.0016673436470832992 0.00058111594612017612 8.1086845890362708e-05 0.0014863083759531076 0.00098508676121403585 -0.00040331960365976027 0.0007399813791513811 -0.00011099500972604377 -5.2238838535506246e-06 0.020154678555563205 -0.00035707565645850007 7.7637498806367713e-05 2.8167658186929688e-05 -0.0010154707385367744 -0.0013144649237190375 0.00041611678507261403 -9.2136944519023364e-05 -3.8020104537845115e-05 -8.6536550418341018e-05 0.0061201960473221953 -0.00032885648403782456 0.00028705648220944593 0.0015774524120420672 -0.00034612211924371725 0.00033389134935729071 -0.001205837289017211 0.00023473065323500217 -0.00018240063612545493 0.00045345537096008574 0.044042066521860837 -0.0013781986374386379 8.7699411449621012e-05 0.00038527819703186339 -3.5201691282572923e-05 0.0028407347358531251 0.00035246108429425938 -0.0004721184632279226 0.00019080935819377399 0.0019558703155867531 -0.00010775981626249057 -1.2252412619345732e-06 -6.7173459392827831e-05 -0.00013248412160569208 3.4608297423833166e-05 0.0064209369607527347 0.00079793040940002123 6.0138605910445243e-06 -5.9909271063768123e-05 0.0030975113858729844 0.0031915096034592187 -0.0013371550450084894 -0.0022663753382028591 -6.1029001856215473e-05 -0.00088734836573257578 -0.025298743909083207 -0.00021613065213598381 -4.7416826826943143e-05 0.0013695638902082394 0.00026670991458787544 0.00037150697260236086 -0.0047955431966811447 -0.00027603545604577379 -0.0016846010664924947 0.0018367887730932214 0.020936965637762685 0.0012432689407891597 -0.00035934458720309251 -0.00012915783055367176 -0.0024085739537878727 -0.0002000397419396711 -9.6223177630509372e-05 -0.0014819802596130914 0.00011445308466513345 0.00010285425024363602 0.0027740053650576928 -8.1295568110971027e-05 0.00011021027932325497 0.001550608264714687 -0.00011697429264569832 3.2178334908697023e-05 -0.0076369345386253975 0.00031217351606565354 -0.00065718935274489349 0.0015972429071867626 -0.0095858954824172646 -0.00020323240786966214 2.2996835280660185e-05 -0.00019431683571500147 0.00021415114157232734 -2.9627507640063075e-05 -0.002480193752671942 -0.00018130241356031985 -0.00091893686880345255 0.0046384269120681599 -0.00098307182183695403 7.9396418273128695e-05 9.7231065266492112e-05 0.00055504053829536187 0.0004918294535683303</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>4</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>1969.7754098360701</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.092993929595153429</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.33277490724787756</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.17591823000000001</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.88786596902195869</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="bfsh_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/knee_r/knee_angle_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.22899775863261529 -0.022993414653113775 0.010058139035390516 -0.011804952925603506 0.0037984373367909172 -0.0002142147445442752</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>1</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>835.67213114753997</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.087384722990294622</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.12106701326825918</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.26422317000000001</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.69547650144206108</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="edl_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/ankle_r/ankle_angle_r /jointset/subtalar_r/subtalar_angle_r /jointset/mtp_r/mtp_angle_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.40243842666412882 0.004366393014506309 -0.0013106405696595054 -0.00025578249217314672 0.012216856892935456 -3.7913857426462277e-05 1.5164835249946782e-05 -0.001583522431282996 -0.00079362193372605914 -0.000960459177842851 -0.031816510335294486 2.6422668025249496e-05 -2.8320015306711492e-05 0.0002898806547343722 0.0002086838045553316 0.0082999851413407509 -0.0034112554030291202 -2.6512986629099729e-05 -0.0023772857024488385 0.0014956514704101104</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>3</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>905.24723340000003</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.08231790575024911</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.3190626477333211</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.21825824999999999</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.70922040052270319</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="ehl_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/ankle_r/ankle_angle_r /jointset/subtalar_r/subtalar_angle_r /jointset/mtp_r/mtp_angle_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.36762730696210316 0.0050949105884400886 -0.0019745259441195113 -0.0004763543849423818 0.00010924968805739975 -0.00037253442875849441 1.4100401696608787e-05 6.9503353742158533e-05 -0.00011377441381032834 -0.0031715327081095358 0.00028169163006393325 -0.0005106299298777801 -0.00034813636984978597 0.00054619743914061233 0.00013742053543592533 -0.03410626766357952 3.2660692428905448e-05 3.6431205012926737e-05 -5.8133016853583776e-05 0.0069432112421813907 0.00022717743842298551 -0.00041757727790600889 0.011144687971965677 -0.0016006678892169245 -3.2596688249873296e-05 -0.0038435058985398277 5.0892698390663307e-05 -9.5313164075653753e-05 0.0040792252474427682 -0.00052758365723247383 0.0085338901521826022 0.0022453843630451035 -0.00010867039052714247 0.0023433795565242378 0.000627995451615249</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>4</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>428.8013211</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.089193863061773154</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.27150221939288377</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.19726811</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.7196931718249916</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="fdl_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/ankle_r/ankle_angle_r /jointset/subtalar_r/subtalar_angle_r /jointset/mtp_r/mtp_angle_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.37821100319948869 -0.0050116713260140566 -0.00084808560118809632 0.00055336048996093687 -0.013555540681527237 -3.7241076389739916e-05 6.2091929292906324e-05 -0.00066219011024080824 -0.00018003458055014542 0.0021358489081133259 0.0063158899609662457 3.1015628055663805e-05 -5.691438848365012e-05 0.0069959002244917292 0.00021965290682439816 0.00025527394205063377 -0.0038292844612421799 -5.2920825188699789e-05 0.0040400874433640594 -0.00061964472294251871</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>3</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>634.76557377049198</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.05742218185766066</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.33008886779627944</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.22483914999999999</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.69987071191960037</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="fhl_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/ankle_r/ankle_angle_r /jointset/subtalar_r/subtalar_angle_r /jointset/mtp_r/mtp_angle_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.35592231227146476 -0.0044777161366457447 0.00083409856722905411 0.00099510022975547057 -0.011912814261441218 -3.2430245369068582e-05 5.3455634799975879e-05 -0.00084066626543736383 -0.00013453137403147253 0.0018301346757281177 0.011292947656051898 1.8475423272703673e-05 -4.3831805965654277e-05 0.0054206716890757489 0.00020868547551759989 -0.00021541809843184573 -0.0042822668425211577 -6.6110731495050705e-05 0.0031886436965667107 -0.00094934781425375049</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>3</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>1361.759016393441</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.063967919016107461</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.30438826237354571</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.25802551000000001</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.69990393264687867</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="gaslat_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/knee_r/knee_angle_r /jointset/ankle_r/ankle_angle_r /jointset/subtalar_r/subtalar_angle_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.45225817453494271 -0.0041638656132837243 0.0073103682288278649 0.00059199547161724255 -0.0018535675017138805 0.0063138776587184364 0.034307920390149849 -0.0021643092384345535 -0.0047526147285574735 0.00027556104193301252 0.0015715725549756195 -0.002895023845376531 0.0025784814056279931 -0.0028939911843120216 0.0012629741728257869 -0.0054793264701628649 -0.00024652696871237817 0.0004799095704327292 0.0005794205706728076 0.00023098696281453619 0.00022154715162487677 -0.026909121704032604 0.00043274501832029949 -0.00050911397682294821 -0.0010189777497352978 0.0011270773334422311 0.00077748628363768721 -0.00088441513058927024 -0.00031970744547822345 0.00038201421004154423 0.00025914186296561163 -4.8466413439757696e-05 -0.0004325691021858712 2.868801043201478e-05 0.0010607204898485684 -0.00033047208327140068 0.0062482032608789373 0.00011476393837692479 0.00039675306618920534 0.00045083664163227219 -0.0028689372115138917 0.0005850543095203913 8.1024511322107555e-06 -0.00070050659198978959 0.00020248256324358391 -0.00012622187190963231 -0.0032045952209749117 -0.00011560326277824897 -9.6776027907750624e-05 0.0020071636310957895 -0.000118438002105783 0.00022939500570612751 -0.00058070253722194347 8.1832148960527241e-06 -0.00040680724437166279 0.00041115941250388578</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>2362.58852459016</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.062966797543424394</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.37506304905724958</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.21022682000000001</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.50067516332542328</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="gasmed_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/knee_r/knee_angle_r /jointset/ankle_r/ankle_angle_r /jointset/subtalar_r/subtalar_angle_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.45694599836569716 -0.0016618691281681576 0.0075268002707770867 0.00029419171158792033 -0.00018618903069344962 -0.0032026834688094257 0.032848151769879735 -0.0030891228404907323 -0.0041501846003729565 0.00038092703182693966 0.0022293721999608949 -0.0025880203103686729 0.0024569558163306839 -0.0025936957225580078 -0.00075547945844729736 -0.0050956587291880497 0.0002196076131680922 0.00094007679720301506 0.00094966826660673363 -0.00020124643766908341 0.00038194289231567547 -0.0090258632125941353 0.00040059518167406106 -0.00068117271408774972 0.00037856028913609702 -9.2849811727685317e-05 0.0024787917343863253 0.00078591985217930894 -0.0011214225200257345 0.00012599984634995896 0.00085762670111462871 0.00057624614055462608 -0.00032733278399688797 -0.00061923378281073535 -5.2454910743339525e-05 -0.00037606980852223016 -0.017686837164749149 -0.00075473889988921872 0.00061422207396894012 -0.00018549657168211026 -0.0033854446567791133 -0.00057051962996972733 0.00042000641457357247 -0.00087711342507586394 -0.00024893177825998926 0.00014277125491860817 0.012205857972412641 0.00058738806345996547 -0.00015320418084447152 0.0017283558672730164 0.00011205586284770198 0.00024499062830571968 -0.005538184826600988 -0.00013716926142956951 -0.0002980558618829703 0.0010614993323864986</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>4673.2721311475398</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.056673637327583813</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.39409081111777411</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.16568155000000001</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.50022274724790983</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="glmax1_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_r/hip_flexion_r /jointset/hip_r/hip_adduction_r /jointset/hip_r/hip_rotation_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.19239302751197032 0.02281398794787972 0.014843817318182722 0.0031075344567682061 0.011887905042372429 0.00096029634948177406 0.02000681979489298 0.022459691520314462 -0.025679064063551599 -0.0082200564528082231 0.022803652708909616 -0.011832079992655882 0.0053369587953680268 0.010666465605958042 -0.015287776379364739 -0.003374717891560798 -0.007151018637383713 0.00090535166135913368 0.006028643875851906 0.0088344894816995041 0.0037128649349459563 0.04849079308548105 -0.033710740116426698 -0.028811229559222849 -0.013143270556972893 -0.0050575581617468834 0.011645878226141517 0.03152316586918507 0.038514569707119292 0.020105833556986714 -0.0083251675644679772 -0.035630135295297939 -0.027177050672271275 0.012974914473292557 0.010632767690020436 -0.0036808893803575928 -0.0055135429509132958 0.01684923859126039 0.029797268780123919 0.0093590062580754911 -0.012555416954521947 -0.040520842728010875 -0.016131727931528873 0.028023761936808039 0.026583279375217289 -0.011084500501560554 -0.0037285574825382996 -0.016053409773796875 -0.010884291254348376 0.017478967099195331 0.016494344774244472 -0.012932711352953985 0.0042663230455318073 0.0050964064919220139 -0.0068000410809009055 -0.0013802223374389491</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>1475.675409836067</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.13602057472057241</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.059370943616348169</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.35401178</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.70043366011413188</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="glmax2_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_r/hip_flexion_r /jointset/hip_r/hip_adduction_r /jointset/hip_r/hip_rotation_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.21883895804626549 0.02223785251292644 0.018781337946204863 -0.0068483826365874894 0.0016182134943752511 0.0015212902681255107 0.0091710043856783625 0.0084267337657681941 -0.0096306571587570534 -0.015141872507492049 0.0031722559675994039 -0.0068784350252689263 0.0053493720943978001 0.026794236329504152 -0.004144509350075409 -0.0022434719821816558 -0.021459078157908894 0.0026396333908032545 0.010720972603286099 0.010433210435461828 -0.00096152643704759298 0.059727714903584445 -0.02329551092352581 -0.019414629531034108 0.00039261091818337118 -7.8080152660252831e-05 0.017910718981969408 0.037266933218251627 0.014618764740819358 0.010319756197134685 -0.020991716415634111 -0.030319440743170809 -0.031620944516665833 0.016763051332785196 0.029132378338916062 -0.011325696605080898 -0.0071786104512529111 0.0079238350504203317 0.01488431759425746 0.0033401284567824443 -0.011899769092196089 -0.038140676215469058 -0.0088110546431881091 0.030101949804722 0.021162076629511712 -0.013136240163808073 -0.0035444610907393367 -0.0073709930243726143 -0.0057390065021530089 0.011324538855480137 0.013866180500349152 -0.012246033013436826 0.0024488886296538462 0.002336811182632432 -0.0040406991082999047 -0.00071062931237408412</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>2109.068852459025</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.15243233291320851</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.072007247634281943</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.36738206000000001</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.70081077931123392</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="glmax3_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_r/hip_flexion_r /jointset/hip_r/hip_adduction_r /jointset/hip_r/hip_rotation_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.2236375527096735 0.020911594719865968 0.0052304000319658853 -0.0067675972310103708 -0.0020813437773187799 -0.00041712786455420768 -0.054877687649202665 -0.0029623555578527842 0.0068835981877351194 -0.00031871040302311644 -0.00059384107130143731 0.010409925813134288 -0.012430577981750873 -0.0029257636693763031 -0.0015117747907314521 0.016025647855268541 0.0015280700181708809 -0.0012931756937458248 0.0011839027297501222 -0.0042036470307700545 0.002676452503163269 0.065203325237003118 -0.0088229881989170134 0.0080637175943765703 0.0066812169728392018 0.0011846294660432344 0.046950465513895576 0.0070903340244459732 -0.012174291707990373 -0.0010704111610008074 -0.019413955760699823 0.022348749924059906 0.0043593441849343155 -0.029879854241643165 -0.0058948448389985371 0.00046851133902431081 0.017458085336370572 -0.0011627991801516282 -0.01105111686708221 -0.0022882360719174628 -0.019418915873921069 0.0079772362740244528 0.0051353298168515049 -0.016234647999731875 -0.010763764876461844 0.014965599323200752 -0.021670659398826262 0.0022435750496277644 0.0032390280864193037 -0.00063405949988122742 -0.0043658274631427447 0.010714616973264016 0.0068895924754710193 -0.00056958031826981142 0.0020161306600845032 -0.0007769613479622461</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>1421.6311475409841</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.15890902281157679</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.08160148432435417</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.38241613000000002</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.7018363273912942</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="glmed1_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_r/hip_flexion_r /jointset/hip_r/hip_adduction_r /jointset/hip_r/hip_rotation_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.12554892868788706 -0.008615343541019848 0.011676784979305207 0.0041904735397306006 0.00092712221140209966 0.00027030954127983111 0.06177203507013667 0.015772405968210869 -0.034633083144008502 -0.010503380643171793 0.00090578690307475951 -0.01169977462527327 -0.013158615611547552 -0.0061422913463209869 0.00022551885707539771 -0.0055170646985815011 -0.003351241693766588 -0.0027530562466071993 0.002594508482071582 -0.0020372958599691126 -0.00037428941392885417 0.011407754005253203 -0.055298573711813785 -0.013896693755955754 0.0073571513221818291 0.001150649906902175 -0.0080368810265564524 0.032768366561493553 0.04253072854713584 0.0090807108629042035 0.0089297345073135539 0.0068588866197541142 0.0019886447539849885 -0.0057902029931234233 -0.00047100530100011723 -0.0022473807804109041 -0.0083122585628362961 0.0066750698719768272 -0.006239173341252232 -0.0044761727042420419 -0.025578856743032733 -0.033589480989457153 -0.011547385889986829 0.010602723484866648 0.0056337127470646453 0.0051461589684951466 -0.0011641271750686545 0.0046336805498160584 0.0037629654567570871 0.0046876471663710841 0.0043080816595537303 -0.0040719215067722891 0.00052007554864612012 -0.00032181971686823658 -0.00023738590589092291 -2.7513973846561384e-05</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>1640.2001531999999</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.086792866373403013</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.050803868538509191</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.31655591</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.70000008071402364</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="glmed2_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_r/hip_flexion_r /jointset/hip_r/hip_adduction_r /jointset/hip_r/hip_rotation_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.15368240029119223 0.009973276017205714 0.0026263809673923405 -0.0019394828294711196 -0.00017716938891399088 -6.3832356978127066e-05 0.055486206022987442 0.01605113247188392 -0.032318565856859174 -0.0053506362437655275 0.00089200208329072612 -0.013528551312997454 -0.0084217462811451461 0.001395012619514694 0.00019604252153303768 -0.0047837276366448078 -0.0025469110904372825 -0.0012862414882991292 0.001429628530599648 -0.0015640316488202406 -0.00043909395024088911 0.02198688593780147 -0.056211941185813699 -0.0064142916191142684 0.011365898488596838 0.0012184607024119717 0.0037211967811756784 0.028473436518615895 0.024061434253815159 0.0024533665195389316 0.0014021771638868302 -0.0030186627658840156 -0.0020296002840630087 -0.0026297388822924908 0.0011811076685794976 -0.0006301412109361587 -0.0039562000947885936 0.0024663957381130374 -0.01072941445959952 -0.0051364862460445519 -0.029113071339187883 -0.027317598711512899 -0.0027551398204491827 0.010228966680030807 0.0062940604156441317 0.002825503655134151 -0.0031555257027840273 0.0071872310829790044 0.0046916419674431003 0.0059851220723757467 0.0035116092987201569 -0.0035583222439527478 0.00075106042665864169 -0.0010152574224490854 -0.00042179535623867992 -6.668793950473011e-05</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>1147.6374923999999</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.093858705279544888</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.068440974766177359</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.31655591</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.70517390271474534</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="glmed3_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_r/hip_flexion_r /jointset/hip_r/hip_adduction_r /jointset/hip_r/hip_rotation_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.12343208767744071 0.022958769496784364 -0.0011727793766393474 -0.0048184479697183915 -0.00031085723362268575 -0.00023188324544870309 0.04438284024876734 0.016341338687395381 -0.027563386564094745 -0.0013238675856153048 0.00079414327685638133 -0.013673990455327795 -0.0086480824984568657 0.0035203802820215711 -0.0011473270698151789 -0.0027061295890292397 -0.0014819006968831087 -0.0017954525803002097 0.00067074658722097427 -0.0017507377008171997 -0.00042494603878357162 0.026668211785058134 -0.049027936006017174 -0.00071469880371803022 0.012325296471253654 0.0008476964495785287 0.010202022796124097 0.029316076059217495 0.01628053585280002 -0.0013901474646565118 -0.00026872985708150011 -0.0071924995077887327 -0.00397882735803088 -0.0029772161590104675 0.00096898036432961263 0.00013229522484844465 0.00056827967927390555 0.0003455106685838036 -0.014426285145456587 -0.005450798147749048 -0.027331097395414262 -0.026457533825891513 -0.00052345886700220644 0.0087397274297319021 0.0075362294356538205 0.0021734861037211667 -0.0048403283236852336 0.0071614274683886245 0.0055086900586139263 0.0069857960514424057 0.0039022052005634709 -0.00299370770958282 0.0011366165013671486 -0.001214619094485955 -0.00085264854265528975 -0.00015302206309018344</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>1306.7988963</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.082584291629112988</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.047576048508922476</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.31655591</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.7950859114036205</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="glmin1_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_r/hip_flexion_r /jointset/hip_r/hip_adduction_r /jointset/hip_r/hip_rotation_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.096002376829420324 -0.01286969430780273 0.017757253496782661 0.010396984369724683 0.0047466958202825003 0.0013482775775294038 0.059060534548666464 0.0027587190633829948 -0.03745896861224244 -0.010217582239023977 0.0020297607247890398 -0.01019453660586766 -0.017862777353453624 -0.013218073762043613 -0.0015329898903552325 -0.0052566747894598875 -0.0066976928051699454 -0.010359807339073126 0.0036119998633429165 -0.007019166193079936 -9.5544180100452705e-05 -0.0079958214039922027 -0.053690569732151978 -0.0093163155459686925 0.0057143814482138733 0.00013582539047744119 -0.0086191092086256253 0.050728357573247784 0.058843099967116695 0.011876406762424303 0.012583635572153593 0.011946197133461295 0.0084558518713275972 -0.012841310133198046 -0.00072481879371552246 -0.0048019945109061104 -0.0061319094081173833 0.00079008723950111347 -0.014800068095177031 -0.0055065827829812695 -0.028612390455466038 -0.04157441799628412 -0.019214569573038551 0.01762681513102083 0.0084842927864722389 0.010738337289235506 0.0014102685886064619 0.0092014794110561599 0.0073873567955145859 0.0026945145797234744 0.0034828619276133076 -0.007901725584065945 0.00015544833528271016 -0.00062076433913451799 0.00059972535913635353 1.6723870517650598e-05</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>561.06885245901594</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.09063510845482782</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.01162980391162579</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.17453293</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.70000007848709944</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="glmin2_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_r/hip_flexion_r /jointset/hip_r/hip_adduction_r /jointset/hip_r/hip_rotation_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.10218328546828336 0.0040908180891475509 0.0086334745294702076 0.0017150021320799617 0.0021361254236914075 0.00072998789536700154 0.053384799143757558 -0.0071086180388256794 -0.035644421339285956 -0.0064856180463984253 0.0007516207362488099 -0.01009572868970769 -0.0011663046079570145 0.0022878910997780298 -0.0022042557568431043 -0.0026310453884449006 -0.0010420643440683987 -0.0066076744616772008 0.0013752462709788233 -0.0050382153407764856 -0.0006564278235810623 -0.0031204302065782012 -0.050060304255610616 0.005583164098078729 0.013074392894709064 0.00064679217659601232 0.0058232294373704594 0.038985179405773951 0.025764773993543637 0.0028004519920282558 -0.0042106516965511875 -0.018835684636132707 -0.0049564035112437555 -0.0069524791339022375 -0.00077409640982008775 -0.0011624159306212259 -0.0045594185505075492 -0.0068799808789786199 -0.020975036636802405 -0.0071385686022320278 -0.026573841330534032 -0.016680379081041932 -0.00019795920502126705 0.021026752572945638 0.015556192152700411 0.0042548647599868986 0.0010984929920334059 0.010848892750630199 0.0071106475785436994 0.0011568622639823564 -0.002228314729544613 -0.0067789843094827546 -1.3074935997203129e-05 -0.0011493554811801978 0.00073072560038963687 1.7391901288370932e-05</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>592.22950819672201</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.07696746682781469</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.024992504955012828</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.69972376395559222</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="glmin3_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_r/hip_flexion_r /jointset/hip_r/hip_adduction_r /jointset/hip_r/hip_rotation_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.085770230785366955 0.013869897604939643 0.00066881521098782412 -0.0012532945036574763 0.0017038579829283702 0.000462838968688907 0.042553351930553679 -0.0041102421756436629 -0.023816640245738901 -3.1572899563788587e-05 0.00058883614344886273 -0.0098126270357036423 0.0022495024857950522 0.0056087679510929168 -0.0022572460678423976 -0.0010282916247045697 -8.1227006483192631e-05 -0.0036811443200928172 -0.00022237752744663579 -0.0041606051400240431 -0.00066324599218977253 0.0034894159987019996 -0.041800557378088632 0.0085037311180243477 0.0099681707547119858 -0.000312972037601735 0.012964738080583932 0.028166144723421563 0.0055065846296326517 -0.0032589344803819384 -0.0078302578101792433 -0.021498088810914615 -0.0051567778968190049 -0.0035772642663028345 0.0012574948896125486 0.0004369130689832651 -0.00051916477025374644 -0.0095832327568513287 -0.020361884991491282 -0.0052268485621330841 -0.024680456082695819 -0.0087421135741643074 0.0065020380135734582 0.017549068910389692 0.013569152607407287 0.0015027217364741649 0.00015895408830071385 0.011928941042807908 0.0068173750719249214 0.002409854467270114 -0.0027694877373686862 -0.0054782410276547856 -0.00028899876741976191 -0.0019172097415699066 0.00033626853494418853 5.3503798760228342e-05</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>670.16065573770595</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.038166753415075548</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.047872466317245413</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.01745329</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.69884674227801202</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="grac_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_r/hip_flexion_r /jointset/hip_r/hip_adduction_r /jointset/hip_r/hip_rotation_r /jointset/knee_r/knee_angle_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.43868555890690825 -0.025268573416081193 -0.0010756611894862584 -0.0074439250481217467 0.0034885603232393154 -0.00034724063706873144 0.0046859502161130939 0.0015876863629915089 0.0036057819359588518 -0.0023420428004773471 0.00024980228779578582 0.0024264845210885348 -0.0020834690731812901 0.0020898803016762171 -0.00053441161518701726 -0.0013836419639549589 7.1461665079271264e-05 6.8905591984742658e-05 -0.001225794684431597 0.00053703237632789398 -0.0002802825412507497 -0.063975499982644068 -0.00081744297441673636 0.0018516456509445759 -0.0012139161539571832 0.00022856474791117868 -0.0031429592145610814 -0.00082910566356441447 -0.0013317088228789707 0.00069902118325711638 -0.00063383997982063844 -0.00033456697042811429 -0.00034181664667704871 0.003669856749890503 -0.0014532310940401916 0.0013313421265532324 0.025175918353374196 -0.00062427362717916413 0.0004181970213786503 -9.7826495871162892e-05 -0.0035646224265761884 -0.0040946929632966105 0.0015643190775603746 -0.0040922197170582923 0.00060224817239483593 -0.00032602251729260158 0.014764270149749599 0.00073410138754417104 -0.00047816366510835553 0.0029195952984407449 -0.0020095646064674346 0.002311388128689678 -0.0018442572939400222 0.00026296294245391422 -0.00020785593394178096 -0.0011198149128671751 -0.01264515107579761 -0.0011271880648345356 -0.0025001042131815908 0.0014791877151076088 -0.00010987033404114116 -0.005123658202299982 0.0036004075597363232 -0.0022491177663503479 0.00034587197600961946 -1.8070397802589719e-05 0.0043896552293799986 -0.0013147913915672442 -0.0005264551899421821 0.00076267658804557176 -0.00057350883617131657 -0.0013697230534258425 -6.6282008029592236e-05 -0.00033262608625228487 8.1195221232117936e-05 0.00028181569952204916 -0.00023516722193806742 -0.00015532213958773054 0.0022572193240472833 -0.00031377497018899702 0.00027164294310371567 0.0059224931560875492 -0.0012737182250689423 0.00017642175114621376 0.0024230564930202902 -0.0009363150300061374 0.001909312057391459 0.0021898751363561599 -0.00019483764044176842 0.00022710728079419372 8.6354628546552554e-05 0.028363984865215023 -0.001884873281302691 0.0014085839815912871 -0.00027250620986351616 -0.00035334031600259069 -0.0014690262804580739 0.00053487478906306051 -0.00046490046162116216 -0.00015212945489011774 -0.00053401449087384957 0.0023042519120517421 -0.00051143129269142244 0.00039841258869446124 0.0016811880313590444 3.6020700176614358e-05 0.00056682315936098637 -0.017188792491663326 0.00038601029341049056 0.00041875948354389621 -0.003649411731585602 0.0028870414564544943 0.0010007783351084517 -0.00032548883422923482 0.0011135608079798167 4.8084530500656312e-05 -0.00029126029647366203 0.0011362656785236563 -0.00014159348763742471 0.00031087580355023249 0.002655188821141438 -0.0040210454980600776 -9.8648972398479698e-05 -0.00012574702966664062 -0.00058403210772436757 0.00052309250438805288</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>4</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>421.96721311475403</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.23790089809250242</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.16154223064284354</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.17200156</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.81455265023222312</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="iliacus_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_r/hip_flexion_r /jointset/hip_r/hip_adduction_r /jointset/hip_r/hip_rotation_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.20115086578971267 -0.006750475008279494 -0.00090068131302497158 0.0011616536847020532 0.0002858612996040422 8.3249897313416254e-06 0.0027585826088985543 0.00074401988185769847 -0.0017829395603026193 -0.00021095540349884336 0.00037191313077187572 -0.0072504910828771335 -0.0016816431185746594 -0.00045050010007370665 -0.00027413646360092796 0.0006966450523369235 -0.0027110914184328605 -0.0014156881541099614 0.0026604890593377025 -0.0014690894996337235 0.00039428318893460878 -0.023386000173450692 -0.0055692036255662542 -0.00076398966948678119 0.00097545746105470559 2.0704622170385385e-05 -0.0061220260785758169 -0.00045963020245525882 0.0033898208353006563 0.0010907277032930647 0.0094074429972207836 0.003567073343055061 0.0012594063299524697 -0.0051191461587020357 0.002999804283904158 -0.0052685358674903534 -0.010441062195440881 0.0010443867012231356 -0.00081015137461477394 -0.0006899424201739098 -0.0030183183879433821 -0.001186357633112842 0.00049929822855808046 0.0078772412573119219 -0.0003988535141657574 0.0067332372649408882 0.0012099380711086474 -0.00013648443982793577 0.00037438475190928897 -0.00012942250234231236 -0.0013391075386763812 -0.00076348332042358287 -9.5730738709063747e-05 0.00054991643035352388 -0.00089293864949710727 0.00032419182715557834</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>1531.71147540984</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.084974283334504908</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.10854713865682469</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.27991397000000001</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.50035473226150684</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="perbrev_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/ankle_r/ankle_angle_r /jointset/subtalar_r/subtalar_angle_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.18799409159622218 0.021377892721882199 -0.00094676376161161849 -0.00308919115167552 0.0030056220587792431 0.0052243573181562633 0.0067020677581352472 -0.006129972058832942 0.0068688948558653894 -0.0019031576974558103 -0.0067816063369089572 0.0091743268588520069 -0.00039068267050513112 0.00076659809814214183 0.00012637775503472406</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>2</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>4</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>781.80239820000008</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.059428704878914849</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.12883979624553624</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.20523611999999999</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.69841771804576547</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="perlong_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/ankle_r/ankle_angle_r /jointset/subtalar_r/subtalar_angle_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.36127022629945144 0.020940168765548529 -0.0022429087488811442 -0.0015540580962080817 0.0011292631492490924 0.0081512162590901983 0.0031409253819111287 -0.002822952740913568 0.0053668496423149494 -0.002088530349507229 -0.0054027314895568369 0.010497997839082961 -0.00049752348100960176 0.0016314964154550901 0.00015536305108201221</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>2</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>4</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>1673.0571320999998</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.071088437297690182</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.29458509426611801</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.24795247000000001</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.68968644623466924</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="piri_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_r/hip_flexion_r /jointset/hip_r/hip_adduction_r /jointset/hip_r/hip_rotation_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.14877430164073494 0.02661063058673039 -0.0052981437192480794 -0.0020309396506915855 0.00210053094106585 0.00060301353793685176 0.025819638575789814 0.00089529719694835474 -0.011989356749488055 0.003653233508832638 0.0010076619562899986 -0.0098269863350963268 0.0018041064846048348 0.0072350257603467551 0.00087348994939028153 -0.00082826341892794537 0.0010450882008305989 0.0011249140713197503 -4.5125200007407797e-05 -0.0015104899577541417 -0.00016079732094341059 0.010124452850139628 -0.028727047591781612 0.0075804244381283067 0.0040141504769662505 -0.0010397188972807248 0.020257404827963881 0.010890834746819979 -0.011247851666488232 -0.0048902417630535397 -0.0067066580622388138 -0.01091276925875765 -0.0022187543858731666 -0.0012623924569252828 -7.5310229181594799e-05 0.00024130134420598709 0.0017284337806470545 -0.012108986185266143 -0.012157439456880907 -0.001236758267870711 -0.016871228418734199 0.0040792186251913734 0.010262056965927328 0.0080610202366851302 0.0044427485158069378 0.00024360499404505576 -0.0013953234736971869 0.010218742943038881 0.0034964954795729222 -0.00015967249007971506 -0.0046175775622043086 -0.0016835500868119398 -0.00018777474552775404 -0.0018415870654839009 0.00064773765195237523 7.4258525960589026e-05</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>1544.6803278688501</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.026641318693648434</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.12390460916249141</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.17453293</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.79224514210839159</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="psoas_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_r/hip_flexion_r /jointset/hip_r/hip_adduction_r /jointset/hip_r/hip_rotation_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.22566083418486887 0.00023376998259084435 -0.0034000222672202706 9.8613992178829058e-06 5.7150607495439485e-05 -0.0070760250134255008 0.0026815724156565661 -0.00068055922077011428 0.00044283021600398137 -0.0045248597309442608 0.001484036003656732 0.00048521188359484328 -0.00052021534140135985 0.00049606450695474842 -3.8632790930989145e-05 -0.016953149311988679 -0.00095163194327566318 -0.0021809413615867636 -0.00017646710612678811 -0.0038792532534929263 -0.0063820998564626972 0.00064298559455436472 0.0086450746937274878 -0.0050441425142386861 0.0043562158248703848 -0.0086333575017376266 0.00093909939044634983 0.0011746524232663365 -0.0014676849880321564 -0.0015282420321436087 0.0020045491167410344 0.00052656269126085526 0.00054301237867258271 -0.0012895519891488526 0.00064590822883368458</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>4</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>2140.185245901645</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.1014572476888535</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.11167347209315476</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.21552513000000001</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.5006521634783222</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="recfem_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_r/hip_flexion_r /jointset/hip_r/hip_adduction_r /jointset/hip_r/hip_rotation_r /jointset/knee_r/knee_angle_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.5134835710347897 0.034712117429739564 0.036173196684087354 -0.047603273444423673 0.022132621523186454 -0.0036688034960740473 0.0076807277713119137 -0.012220015428516657 0.0069809911326773957 0.0016701765811406798 -0.0014710807265653628 0.019328206918248686 -0.032752729633027833 0.023925026233710001 -0.0063180794117377297 0.022024016886364031 -0.029288977616556432 0.0094632393913777792 0.0022319934475512129 0.0013928574500329423 -0.0076925280392509728 0.012562597531896315 0.011292560916019826 -0.0088023819993213528 0.00037204576945006377 0.00078266323486676716 -0.016988498825497335 0.041995299476155712 -0.047652025144450036 0.014448809193081389 0.017690558527459172 -0.011099816106829093 -0.00052310006182441568 0.061932992242423948 -0.026689063628649447 0.041059378197361385 -0.025107441193142899 0.0087107154192488413 -0.0015031371742807071 -0.00075272444894726746 -0.054446470356770249 0.093911613345008818 -0.036147734914689846 -0.059542615795160403 0.040074463488814431 -0.02570940747181235 0.026822613162493826 -0.062526518697333208 0.022183074784523544 0.044769009021385142 -0.057799501999663321 0.063336942231850241 0.0094565853400010967 0.0075966295426707206 -0.035398023005406662 0.0035633080004047889 -0.030957459929322046 -0.0037219413896605854 0.007734362476643576 -0.0054749230937088484 0.0014782690597774793 -0.008304951667507823 0.016528688370817245 -0.014180191752082546 0.0054773704886952636 -0.02937931813541203 0.020304430542037108 0.0017961540586642999 -0.049519660083261002 0.015345553697920202 -0.020944177518576738 0.0054778427564475245 -0.0096387593300677268 0.0090625392801699147 -0.0030893106461481585 0.033274122671669078 -0.028271278581369699 0.00025616212348907605 0.051370788062967916 -0.016870739128843883 0.020712214853520157 0.00035274280840860771 0.02890187962195441 -0.007015858628301252 -0.018039215562497039 0.031458879862825757 -0.030741562777371848 0.0057451954888880054 -0.0079067576089398104 0.059620587799408098 -0.027890992233651594 -0.016061722109063713 -0.0015684229114411893 -0.0029283219441288279 0.0009922211707214224 0.00023514829341310067 -0.0048721728158605624 -0.0026288079437699688 0.0046827009316725062 -0.015053703555486988 0.015420926810318987 0.0025456324619733354 0.0036474001367683192 0.00066481514190721278 -0.0027299826436492395 0.017801575985147582 -0.013621958566280123 0.0058771768644010633 -0.0023110972217267288 -0.027996848105335394 0.013029379238837735 0.00097981033784513578 0.0061325201665054048 -0.002266865996035932 0.0025435912294778373 0.0031427259525515527 0.0097822043949366572 -0.0045598897036454727 -0.0019515001215007182 -0.0087159642402999428 -0.0043700001689881548 0.0033275954046529583 0.00064325318762569492 -0.00028741787963779261 0.0013755745164905626 -0.0014702940441468225</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>4</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>3287.6114754098398</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.074168414699745694</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.45398287363408651</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.21701490000000001</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.89987812942923495</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="sart_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_r/hip_flexion_r /jointset/hip_r/hip_adduction_r /jointset/hip_r/hip_rotation_r /jointset/knee_r/knee_angle_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.58380267968290711 -0.010569858139930742 -0.020455732806593779 0.01379795890317727 -0.0061139938384522112 0.0011034630355521234 0.0034082804004914712 0.00029894697693793075 1.20816618341187e-05 -0.00035123136259340758 0.00013983842527331915 -0.0025494626622504651 0.00028458959835121495 0.00031042928337438925 -0.00015715413463566542 -0.0031300999830329926 0.0027285737822718894 -0.0007348640118032693 -0.0026827260886838379 0.0011740942527625926 -0.0008029019815466807 0.019928247193418236 0.0014587447063006843 -0.0031597587956436529 0.0022685533571818388 -0.00051236995694715632 0.0018380784298942634 -0.0029767506841731472 0.0021344517851422926 -0.0004782880220379162 0.0079687218085934958 -0.0060429988707105288 0.0018736953485666077 0.0031456352365901181 -0.0023056953709288085 -0.00039113224517537716 -0.028868774981355472 0.0012160658650422619 -0.00052289199325154551 1.4597982005095871e-05 -0.0010021941715873104 -0.00051504439457755128 0.00074701310671176392 -0.0028161403008020534 0.0012505878376119703 -0.0030995823378230473 -0.0039294804650786535 0.0037939608015477352 -0.0014295373809708684 -0.0031451193363502827 0.0034936182113859526 -0.0030970173956382987 0.0022429452910332397 -0.0011367212470238365 0.0031647431675404123 -2.9445243228221865e-05 -0.027199532904581374 -8.2608072352181232e-05 0.00029044421274858508 -0.00028056107097515292 6.8880907774403015e-05 0.0081505419590318963 -0.0027755094873039986 0.0027329792232000816 -0.00084370653231888131 0.001050560059585497 -0.0013683161353155423 0.00023777304727393026 0.00074176125390661152 -0.00071692985508317163 0.00087434092641765909 0.0053200967814521763 -0.00028967312157001892 -0.00061538972631190964 0.00036428204658411358 -0.0010960262803252855 0.0001771027834484842 0.0001443829175081172 -0.0043388706182345095 0.00063774647685369609 -0.0012989395356822002 0.013102328747023785 -0.0020393059573222865 0.00060848134749998952 0.0033446586418988044 -0.0021028460953880293 0.001977088994047335 -0.0027738443733512151 0.00086217249242312541 -0.003668026279748814 0.0011588951436081775 -0.026927941192907402 -0.00034173021219547565 0.00085589039588184878 -0.00032012015016482281 -0.0012064200175690609 0.00011314482386325792 0.00030301335625303568 -0.00020296676998209518 0.00071664809386491894 -0.00057163949535988081 0.0045210860658560807 0.00087178211565615456 -0.00052174436902993333 -0.0002766304057847304 -0.00085551832771323165 0.00044202999337573847 0.012387269741577261 0.00014057815838335172 -0.00016360660762044111 -0.0015058597931403178 0.0030959191239607713 -0.00071770161061584245 0.00035442807828303034 -0.00080186504223571571 -0.00040166935478867333 -0.00074520446076905352 0.000451113506995294 0.00019735307511332004 0.00086420295919947875 -0.0019794477102351602 0.0014869429737059136 -0.00014947730952569695 -1.3426653642766442e-05 -0.00047646678491402797 0.00015324286500217776</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>4</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>374.11967213114701</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.39211593594731875</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.13245939763807038</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.026135419999999999</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.72044094620323929</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="semimem_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_r/hip_flexion_r /jointset/hip_r/hip_adduction_r /jointset/hip_r/hip_rotation_r /jointset/knee_r/knee_angle_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.41158251420448155 -0.031695174997217017 -0.00032848993948676432 -0.0056803447578953345 0.0036163656165998938 -0.00046897892728937451 -0.00066545227131277582 0.0018888721983288431 -0.0010766959282297391 0.00015318636532210984 -3.5125093778878434e-05 0.0014005745319195205 0.0017379572071628303 -0.0002942102410780998 -0.00020702390145335421 -0.00064696424117428875 0.00089548942990312977 -0.00027381744121937005 -0.00067111394672634411 0.00031675898987639645 -4.6962561531882843e-06 -0.018241473115905012 0.00011171099242166655 -0.00034473990494332665 0.0002555837105446267 -4.8940738799716556e-05 -0.0025077899082229472 -0.0017310353338588786 3.7770710797114946e-05 0.00033498729439122073 0.00016157554687508055 -0.00060303356986076209 -9.1908171485723979e-05 0.0019957531244051696 -0.0010195526010092961 0.00034859106631131721 0.018657695274537745 0.00075176315901727192 -0.00044081742558471865 0.0001004600740097547 -0.0013551331132515059 -0.0015775171170118035 0.0008877677826267796 -0.0020049556110784406 0.00029618606443140155 -0.00077357511175253982 0.003308440800221002 0.0012604098365814563 -0.00045252127324040513 0.00028346885800810059 0.00092231330514298739 -3.2039199941215693e-05 -0.00101029793272189 -0.00046719357200025085 0.00093515365241277223 0.00050358311834192268 0.039174160322851967 -0.0013373384499673021 -0.00042696092593746883 0.00064110657564492909 -4.5126537488614883e-05 -0.0013047980321023525 -0.00051011130771562592 4.3490638343097598e-05 2.820497099128899e-05 0.0015042960172269981 0.00041047226330004002 -0.00017965326094631176 0.00054802461004218282 0.00010848093797905314 7.8668234396510502e-05 0.00023667193914057199 5.6905569426199279e-05 -0.00048816845942888342 0.00017714595095032754 0.0028631104339859603 0.0039250694007319465 -0.0017445715860725563 0.00064153748252013774 0.00052186304520853051 -0.00099035030353202599 -0.022067109211095701 -0.0010666448963823493 8.183949267511048e-05 0.0014693037356868369 -0.00019935959724715156 0.0010106600075855839 -0.0022351435006622458 -0.00019273566985679658 -0.0015750352439401864 0.0022836083364362715 0.018384596883097903 0.0012957194514130331 5.2625097514797173e-05 -0.00034617913119068072 0.00069763126516956598 0.0005553809324977463 -0.00012764102940155588 -0.0015689089131399705 0.00026406910421511616 -0.00067388178059255704 -0.00022418663052627832 0.00056564146965271925 -0.00024616761833291519 0.00072160306451405634 5.7539147935298051e-05 0.00015182441300062161 -0.0074806170340663723 0.00057368251713309779 -0.00048490752731489241 0.00090393819525657042 -0.0082733947176829668 -0.00025698922848560197 0.00014126280754789004 0.00026919467792651131 3.9405721276893253e-05 -0.0001405256962539402 -0.00012361417513045286 0.00011808570270980729 -0.00049688531165380874 0.0043278330037553794 -0.0009042296008444921 -3.8085175009705321e-05 -0.00020876981516176264 -1.7193087055733739e-06 0.00044572141216550197</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>4</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>3301.4803278688496</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.064877096733142237</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.35005943901392933</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.25456146000000002</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.89306179154117937</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="semiten_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_r/hip_flexion_r /jointset/hip_r/hip_adduction_r /jointset/hip_r/hip_rotation_r /jointset/knee_r/knee_angle_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.45348536840853776 -0.038176702279862092 -0.00080779156475377508 -0.0089753104726539735 0.0055953654609304498 -0.00074546687613196794 -0.00010655674792303476 0.0037034583599377083 -0.0018545102315183455 0.00023612449254826573 -8.16977828972574e-05 0.0020018075051368572 0.002807828133377566 -0.00052307771145664907 -0.0002889293333745974 -0.0013217187782793294 0.0012752803714541211 -0.00035359489471150415 -0.0013107803296445175 0.0005491828078156985 -0.00018385996095981148 -0.030365519390102451 -0.0001531131855156563 -0.00074201168164793579 0.00067025339408344372 -0.00014935618728391487 -0.0034699261467578107 -0.0036704610264204612 0.00035148861252587226 0.00051591188354037387 0.00050607080960883219 -0.001042256041675009 -0.00018053436666499306 0.0027479498652522028 -0.0015167991699712273 0.00014917729292242363 0.0245798563658596 0.0017731613466455704 -0.001033869364535607 0.00017508619525983147 -0.002109975780279872 -0.0041095055814553399 0.0020357710252933612 -0.0019673309473879561 -0.00026221974776065304 -0.00031557103627241276 0.005303973217664665 0.0035985544940421452 -0.001536872074588423 -0.00077144107299534186 0.0027670850569788122 -0.00085931402410623081 -0.00047407756420867093 -0.0021175088283288163 0.0034395245655210243 -0.0001701067385999548 0.043957668236671257 -0.0021168626451982513 -0.0017146465668998103 0.0016886113415979377 -0.0001611999075658564 -0.0019247639291103832 -0.00116429953302884 -6.1635289988986263e-05 0.00015564278700867665 0.0025235015378260867 0.00068143271563286811 -0.00035487666896739608 0.00098267834325169862 3.165684625203169e-08 0.00012429124117853754 0.0012431411857855863 0.00042822435459447249 -0.0012150753012947059 0.00049506825527744066 0.0026676162389789142 0.0079767688506757195 -0.0031227662776818431 -0.0012481031379899012 0.001785342290658274 -0.0025229577150667586 -0.026022781176515585 -0.0010458077910415449 -2.8996878152047245e-05 0.0020222483192652322 0.00028597538888321204 0.0011486965251098643 -0.004317359181507819 -1.5844651967022137e-05 -0.002704304549051407 0.0041765344438421071 0.024898287689239774 0.0021534182399090816 0.00028929507754996641 -0.00066364109328003319 0.00065140845773096969 0.0013473414578102963 -0.00042984569015043614 -0.0023559831828307747 0.00047603997171509612 -0.0009247652230405458 -0.00038351570659711498 0.0016470500892070768 -0.00079243055360331022 0.00084929719777672788 5.4367911885243466e-05 0.00027969632166208874 -0.010834853556362588 0.00099330922512033703 -0.0010380205214621913 0.0015612944545869167 -0.0099878937869196591 -0.00028335610542108767 0.00021338198003753773 0.0005550648455830648 0.00019389002013875297 -0.00029673352957257522 -0.00022895933308012483 0.00034670419518322828 -0.00067609176071636921 0.0055956636175873977 -0.0013739771183242169 -9.6362045317810346e-05 -0.00046302351767388381 -0.00017007120396198775 0.00061125299700517629</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>4</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>886.94262295082092</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.18678147080927601</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.24990434724497046</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.24129500000000001</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.79759088043127335</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="soleus_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/ankle_r/ankle_angle_r /jointset/subtalar_r/subtalar_angle_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.32077319150717992 -0.0032117780947986908 0.006267082971022536 0.00043400622546708903 0.03242001493113375 -0.001734921105736605 -0.0049240177173966535 -0.0051486826574718156 0.0027632752552728124 -0.0051310841433348459</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>2</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>3</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>9292.2639344262316</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.044576754973580442</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.2777427150549811</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.38142888000000003</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.64909112403383329</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="tfl_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_r/hip_flexion_r /jointset/hip_r/hip_adduction_r /jointset/hip_r/hip_rotation_r /jointset/knee_r/knee_angle_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.53647068867771486 0.015494607233786815 0.0053785759511090735 -0.0071360563136640374 0.0025440152244670874 -0.0003795944595688041 -0.0018033883022890837 -0.00022079557850235212 -0.00021769135769770295 2.1930856195644956e-05 2.5971466640307652e-05 0.014782862898147736 -0.002147687409938758 0.00017970160785005858 1.1385709048602018e-05 0.0031055307100955158 -0.0035378546238464727 0.00018629620056449759 0.0012191163794799537 -0.0020237311545815324 0.0011085388668009085 0.063710228239577837 0.00037811780697833775 -0.00096020759734058523 0.00052455569377623688 -8.4895647628893336e-05 -0.012884489240666201 -0.0017152160105186024 -0.00039818695963589437 0.00021234378621976576 -0.018816034790216707 -0.0063369774982688157 0.00050621999212323169 0.0011885198139195384 -0.0046803842875323739 0.00045825810705665479 -0.0228504508600147 0.0005732531297771 -0.0005778317473455342 0.00010392482497611844 0.0030640351836500042 -0.0015237926632836584 0.00031534148033665642 0.0087078361796979163 -0.0029452055982534947 -0.0010184199435851861 -0.0028893834401456961 0.0022016614178536871 -0.0010228028139739294 0.0045399535193784372 0.002450428981129839 0.0034327672840605075 0.0003128805837482788 -0.0005102784104874913 0.006193900827611204 -0.001897163812992495 -0.032229977887082727 9.0849644244788915e-05 7.3071399500086406e-05 -9.0424773409898232e-05 1.7435557388596163e-05 -0.032988416965907076 0.00049203723557170252 0.00039059016649990968 -0.00019248699190007516 0.0096358524915927425 0.0022078210573769639 -0.00019800722768358167 0.011667250094518397 0.0014624248527314566 0.0030067224001760861 -0.0017197280170335558 0.00020841545083745357 -0.00020156990340695785 1.7175833798290215e-05 0.010283670973688534 0.0020053026062099443 -0.00040040066629718992 -0.005196499311052958 0.0025185217624019082 -0.0025227961232113403 0.0034573104707391832 -0.00095171061368444498 0.0002946101520289155 -0.02330653474440305 -0.00074834950713815844 -0.01508118355965569 2.834652398748627e-05 0.00095968527763537275 -0.0069645070686420365 0.0038331910318553579 -0.023243341621321439 -0.00015873927665378031 0.00022293456340576642 -6.1252248262679148e-05 0.00075165814010677004 -0.00044708401311765187 0.00016021817790033038 -0.00083006733172704653 -0.00040044585860729998 -0.00029758245250436082 -0.0082779315411481754 0.00032577264242245085 1.3928719854702119e-05 0.014203452325414947 -8.8684643609536875e-05 0.017499457319107497 0.011746392475318777 0.00023823712399591486 0.011406296630904283 -0.0067542454709515094 0.0014371535762040446 -0.00015006828828923323 5.516624820151657e-05 0.00099269359051992767 -5.0566073448010467e-05 -0.00080583192443634596 0.0011086102651259153 -8.4912826766645057e-05 -0.0016860665040015327 0.004970947659481347 0.00038228615311504421 -1.7609666577427526e-05 3.5087672999061622e-05 -0.00070412614804861505 5.2373161605893437e-05</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>4</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>616.80983606557493</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.099783026361367252</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.43901216822140465</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.052359879999999998</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.50667196309779616</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="tibant_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/ankle_r/ankle_angle_r /jointset/subtalar_r/subtalar_angle_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.29545641896408559 -0.0075902219972143392 -0.0036290412447344158 0.00090877901762947077 -3.0199801604468689e-05 -0.039490879224175268 0.0041583293463712707 0.015609026789081451 0.0014735909735322851 -0.0061987621166505998 -0.0027278980842855788 0.010203122321336768 0.0024277937691971571 -0.0020592214663588022 0.00057167081850589808</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>2</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>4</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>1841.1786885245851</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.088325924677384551</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.2099857923330157</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.19518281000000001</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.71051928294767164</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="tibpost_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/ankle_r/ankle_angle_r /jointset/subtalar_r/subtalar_angle_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.31005030184062826 -0.013717378730234493 0.0010647465869758242 0.002809448137818321 0.007215089536571892 0.0073107230148643232 -0.00011068952862428911 -0.0033859139099239868 0.0042149003442744099 -0.00073024886669751786</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>2</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>3</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>2595.2311475409751</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.045212227356422517</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.26699878356262369</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.22648906999999999</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.69223439602666315</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="vasint_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/knee_r/knee_angle_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.28456108826004234 0.040632812779655782 0.0083128138077042842 -0.014999061574181018 0.0056111781078964753 -0.00063214085838314083</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>1</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>2546.0409836065651</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.10557112408741529</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.2004264284378654</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.063099730000000007</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.70738868164445234</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="vaslat_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/knee_r/knee_angle_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.30024617341184867 0.024687309134082677 0.063176064882531746 -0.083701576061587471 0.040059692024031229 -0.0066092396300051438</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>1</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>7723.1508196721406</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.10287245369362112</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.22244392784572067</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.25286729000000002</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.71100955172042646</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="vasmed_r">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/knee_r/knee_angle_r</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.27293019443196487 0.040481856720032156 0.0076656683400246964 -0.016128853655058728 0.006457182810627975 -0.00078676757083414326</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>1</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>4121.7344262294901</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.10249399409962295</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.19921505011969232</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.42222252999999998</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.70594804094955421</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="addbrev_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_l/hip_flexion_l /jointset/hip_l/hip_adduction_l /jointset/hip_l/hip_rotation_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.14735215573484764 -0.0040691519940554439 -0.0051957919150264409 0.0014743695380588586 0.00048422659822119993 0.00096338207456334382 -0.059903955967521377 -0.0025404777697223173 -0.00094615893427039792 0.00076608268303711001 0.00034778459254817488 -0.012482049178146021 -0.0013577122671594333 0.0033528021386230234 -0.0011972202049698932 0.0052545523336855731 -0.0026961221089277306 0.0018372731341632317 0.002728988592606665 -0.0025790900438142006 0.00070930129905662481 -0.027508478554596108 0.0010508445666202019 -0.0014279495363161015 7.2072240484791894e-05 0.00060136113550884559 -0.017391567954880054 -0.00060026699779628593 0.0011701653223461454 -0.00029103395923372343 0.0035774420852236273 0.00072012060361040405 -0.00022230952414771608 0.0012206058497793396 0.0032290105098891175 -0.0010546470787811968 0.0032212345781951241 0.0032085048098327265 -0.0010160189119613784 -0.00057983190080012866 -0.0010431121435341357 0.0024455752741818102 -0.00089052280833425211 -0.0042414692698220981 0.00021223643967399787 -0.001237611658740015 0.0052466633262071068 0.00078628067020462724 0.00060446150200935589 0.0060047723975234319 -0.00011886253133668726 0.0014717393595378608 0.0007753678163491376 -0.00066821184723009255 -0.00072495758921887945 -0.00067349441951034808</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>938.72950819672201</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.10410962229962932</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.042971715422764893</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.11478091999999999</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.50035146882994685</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="addlong_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_l/hip_flexion_l /jointset/hip_l/hip_adduction_l /jointset/hip_l/hip_rotation_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.24527097160082936 -0.0065591583516977402 -0.0014721203544096808 0.0010504159287089156 5.3643160617529179e-05 -4.4021731036441875e-06 -0.0657972662549485 -0.0012880750565850755 -2.6169837919088213e-06 0.00011903541074336906 -0.00017769659827083627 -0.0063027557162887455 0.0012982506037167022 0.0015536143081171325 -0.00051146978126611828 0.0095286111657637684 0.00021276287610564248 0.0010806771467552038 0.0026036149581592379 -0.0019684353430538086 0.00048226282649133084 -0.042273840568913847 -0.00040365448251929571 -0.00048215382920743782 -0.00015640357780728081 0.0001532413020726086 -0.014801607168435676 0.0013589473684213135 0.0012839420336440957 -0.00019057992784898446 0.01636393573412381 0.0015408086503402791 0.00031528496794204475 0.0072352943654728497 0.0011493200155393321 0.00088079715715149473 0.0023495527717107036 0.0016820594430795284 -0.00076938977877117297 -0.00014066497799970767 -0.0016051970946976061 0.000855948820619702 -0.00044990552416239676 -0.0005696541483664817 -0.00055024590441022064 -0.0016560551569230471 0.0074281643692348824 0.00052297932123106792 0.00024193951718455597 0.0039128809011203828 -0.00038037073592077001 -0.0028755003272692265 0.0012459500321042691 -0.000313705673065916 -0.00011540567805207289 -0.00083777306072727823</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>1375.1999999999998</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.10996026976038491</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.13446981857069376</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.13777038999999999</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.50010550174062107</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="addmagDist_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_l/hip_flexion_l /jointset/hip_l/hip_adduction_l /jointset/hip_l/hip_rotation_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.22435803295759832 -3.6293178887706317e-05 -0.00181265622597864 0.00046109241823889287 3.7438297754366468e-05 -0.00029859752440259676 -0.054626889680867721 0.0020431795209991778 0.00099028898271359602 -0.0012947676694342047 -0.0011315623165888335 0.019904307768961512 0.0016101536939626241 0.00073585078871458553 -0.0011938440232637381 0.013710692653180093 0.00024237481548286917 -0.0021583279664692634 6.1871275801171456e-05 0.0010619312004359384 -0.0011389492171198306 0.020490317508865694 0.0034199649097212412 -0.0017867287269585903 -0.00073180462092785857 0.00023637410046114279 0.0060838799750102673 0.00031512186724206079 -7.4899707234065733e-05 0.00066993543283655032 -0.010860692995416562 -0.00097037234523526361 0.0001884907497981123 -0.0057520098424235838 -0.0010209342779423311 0.00069410903660358631 0.027650760176524476 -5.5794312216967227e-07 0.00090896381517376024 0.00030743025177677865 0.0087825278343184841 -0.0017013042458260989 -0.00085767673535667359 -0.012336544424587693 0.00060531601586125811 -0.00015385998057900865 -0.006636436777241933 -0.0015229122244849506 3.2544873545279351e-05 -0.0043010497684462783 0.00022941269462387683 0.0042748147692470879 -0.0025881181498061362 0.00044413856301071309 0.00042794401144074715 0.00082953249195091719</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>895.94262295082092</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.17814765217994732</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.087246298591962548</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.19470502000000001</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.70000199462391366</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="addmagIsch_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_l/hip_flexion_l /jointset/hip_l/hip_adduction_l /jointset/hip_l/hip_rotation_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.33740686098191291 -0.0043938953297630512 0.0025990360861655442 0.00043029025740484359 -0.00018108271051901553 0.00032666307253916276 -0.040307196807338415 -0.00062386517038236873 -0.0022582599414756334 0.00073253203478049699 0.00042172721643599998 0.029738932150762887 -3.1272745423363004e-05 -0.0016553164318016799 0.00075942818737975834 0.010749288241850861 0.00033133606528047227 0.0016405502994631623 -0.0027682194423466651 -0.00012178578230471744 -0.0011650574546104532 0.035337455713600967 -0.0060026026805686805 9.6007586197513955e-05 0.00057151571787975031 0.00012127760106355433 0.0005961953627388317 -0.0015716975606677069 0.0017942874045268928 -0.00072002246488684588 -0.020932755822318953 0.0001941547954758777 0.00090263650037833714 -0.0038049602677560361 -0.00032931856255539359 0.0029969581762330391 0.026858287712712845 0.0027679154375582406 -0.00040416004743962952 -0.00025963001640651927 -0.00035167052442076782 0.0020761684368961622 0.00044306001586608742 -0.013889111463461367 -0.00020365313624011685 3.288830522646517e-05 -0.0089529450059374176 0.0010482214246234863 9.0082500478108943e-05 -0.00023141361978651337 -0.00063257179645994234 0.0062255925864075582 -0.0016839067144952839 -0.00044927963530910845 8.1592104639906739e-05 0.0006253975970205739</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>895.94262295082092</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.15418834866589765</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.2158318569109752</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.16804429000000001</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.70208833583576524</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="addmagMid_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_l/hip_flexion_l /jointset/hip_l/hip_adduction_l /jointset/hip_l/hip_rotation_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.14990003970234295 -0.00016668231095288904 -0.0043724269733378691 0.00099223954206405034 0.00030605835288119508 -5.2797896277817741e-05 -0.069763284757644262 -0.00018300119529883249 0.0010345329177673442 0.00012748855464105735 0.00055593293847149602 0.00058703118906753378 0.00051580393761273822 0.0028082461294392765 -0.00039226014346229902 0.01174248398113052 0.00031888649715684255 -0.00016915585906829652 0.0037784487841281615 0.0042387818368835465 0.00065819387965087726 -0.0039634581832029558 0.0066629070534092527 -0.0022481377409424275 -0.00070155655753187894 0.000731037324425283 -0.0021932871891435176 0.0036176834185375232 -0.00010557220187768591 -0.00089989009857970503 -1.6624738683529873e-05 -0.00043086099065520037 6.3192670968321106e-05 -0.0004428521937070114 -0.00061674403015525223 -0.00031290463161967954 0.023634455532790085 0.001857055175593252 0.0010439290783695789 -6.8961060896990608e-05 0.016132550601487754 -0.00017955051975165426 -0.0012941812239157327 -0.0046885057559465145 0.001023467921905732 -0.0025575056943708571 0.00090160606969055736 -0.0030706527141922163 4.4319783787785909e-05 -0.0026100221149935108 -0.00099043507828774652 0.0002376970448468524 -0.0045794521900938256 0.00062276278263015839 -0.00089188325531048998 0.000999146879979504</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>895.94262295082092</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.14358371997852246</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.046921029854501466</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.20730759000000001</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.70000007865603253</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="addmagProx_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_l/hip_flexion_l /jointset/hip_l/hip_adduction_l /jointset/hip_l/hip_rotation_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.12796815860259869 0.0065109443534175689 -0.0084452116895538509 0.00088690766970821308 0.0010161645407988688 0.00016427201746069438 -0.053748643069766164 -0.0023297563262224988 -0.00070596332350658176 0.00051723226393210844 0.0025162319257098381 -0.011990284429044483 -0.0046920885196380527 0.0047403104722176072 9.3070593149280345e-05 0.0038882779667041927 -0.0035772856101400343 0.0023956361175419224 0.0014591753061721287 -0.00084736223197902577 -0.00019854633921766944 -0.019427244690419256 0.00599407204213464 -0.0013001446250582326 -0.00058214023067977095 -0.00081806029399955106 -0.014205989803633431 0.00048422174329169746 0.00048856730433671585 0.0011981679103149523 -0.0017956126274596281 0.0012020937732063657 -0.0013466907362994986 -0.001464974592422292 0.0027788645804370333 -0.0017566046953322769 0.0062418697143984368 0.0040242527648043074 0.00020448720016532913 -0.00013293440252366677 0.0039494650584764642 0.0048312622199546268 -0.0010180499443054234 -0.0019034289894759053 0.0012676205679719868 -4.505272991069516e-05 0.0044779771476216113 -0.0013612811461548998 0.00027989740459462493 0.0064087840638868254 -0.0016468568426910766 0.0013833885662656454 -0.00064914166493079369 -0.00033128584276364881 -0.0019363000476721531 -0.00027570236243670593</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>895.94262295082092</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.10562406279900369</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.05172425470005669</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.31148325999999998</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.70000008947633718</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="bflh_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_l/hip_flexion_l /jointset/hip_l/hip_adduction_l /jointset/hip_l/hip_rotation_l /jointset/knee_l/knee_angle_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.41976173328572269 -0.029968853910003472 0.010095427072448492 -0.013841119331528417 0.0063123688661208517 -0.00087238478382968565 0.0051254833915319598 0.0017080133486505121 -0.00080658776336324338 0.00034708282856764404 -0.00012896751771157902 0.00083320916406795075 0.00028688558038884328 0.00049195344972043499 -0.00031777745293559364 -0.00061585271770809148 -0.00094709704911912591 0.00040810534485898856 -0.00011292604296367923 -3.0886840265966983e-05 0.00012070646907772322 -0.026531100485482521 -0.0013990869655352814 0.0015799494301362289 -0.00096340182805031876 0.00020250970934418807 -0.0025301967507705687 -0.0024015495616114212 0.0012287927641270854 -7.9582967026390575e-05 0.0012341768810295323 0.0015770525326028939 -0.00052712240349930828 0.00086191838398479376 0.0001079118359620687 -9.4457995108973136e-05 0.020069852469699143 -3.8557701063590417e-05 -0.00014414720738795106 5.8822420089935427e-05 -0.00032668736870989799 -0.0022627942521849386 0.0007250199092104137 -8.6736034629609094e-05 -0.00014642429726566177 -0.00014106111947632081 0.0055205296793569957 0.00032692870735938915 -6.1576811616255358e-05 0.0014793089246458641 0.00014007222910754867 0.00089120892512640874 -0.0020104883964412019 5.182444263556775e-06 -0.00041294613674076278 -0.00037844625647961354 0.044082611727039735 -0.0015220074139179244 0.00016316736873267772 0.00040278026765503913 -4.520497873874433e-05 0.0026516774914742418 0.0007180913557047234 -0.00060306521642933156 0.00021011909463586944 0.0017442280859151539 0.00010697726569446932 -3.5187839125181341e-05 -0.00086266082810194239 3.8040369869248546e-05 1.3713936839186789e-05 0.0065042121042782133 0.00059592707301835688 0.00014845400899814751 -9.1609457168385298e-05 0.0031121889708692094 0.0034118395732346219 -0.0014149504241465986 -0.0018063444235730381 -0.00072226008338542851 -0.00043427539017557503 -0.025107308082478665 -0.00043705588956724235 5.2633107098194742e-05 0.00030546900732945741 0.00072327275720920989 -0.00042426212082393496 -0.0034403329542087887 0.00020904537608685495 -0.0021309683592248317 0.003212778584041444 0.020828528614771229 0.0015079570018675804 -0.00057059364127405034 -8.1833702031883188e-05 -0.0022614504786338655 -0.00052007524563228659 -5.9929082698710227e-05 -0.0015601472461873561 6.8339268054508871e-06 0.00065579907145775886 0.0022427326151025937 -3.3234698959590443e-05 0.00010399952285072698 0.0013689386295088262 -0.00020662775218363279 0.00034309151241721609 -0.0076575634703131591 0.00026074663138414469 -0.00020184613021814691 1.2427719065515215e-05 -0.0095584201634695155 -0.00022962608616263421 1.1116675955826313e-05 -0.00017759702780395381 0.00031233865737195001 0.00013505366556085111 -0.001709994168409457 -0.00018995848487308558 -0.00076479933700456773 0.0046748735108055328 -0.00095142974877802065 0.00011897860810704669 6.3697856358472236e-05 0.00025440672201819809 0.00045647511336173316</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>4</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>1969.7754098360701</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.09299377714887308</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.33277440049885937</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.17591823000000001</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.88786596902195869</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="bfsh_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/knee_l/knee_angle_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.22897790728416012 -0.02272143530206262 0.0089925957900881572 -0.010321508653370122 0.0029849007051071927 -6.2503871318464273e-05</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>1</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>835.67213114753997</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.087384564336046563</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.12106681678787404</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.26422317000000001</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.69547650144206108</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="edl_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/ankle_l/ankle_angle_l /jointset/subtalar_l/subtalar_angle_l /jointset/mtp_l/mtp_angle_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.4024269260670808 0.0044103137844774768 -0.0013889825051710907 -0.00019368651139827452 0.012190822618219714 0.00011996546916436293 -0.00011103468291348964 -0.0010441545735295798 -0.0018209652410959994 -0.0011454445698667022 -0.031809252619168789 -6.2732972085292207e-05 3.6772580417807261e-05 0.00021352257362445954 0.00024787796435161091 0.0085520086137857998 -0.0033772843048232295 -0.00010799452716720617 -0.002512770598888229 0.0015187886580392863</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>3</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>905.24723340000003</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.082317904810682713</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.31906268211002148</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.21825824999999999</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.70922040052270319</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="ehl_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/ankle_l/ankle_angle_l /jointset/subtalar_l/subtalar_angle_l /jointset/mtp_l/mtp_angle_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.36762632196160538 0.0051188803807722559 -0.002039175529269566 -0.00041020980156919137 8.4720834907279748e-05 -0.00040614976743706037 0.00011402698276445667 -5.5232110315789004e-05 -3.8349556501257208e-05 -0.0031623824399087267 -0.00025757388940709266 0.0002960925982181763 -0.00017265443325759688 0.00040303174799158874 0.00063864027245820671 -0.034120432812343379 4.7156569506475691e-05 5.8011897391586562e-05 -8.0884088663624111e-05 0.006975187661750498 -0.00015767612054149921 -5.2381712079371466e-05 0.011481591742874124 -0.0020028011394486608 0.00012378623092874628 -0.0038381754172233957 -6.7980621531574183e-05 -6.0891977034420257e-06 0.0042072294481629424 -0.00093423069778092915 0.0090484546860459293 0.0022938779942999294 -0.00024091273493998569 0.0024319120389714359 0.00065451485335269594</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>4</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>428.8013211</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.089193863832374543</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.27150216639267727</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.19726811</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.7196931718249916</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="fdl_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/ankle_l/ankle_angle_l /jointset/subtalar_l/subtalar_angle_l /jointset/mtp_l/mtp_angle_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.37820410815021777 -0.0049270945756259713 -0.0011441258188326861 0.00084968825678084824 -0.013553288091424098 1.2220516701312529e-05 -1.9284610291466072e-06 -0.00060019099261273616 -0.00024246047303371071 0.0019922799758693706 0.0063259103142954036 -4.9876691413237016e-05 3.8396605351721552e-05 0.0069766031829389058 0.00021271691052062087 0.00036035837854961073 -0.0038286705534021658 -5.2592674054315694e-05 0.0039674569687624004 -0.00061019521187681016</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>3</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>634.76557377049198</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.057422179915038028</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.33008890496192916</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.22483914999999999</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.69987071191960037</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="fhl_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/ankle_l/ankle_angle_l /jointset/subtalar_l/subtalar_angle_l /jointset/mtp_l/mtp_angle_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.35592043534700707 -0.0044831843809665095 0.00086799594626986963 0.00095876332128708565 -0.011915536458977726 3.7996045458771391e-05 -3.4174295252964955e-05 -0.00080376893986063664 -0.00015800272641354501 0.0017089405054126006 0.011292541867459408 -1.1053673651789859e-05 -1.1841828604481995e-05 0.0054071335219305827 0.00019381063197348617 -0.00012733415406769534 -0.0042772572885919962 -7.2429823172623538e-05 0.0031182857576576685 -0.00093523226522837077</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>3</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>1361.759016393441</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.063967921960922672</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.30438820152591062</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.25802551000000001</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.69990393264687867</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="gaslat_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/knee_l/knee_angle_l /jointset/ankle_l/ankle_angle_l /jointset/subtalar_l/subtalar_angle_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.45254520042035651 -0.0040137156061375934 0.0070072112399580883 0.00093707984942295575 -7.9948849446551552e-05 -0.0036487567825429501 0.034677763147261689 -0.002217773911840516 -0.0042186298647520293 0.0002658495649682044 -0.0025055097419853559 -0.0026993847522110395 0.0028706806511759374 -0.0027148892449745513 -0.0026603657000190076 -0.0058726183972482911 -1.9325347081021037e-05 0.00069973551535289723 -9.0636396287954984e-05 -0.00030319238225232022 0.00010947073243333479 -0.028273148152480436 -0.00041277608135208138 5.3191231479639126e-05 0.00060192164547430102 -0.00046092372222495353 -0.0017782632556625202 -0.0005656702587864867 -0.0013823534186340849 -3.677929053800134e-05 -0.00016415012925900086 0.00034019836215489922 -0.00023442076813788896 0.00077648278195027287 0.00013958980105568074 0.00042130348563530328 0.0094932952349150064 0.001209295935090966 7.2591925663225673e-06 -0.00030580165027471203 0.0013364182026497696 0.00038207763946452146 0.00052136256401329086 -0.00043941680387661765 -0.00020019309694890232 -0.00020803085611164043 -0.0063658972182030291 -0.00067461504209548253 1.1015296795505546e-07 -0.00036453473422326516 -8.6400687925161944e-05 0.00019876824313078655 0.000764485593251705 0.00010987520089310781 2.3268541119650344e-05 0.00020157115219047699</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>2362.58852459016</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.06296674711233978</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.37506282366878829</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.21022682000000001</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.50067516332542328</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="gasmed_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/knee_l/knee_angle_l /jointset/ankle_l/ankle_angle_l /jointset/subtalar_l/subtalar_angle_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.45702933630209119 -0.0015606462457557302 0.0074447664818928089 0.00033313753397166035 -0.0013362072342226721 -6.0614976928123968e-05 0.032995967359651782 -0.0028128962398307551 -0.0047107002373910373 0.00064381387564690831 0.00067943896880382556 -0.0026212673253719417 0.002825186656101094 -0.0029402009419081544 -0.00057618366925738136 -0.0054447017976431847 0.00031450019957645188 0.0010158100966785272 0.00056054069634154584 -0.00022079862495182566 0.00026213837881801816 -0.0097715220909174311 -0.00029551504008906162 -0.00033372317439074112 -4.9735899323031976e-06 0.0007455928020325453 0.0018778158274044149 -1.5426833979996767e-05 8.7781891548137933e-05 -0.00026749145166367696 0.0011162851866485977 -0.00024323253767295425 -7.2747729983369149e-05 8.1610991059939193e-05 -0.00017110101737416114 -6.9261032294581722e-06 -0.015398826727234359 0.00062506860996467989 0.00030197193318944109 -2.9742223744613773e-05 -0.0027322586941429111 1.7585472978742789e-05 -3.132324216778194e-05 -0.001035624697228977 0.00011375378739317165 1.4365783624737686e-05 0.0093264112978396988 -0.00035971837043078416 -7.9166862309624429e-05 0.0014912543639926 -5.883471573964971e-06 0.00028270442835293108 -0.0040296923823918886 6.861115158719604e-05 -0.00027602112398306702 0.00078681456962923814</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>4673.2721311475398</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.056673639097724243</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.39409081706910537</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.16568155000000001</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.50022274724790983</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="glmax1_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_l/hip_flexion_l /jointset/hip_l/hip_adduction_l /jointset/hip_l/hip_rotation_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.19240673227152547 0.022904940298941658 0.012246513530056971 -0.0071183436560955261 0.0011852666582630152 -0.0030263756427593214 0.019813773009480305 0.023412651676575733 -0.017474723865607805 -0.0074161764430836462 0.0062020715602806482 -0.011615951433603304 -0.0034677656524929905 0.012111107674076502 0.00026766127094245487 -0.0011339484543836833 -0.0073807178526780065 -0.0014288358574496658 0.00014870369663518105 0.030589352946700704 0.00012976938486415331 0.048541263751432327 -0.030525173728782443 -0.013189877461751983 0.0071005146916011154 0.0023681134695572262 0.011931967431350218 0.024915091871529758 0.018206064285088589 0.0045861916972104151 -0.0044617019438788069 -0.01397508691571058 -0.021474936981546677 0.0039350506844693404 -8.5178049023180145e-05 0.0077141761376357488 -0.006375774549187801 0.0063701691343806873 0.0087853404166648268 -0.0010387955848274765 -0.0092091565438168696 -0.02392290192962352 -0.0031608372601673379 0.018457636147034932 0.014931265690523414 -0.0052380712786390922 -0.0017195016979515147 -0.0054865673593768967 -0.0032226471336382146 0.011721803131749137 0.0081601572346387506 -0.0081060134949732243 0.0024867604115607379 0.001750445606066563 -0.0044632351928457987 -0.00085635273098687303</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>1475.675409836067</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.13602057477880505</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.059370943637012182</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.35401178</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.70043366011413188</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="glmax2_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_l/hip_flexion_l /jointset/hip_l/hip_adduction_l /jointset/hip_l/hip_rotation_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.21878417652473833 0.022180880905601452 0.018077442990368519 -0.0091453782781721425 -0.0012918281000333497 -0.00047759815449425385 0.0091519053728832487 0.008142151711871954 -0.004089111814647055 -0.0066109517940875183 0.0015371771135502853 -0.0058432156690188201 -0.0025749416558131909 0.014597943350655359 0.0014443952672137869 0.00075333833810360456 -0.01399979365977024 -0.0098500282047356332 0.0038356034744072409 0.020621904975873059 0.0010613518883505783 0.05978463066877223 -0.021857835324512066 -0.011586141757058544 0.0066762287573198607 0.0018017963677837449 0.01809698504384169 0.030244572825663785 0.0030601873335543675 0.00036017966340289107 -0.018532832740689013 -0.013136401494496994 -0.016474099222269917 0.003757630408484175 0.0091802501496215747 0.00094273443741571365 -0.0071655977894485943 0.0038061962305574377 0.0031946071517744909 -0.00028432806157466413 -0.010536207221986931 -0.022031804580223868 -0.0013641877815531479 0.020376651520971688 0.010985947714029188 -0.0043833021182313843 -0.0029764454886446012 -0.0034886043629814541 -0.001129128280750361 0.0085810213835711639 0.006243304726733249 -0.0069299822033143318 0.0016511943198253705 0.0011772146842578043 -0.0028581031072308577 -0.00043508710061306287</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>2109.068852459025</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.15243233299929393</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.072007247670732605</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.36738206000000001</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.70081077931123392</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="glmax3_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_l/hip_flexion_l /jointset/hip_l/hip_adduction_l /jointset/hip_l/hip_rotation_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.22363125067903478 0.021026602354355176 0.0058974678821200784 -0.0048140989263598622 0.0016580546486628916 5.0965300625612116e-05 -0.054954657161144102 -0.0027054937637371814 0.0059277180655140423 -0.0016994732581445909 0.004443316115756336 0.0098475556112475049 -0.0091844233089526436 0.0041577587175847313 -0.0022443100927541856 0.013851309307626522 -0.0025301132868055134 0.012100382439331063 0.0023967417883149745 -0.0079060185477384769 0.00067701233849773652 0.065175027359154883 -0.0093708366784968442 0.0052869267693573573 0.0045295543014200372 -0.0020974805871353279 0.046963572145557728 0.0087227909408688041 -0.014990785774572829 0.0026123859703807398 -0.019738455639123301 0.020470596268661694 -0.0043849850060274859 -0.022268909482045733 0.0043544617194420706 -0.0031949878601353408 0.017368788154660392 -0.00046344707392996965 -0.007806700858523064 -0.0020489795018697491 -0.019377937375278872 0.002429161695228662 0.0073096368084609922 -0.011548592455817418 -0.011467217705261006 0.0096549306413309284 -0.021329590363657457 0.0019191515170895552 0.0020367799700328243 0.0001317744711810298 -0.0012803279495330702 0.0075560738804637418 0.0066187006576617132 -0.00052289688559927698 0.0014552277360092027 -0.00071000676487983612</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>1421.6311475409841</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.1589090229680942</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.081601484387416878</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.38241613000000002</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.7018363273912942</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="glmed1_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_l/hip_flexion_l /jointset/hip_l/hip_adduction_l /jointset/hip_l/hip_rotation_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.12554470842138837 -0.008724139383679972 0.010881984069060657 0.0020690470531419267 -0.0010494822431987663 0.00016768528419153651 0.061855516053401637 0.016814869214568526 -0.030950663897524214 -0.0051181080351796471 0.0058286767232286207 -0.010918901241160645 -0.0056426010247217946 0.0078123972621805642 0.0046224600061718314 -0.0052416575088980993 0.0043068117307097937 0.00055521633194439372 0.0016152827235571391 0.0031954489440358829 -0.00053929120901913903 0.011405258390120861 -0.054792489120922556 -0.011397881209685051 0.0099091140183992441 0.0022071157449888353 -0.0092127833967774655 0.023600765060406419 0.026780344669894283 0.00085158399418740357 0.0060000209567055932 -0.012107992180676338 -0.012641091425863966 -0.0045472894064070611 -0.0064139430571146534 0.00092317942831450321 -0.0082783843078646207 0.0062671437131031019 -0.0085502191989484926 -0.0051257176618555687 -0.022789582171511256 -0.019514746821856919 -0.0018932160023736051 0.012966243220166606 0.014871214082001722 0.0032178278782523132 -0.0011599453393573598 0.0044837874010936005 0.0044140231973934449 0.0025468110346425969 -0.0013910115060876698 -0.0043766521698759041 0.0004705637843900223 -0.00016619077035350823 0.00026101291166445815 -5.1247779220265297e-06</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>1640.2001531999999</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.086845405144835713</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.050598759351748082</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.31655591</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.70000008071402364</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="glmed2_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_l/hip_flexion_l /jointset/hip_l/hip_adduction_l /jointset/hip_l/hip_rotation_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.15368773889928986 0.010020684594356326 0.0027254558751915975 -0.0018959797783581478 0.00012002029380210697 0.0011487042006165145 0.055505091451015912 0.016885219375623501 -0.028791504920272545 -0.00020332155343133915 0.0044579393326217255 -0.013175024271616402 -0.0041981968183530307 0.0095807356160001814 0.0011782737421967828 -0.0047409281516616504 0.0014329184969751445 0.00076666003048446582 0.0010830938000602908 0.0014160539898787523 -0.00030943112647742428 0.021924776968006553 -0.05647430601752837 -0.0072625898332369142 0.0096164422364964156 0.00085722359637061766 0.0028316295114854486 0.021423797466713003 0.011574551431442948 -0.003390977679043122 -5.635898137330874e-06 -0.012090959942751672 -0.0086602425242921256 -0.0017400141489792467 -0.00062134905608519995 0.00090962669182879713 -0.0038549533670715077 0.0030583453196056723 -0.0094774349739292617 -0.0037872979288000965 -0.02644027056811064 -0.016374473878071436 0.0043829234039562256 0.011465360804492888 0.0097320979501173167 0.0015533280603858821 -0.0031344835467299525 0.0066447962603866581 0.0042026673966548047 0.0035460038538847154 -0.00098586499872691967 -0.0037821477702194069 0.00064915017887466077 -0.00084795100511994559 0.0002636543210260934 -2.6514845157107748e-05</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>1147.6374923999999</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.094208990412418994</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.06814689534250741</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.31655591</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.70517390271474534</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="glmed3_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_l/hip_flexion_l /jointset/hip_l/hip_adduction_l /jointset/hip_l/hip_rotation_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.12344761761604107 0.023107543882902506 -0.0005993397024530913 -0.0037227158606136269 0.00095585074028063741 0.0016697164414697999 0.044381797045509111 0.017031071517075617 -0.024637322758010526 0.0028770357735936926 0.00365975306574743 -0.013416697128520661 -0.0050508104495998515 0.010809000984632913 -0.001271986352755293 -0.0027900179165725259 0.0015232984850997889 0.00065505282573713811 0.00040807184106421228 0.00086905322986428977 -0.00025504306207600725 0.026553430460434232 -0.049762409644341116 -0.0035237390271328174 0.0083189878577300015 1.3642432440993946e-05 0.0093610618631002861 0.022756682365616447 0.0051324365344252052 -0.0053711410618577319 -0.0012565996330286772 -0.013738109287531833 -0.0084263760079258399 -0.0019036320584459355 0.00064617035755755751 0.0014313631297457367 0.00065037128098043874 0.0013547270577574596 -0.010956443299998475 -0.0029488792005939275 -0.024557091161583378 -0.015753853961573829 0.0062153345270191188 0.0096442550410658912 0.0094248623560361806 0.00085975555864356416 -0.004608258212255056 0.0067098595861417925 0.0042715852678900873 0.0043236409854215622 -0.00062561192316488903 -0.003187465716920202 0.00083130143002869397 -0.0011783696383064269 -7.2993333422295887e-05 -5.6716405448135789e-05</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>1306.7988963</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.082680448705553661</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.047486161893768607</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.31655591</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.7950859114036205</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="glmin1_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_l/hip_flexion_l /jointset/hip_l/hip_adduction_l /jointset/hip_l/hip_rotation_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.095972544735532031 -0.013311817749397277 0.015397005418174074 0.0042546920517918972 -0.001192868899282485 0.00092890533721945532 0.059198434716817384 0.004207773114360094 -0.032642016947034516 -0.0033959916748367803 0.011522621059906238 -0.0087891306546248171 -0.0043298509135405268 0.010449127478441093 0.0040056343090608109 -0.0054594828093924852 0.0070440287470747952 -0.0051050525933837142 0.00089291833755469679 0.0040917059753640666 -0.0012538551292713813 -0.0080147998540133405 -0.053006985910886539 -0.0048489462504850119 0.01217151130744608 0.0033379859944734588 -0.011012913212716196 0.032780158542917236 0.032465297563882757 0.0012844755224330478 0.0080198188707635617 -0.022966638985593053 -0.013740504672457677 -0.0072401355124011232 -0.0087360606696317913 0.0027052031961118266 -0.0056901206324725387 0.0028455081255104949 -0.016363296564275671 -0.0067672715637816395 -0.023281650712215791 -0.012558223708087957 -0.0025284240205572643 0.019793905139226436 0.025683537055016078 0.0049400701182635235 0.00082072959310781251 0.0055861476929040532 0.0070818570393775832 -0.00082391019594662369 -0.0085726749584959412 -0.0071924085364923462 0.0003561213230675118 0.0007635764397331843 0.0011960281562175044 2.2412172661442938e-05</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>561.06885245901594</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.090972379695294314</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.010975272010124429</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.17453293</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.70000007848709944</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="glmin2_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_l/hip_flexion_l /jointset/hip_l/hip_adduction_l /jointset/hip_l/hip_rotation_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.10217123765043658 0.0039484672407217661 0.0078258147399917852 -0.0008541724807508502 0.00023807424371189768 0.0026264686568081182 0.053458947579517288 -0.0053694660749372186 -0.027984546877069728 0.0032897296722196592 0.0076339284417725473 -0.010072628170898854 0.0025541415526968156 0.011956865999479881 -0.0025530795856689966 -0.0044454110149057136 0.00032071213667872564 -0.0041980251112870284 -0.00033067902719599048 -0.0002616110132858862 -0.0011163510373346174 -0.0032361239959934097 -0.05100755345772634 0.0034400056671444875 0.012231368006946824 0.0011526969738671487 0.0044179657719962389 0.026326425395092654 0.0026910420942941327 -0.0058317383540300279 -0.0028489199204909058 -0.023426010761854188 -0.0071806153531630956 0.00036435574039764664 0.0052909309564774486 0.0029817731867647439 -0.003970416864101772 -0.0027568539112795333 -0.014981122175305396 -0.0050694375918041139 -0.023315999284704771 0.0010437684115938714 0.0114271053463168 0.017029118062415444 0.014448706685964626 -0.0011204996046601183 0.00036544565680245508 0.0066227137847153792 0.0042482979729579458 -0.0011235806244471859 -0.0090142139967978353 -0.0045002346473188883 0.00029477427274983301 0.0001358908350434426 0.0011793971200162541 -1.1741943902654146e-05</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>592.22950819672201</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.077323987569774641</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.024910799200767601</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.69972376395559222</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="glmin3_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_l/hip_flexion_l /jointset/hip_l/hip_adduction_l /jointset/hip_l/hip_rotation_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.085760625488195685 0.013807761468299526 0.00046036401193077386 -0.0022684670751927797 0.0009632508518587022 0.0025070134231455223 0.042514247182200732 -0.0033500826572433191 -0.019978307287534101 0.0047980772789846231 0.0046974699469571378 -0.010077892123478607 0.0034318432489101099 0.0095546822236002096 -0.0046879704287246969 -0.0026782236903043761 -0.0014399121229254099 -0.0035733715814851704 -0.0010568879742001895 -0.002130750658312554 -0.00068805285627883482 0.003360711933965374 -0.043090800403020227 0.0047835404504696566 0.0073632428974923399 -0.00030935798890712428 0.012119098970125483 0.020763672557828173 -0.0058829387941519203 -0.0057425191631435297 -0.0058642165821384895 -0.019438772183520348 -0.0019022508941313491 0.0019673920463981255 0.0085754482442970716 0.002667244015916359 9.7032308772330121e-05 -0.0051314559760010595 -0.01293027038932709 -0.0027002573934340629 -0.021827181905991359 0.0026985789471789361 0.011759946924227738 0.013725148966102442 0.0089755669012747136 -0.0024040322194016422 -0.00064400563247746516 0.0076835048377468856 0.0035116507956311246 -0.00022798013831424642 -0.0074480447344809474 -0.0035858801236770751 9.5864337012300041e-05 -0.00068006753796060685 0.001071858510027286 -2.0196531332851287e-06</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>670.16065573770595</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.03797796477325896</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.047736031563660311</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.01745329</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.69884674227801202</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="grac_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_l/hip_flexion_l /jointset/hip_l/hip_adduction_l /jointset/hip_l/hip_rotation_l /jointset/knee_l/knee_angle_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.43872850964718674 -0.025207995326208817 -0.0015904618199672604 -0.0068069002860227153 0.0031897975117446339 -0.00029800749459751733 0.0049280786566675942 0.00084597767271314369 0.0044857369447127288 -0.0028453954282961851 0.0003545439928868163 0.0029740594028718685 -0.003638105851338589 0.0029156495104893281 -0.0006298398248395391 0.00023747564259768211 -0.0024273358943040146 0.00085332694968239886 0.0004097231629873444 -0.00060046118622927901 0.00095050026240984598 -0.063473928065783766 -0.0025946122408655025 0.0042534225574097058 -0.0026164215863124394 0.00052334665861261426 -0.0023754759258483981 -0.0027533804656327964 0.00012508962891954523 0.00042031908263181892 -0.002189054384309609 0.0018272621028903183 -0.00062661059039207366 0.001154098249741727 0.00028876063719976593 -0.00063723468771504678 0.025909817913001558 -0.0022029511917290535 0.0014100291927693635 -0.0002045165121077983 -0.0017698230096614331 -0.0054582510327520501 0.0023679338676979777 -0.0016111620835988793 0.0010667106332018883 3.5508249926045204e-05 0.014831697799122166 0.00068777893205097199 -0.00019043719863524444 0.0010267548475284944 -0.00059145667345488102 0.00099039799646446353 -0.0010752623411049553 6.4131985942052216e-05 0.00021457524495448708 -0.0017233268076827578 -0.012557514458523109 -0.0013192967446568813 -0.0025513435852255609 0.0016773709998635351 -0.00017871409110977677 -0.0042237493795505418 0.0014275272560651364 -0.00078114442719698525 3.678837224071693e-05 0.0015020846171068011 0.0022488016590592901 -0.00083756978340981383 0.00032601790950375709 -1.4830215036933103e-05 0.00031430862220276599 -0.0018441062903039075 0.00087885910316297313 -0.00051476088167724961 -4.0977144546839827e-05 -0.0021849083398982252 0.0025170870727413133 -0.0012211298573422788 0.00053937715852127007 -7.8778607027228231e-05 -0.0011539509027540919 0.0046817676113420741 -0.00038472291807833525 -6.3680001779984133e-05 7.9741716118152551e-05 -0.0015740072633688967 -0.00044179896928700935 0.0010002498867608179 -0.00040880571984340877 0.0004285543406468981 0.00064706949638297824 0.028305537449801361 -0.0016075704734562714 0.0011506031575361571 -0.00017845855730838712 -0.00043484762067671779 -0.00096896548438069584 0.00042932200562993071 -0.00014211598177406195 7.6591193939454325e-05 9.3538408294532513e-05 0.0030620020630145496 -0.00064329583039529083 0.00065119094234944073 0.0024789135665693415 0.00072520890654346245 3.0659252592981408e-05 -0.017280830378874266 0.00013503824237205567 0.0018649950186678753 -0.0022501503917190437 0.0029089360868269853 0.0010003365578153162 -0.00038498962740641705 0.0010101615824197744 -0.00013794267507613258 -0.00036205123858865421 -0.00034117344014218621 -0.00033694700524906831 -0.00075033489531035956 0.0031992245931594661 -0.0040639497090058782 -5.2839157406445259e-05 -1.2818416070510617e-05 6.6664357736210308e-05 0.00052923217843762929</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>4</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>421.96721311475403</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.23790061806817075</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.16154202322571304</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.17200156</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.81455265023222312</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="iliacus_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_l/hip_flexion_l /jointset/hip_l/hip_adduction_l /jointset/hip_l/hip_rotation_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.20114925785278651 -0.0067600340133058866 -0.00095413562752872912 0.0011063159350989168 0.00028431386871309236 -5.5306483761530158e-05 0.0027879063025101946 0.00083227832283844997 -0.0018348587877021615 -0.00085263306696272507 0.00028334032925628454 -0.0071375237035496419 -0.0010887439912331874 0.0016208803933194342 -0.00085508910814554012 3.760164794400827e-05 -0.0026912521287829872 0.00018523499714775656 0.0010246317971541608 0.0010060471963971537 -0.00074694451650350743 -0.023408090748585714 -0.0056686414400370453 -0.00088311344634879661 0.0011246927838318057 -5.6688593324214246e-05 -0.0060779553318075358 -0.0013779065432545246 0.0023629785488044545 0.001452378399157533 0.010291103396411516 0.0016275887901978686 -0.0019144275428825872 -0.0024648822610344933 0.0044306977393253561 -0.0011426519419237087 -0.010433361045642874 0.0013367935547161473 -0.00042156443941822281 -0.00076664992360775137 -0.0035212782198251859 -0.00016876832289205318 0.0016198355126998234 0.0040397045553485214 0.0008426348999251267 0.0051738240256730475 0.0013163579956488088 -0.00033905422309562242 0.0001669569923645484 0.00050771667308495113 -0.0015978337583235161 0.0018536799021539332 -0.00019381269082194259 0.00058034267433842827 -0.0011217289171760803 0.00034291955216494421</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>1531.71147540984</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.084974283303880294</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.10854713862573513</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.27991397000000001</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.50035473226150684</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="perbrev_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/ankle_l/ankle_angle_l /jointset/subtalar_l/subtalar_angle_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.18799382940531809 0.021379693390712128 -0.00091128993030227393 -0.0031326841955941751 0.0022397389226217609 0.0052249154102032335 0.0067081250668763904 -0.0061467603980718735 0.0066766902502136934 -0.0019015662810621331 -0.006799553822591402 0.009124033320173865 -0.00039395650607563208 0.00073714233015408873 0.00012048912749287373</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>2</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>4</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>781.80239820000008</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.059428704876518523</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.12883979624137135</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.20523611999999999</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.69841771804576547</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="perlong_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/ankle_l/ankle_angle_l /jointset/subtalar_l/subtalar_angle_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.36126963273109663 0.020947668882333285 -0.0021773808973992721 -0.001783963411899277 0.00024461117045550078 0.0081524426545328509 0.0031578869775494159 -0.0028747013450449192 0.0052521501132827006 -0.0020861876948844757 -0.0054162574299991134 0.010366212369982577 -0.00050445424248258565 0.0015959653579350557 0.00014823526523450887</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>2</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>4</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>1673.0571320999998</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.071088437294416745</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.29458509425905305</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.24795247000000001</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.68968644623466924</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="piri_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_l/hip_flexion_l /jointset/hip_l/hip_adduction_l /jointset/hip_l/hip_rotation_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.14876359310521081 0.026534136002217545 -0.0054322550684194788 -0.0027441615309275759 0.0011895697570368253 0.0013150006428332955 0.025778277398707167 0.00089322456336521036 -0.011777331233009418 0.0031264921568719224 0.001326937955673865 -0.01005444392049791 0.0010211763553962046 0.0056323174904751114 -0.0026036363121495834 -0.0016371919671659425 -0.0013367678258073125 -0.00029203830505518391 -0.00034861181771686376 -0.0019838057915773366 -0.00018533194169261311 0.010055514806318055 -0.029593527797762899 0.0049621485392633254 0.0028808281751902969 -0.00083559392790312145 0.020150020678535243 0.0099859955481048594 -0.011631254714142517 -0.0032216138653494721 -0.0056033488031376642 -0.0077471079517411716 0.0015847313648902194 0.00096893150952232908 0.0045511285986765985 0.00072320651678177644 0.0021483418313544942 -0.0087617783119635917 -0.0069259736423831954 -4.5475234605097618e-05 -0.016268360783464022 0.0055172076114145697 0.0097153930050778922 0.006323185947920979 0.0016908140481045628 -0.0011081951381881569 -0.0019911584884046685 0.0068758210919858519 0.0011585860373356412 -0.00076477125296423227 -0.005202784364750696 -0.00090308778254708584 0.00011694232641821926 -0.00083476254599926974 0.00082114128165115612 2.6622901903195001e-05</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>1544.6803278688501</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.026641318692500946</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.12390460915718576</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.17453293</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.79224514210839159</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="psoas_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_l/hip_flexion_l /jointset/hip_l/hip_adduction_l /jointset/hip_l/hip_rotation_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.22566358183558488 0.00024797296113438519 -0.0034188033354505742 -1.734287149695339e-05 -1.1642215221008327e-05 -0.0071344254154194634 0.0024456946128744213 -0.0012879793230526015 0.00049617046451257054 -0.0048078663566685281 0.00043008019952774757 -0.00095042857167139394 -0.00019669856715436588 0.0010287568556440327 -5.0267491583260567e-05 -0.016942433620742346 -0.00073940808288159719 -0.0021098301067223892 -8.6735315768626743e-05 -0.0037886207234646423 -0.0054350053181947411 0.0014934847792522916 0.0085070843327933968 -0.0044612286458751566 0.0035830157511283047 -0.0086494782339935922 0.00048154661018885741 0.0011722982208375165 -0.001230387971826147 -0.0021280052580753871 0.0028717059010550518 0.00054129632807505511 0.00076770014631675088 -0.0015247657046466882 0.00063432711301075707</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>3</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>4</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>2140.185245901645</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.1014572476695115</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.11167347207489245</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.21552513000000001</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.5006521634783222</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="recfem_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_l/hip_flexion_l /jointset/hip_l/hip_adduction_l /jointset/hip_l/hip_rotation_l /jointset/knee_l/knee_angle_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.51237543618553572 0.042557624935658962 0.011400107352724263 -0.014776641188810653 0.0040778345057479312 -0.00024071055940886997 0.0018826657309510286 0.004631983811759716 -0.012373893346180291 0.0097013931314504556 -0.0023543293545351244 -0.00039187302448221762 0.008316201513345254 -0.0053034447445215929 0.00076683749939886832 0.00089489844653373618 -0.0081224059890911606 0.0038486204288006682 0.0030053988777291921 -0.0046483993969865505 0.0018309355118606295 0.017309604548907915 -0.0037344926025329518 0.0061412273355229557 -0.0029941144702432913 0.00034816423225442282 -0.0046719060848969922 -0.00035483587696953417 0.0018754859759903021 -0.00069825284697324762 0.0001700926795842541 -0.0040346355467418054 0.0019067372515029195 0.0029647831361232714 -0.0010176017171554851 -0.0050209408383397125 -0.016950020457347212 -0.0052037317171168031 0.0060982579138075029 -0.0022739771818562344 0.0019783415689112061 -0.0041662065337617973 0.0013643723997490663 -0.003288972021530904 0.0038440103966771947 -0.0052520295126210941 -0.0029119972718591007 0.006058342239534613 -0.00440584993298169 0.0010821764284350624 -9.8098585624613061e-05 0.00029158843562591182 0.0030599465911320435 -0.0047376887339227493 -0.0011019156611181309 -0.0013414380605245326 -0.031297232523193073 -0.00033406987441098003 0.00049773362714628996 6.8502298072985689e-05 5.1486166046783665e-05 -0.0020049126765891117 0.0094151490540238005 -0.01183465879679451 0.0038029123923595098 0.0037243845677915003 -0.0051767272392105861 0.0029437494234104931 0.0024240200325525369 -0.0021798248864742884 0.002600573450181273 0.0004741356174117208 0.0041375862877791915 -0.0058903884060413567 0.002469187088703753 -0.00023423820385793542 0.0052221855544820131 -0.00168024558527802 0.0052863967877571916 -0.0019874796543290526 -0.0023264923285033459 0.012780425999694481 -0.0057402846481473535 0.0048429824398252431 -0.0019937096968990972 7.0009970722727244e-05 -0.004095660658106506 -0.0054769584719888366 0.0075050403616834134 -0.002263156167687911 0.0030031271860868377 -0.017199616346480533 0.0004202504238987857 -0.0013346272666853647 0.00029540141288166558 -0.0007023233146262024 0.0022395528819330723 -0.0012062524992293001 -0.0026428463074806199 -0.0029117190317344117 0.0023943607208362209 4.7184667315075296e-05 0.0029582777124929766 -0.0027848252889702647 0.0061876478791349793 -0.0019941104329918961 0.00070130883117900354 0.013625283991080943 -0.0050516189341039668 0.00040958604113352625 -0.0041289085687213137 0.0035230283925558282 0.0014628773570645572 -0.00062362444786343094 -0.00025029451566946056 0.00037020086191033374 0.0032518452928650852 -0.00065614973016143974 0.0020729265475805036 -0.0014580122819260104 -0.0013070474544849477 0.0017353067296176686 0.00025393545772749832 0.00016443505373262725 -0.00084411135957037774 -0.00051328883057242939</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>4</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>3287.6114754098398</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.074168557152039558</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.45398383631462169</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.21701490000000001</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.89987812942923495</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="sart_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_l/hip_flexion_l /jointset/hip_l/hip_adduction_l /jointset/hip_l/hip_rotation_l /jointset/knee_l/knee_angle_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.58392763854902241 -0.011692539997448646 -0.017155598560977786 0.0098760493317003751 -0.0041461512256175601 0.00075711794090548099 0.0035939674305878202 -0.00076898798600001064 0.0020946754592076522 -0.0018236870492193179 0.00047590824898832143 -0.0017091385779198132 -0.00089472416727320327 0.00034434076655149139 -9.3622151017753227e-06 -0.0013342504936471261 0.0024345841452914274 -0.0011223422456352031 -0.00043437020706470122 0.00094014495044305603 -0.00012878219642250372 0.019792851599910736 0.0015511844710594273 -0.0027332262915920153 0.0015919376455843964 -0.00027972614689286506 0.0002613381272885063 0.00012640112025108356 -0.00037545829911349521 0.00019707023946574463 0.0034805822936170073 0.0010981164537268531 -0.00063449370424177674 -0.0013636613452634614 0.00061920900396555262 0.00061353356779398878 -0.028569510015256969 0.0013133196792296685 -0.001280177650794651 0.00040913718987988109 0.00013741960999351973 3.8537583327064116e-05 -5.261423982795858e-05 0.0017175802858341799 -0.001920920672328436 0.0031277965788477999 -0.0020191786814062855 -0.001366070368416978 0.0010372075043708099 -9.6005002341643074e-05 -5.0556852590964187e-05 -0.0016672327290073218 0.0009659573816923118 0.0015084256298737988 -0.00038393754919582336 0.00099440454817552185 -0.027313056536332606 0.00023866806495056515 -0.00011058831563047142 6.9396210064660542e-05 -3.9600330100268911e-05 0.007573440288161616 -0.0016596572200334738 0.0021960645547942407 -0.00075757955829009469 -0.00058405083900244415 0.00073686653601622671 -0.0004261779726150508 -0.0011474942359177109 0.00048570975648953634 -0.00029349987625380434 0.005181357178519805 -0.0010709220340545168 0.00084356219944085821 -0.00025051893071659052 5.4521002670339727e-05 -0.00024865660040370937 -0.00033437545466420373 -0.0036987660710938609 0.0015254999853135417 -0.00024216433445495636 0.011988255787318318 0.00060769955064303958 -0.00051536150049822987 0.00093208657941814838 -0.00020353430625934602 0.0034548752704409809 0.0006868355858326413 -0.001410373005794812 -0.00031911484485846933 -0.002263331668228907 -0.026837536698714595 -0.00024585351733237744 0.00034052130438027575 -9.0329656508132005e-05 -0.00096740096862402061 -0.00056644089988059992 0.00038786931347634812 0.00018590046656445148 0.00047573933650561914 -0.00035595902738303105 0.0049243712264650701 0.0003744545227084969 -0.00011803114675418622 -0.0013561784926832501 0.0010564378256522073 -0.0020053247869911504 0.011779564116700581 0.00045343715182567541 -7.502395949790519e-05 -0.0015904370340702341 0.002852423366899491 -0.00035686458608356105 0.0001818545854850269 -0.0007480035220186526 -0.00020480593278694563 -0.00052285637864440352 0.00063094503638389909 7.9100817148501125e-05 -0.00027055412129253591 -0.00204344295771831 0.0015758033484528494 -0.00011296599586909793 -1.554977849545027e-05 -0.00068299980554504982 0.00011755286576877885</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>4</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>374.11967213114701</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.39211576327554148</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.13245934345398908</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.026135419999999999</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.72044094620323929</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="semimem_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_l/hip_flexion_l /jointset/hip_l/hip_adduction_l /jointset/hip_l/hip_rotation_l /jointset/knee_l/knee_angle_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.41163480384731221 -0.032017281306027677 0.00032307787628316805 -0.0062436238422708939 0.0038449054699426764 -0.00050506023277035593 -0.00046626012223995343 0.0009725934461977232 0.00032937852432897126 -0.00068576453617343654 0.00013352509458984307 0.0018453386241642413 0.00085957697037260033 0.00016181072956006673 -0.00028315183790179215 9.6783941592657168e-07 2.7319081364458615e-05 -4.6309878465084333e-05 -0.00071931281351277857 0.00031463898136718511 -3.0104972464630071e-05 -0.018189044889317791 0.00010017306104027381 -0.00056135894979624846 0.0004634967302577528 -9.836611445899194e-05 -0.0026457890331120244 -0.0014771241440740062 -0.00025848883133556373 0.00045003355709701876 -0.0013992126795185026 0.0018879313296545617 -0.0008289085251958104 0.00023324622722546359 0.00063157316393224567 0.00030996335194038646 0.018957197346392507 0.00047437680160682501 -0.00035051436844427001 0.00010283448260746712 -4.134423311629267e-05 -0.0026228194013469624 0.00098186779234579399 -0.00028075719142390296 -0.00087235249070482515 0.0013344020186305912 0.0036948218475582901 -0.00030651542114940467 0.00032759866882933839 0.0012693319464108666 0.00013007128705053292 0.00072884987880188993 -0.0022569015138836791 0.00067415486512647105 0.0001879197588205905 0.00034841638724805593 0.039118888119620013 -0.0012833195741801045 -0.00038643172080220895 0.0006543029305565287 -5.8276237467359045e-05 -0.0014254689243112814 -0.00064580598133845532 0.00050001770805544138 -0.00011964317752051595 0.0014443870637163899 0.00028270846756082773 -3.9355609129634135e-05 -0.0001349097429259676 0.0003656630349160913 -4.5876502392897932e-05 4.8339065688982492e-05 -6.7984245961398538e-05 -0.00026593912820995912 0.00013678165105494313 0.0025077626883941908 0.0047200088605477029 -0.0022525573367568131 0.00078391132854033012 0.0003432514355883238 -0.0010934822486362364 -0.022356260749330652 -0.0005230493467140605 6.8992370724715608e-05 6.9151787797059293e-05 0.00011672454692837663 0.00078501405411795285 -0.00072423128727705467 -0.00025697173910767517 -0.0022000367525180191 0.0022551290811659314 0.018434646174940974 0.0012572116292518961 2.8278236144581905e-05 -0.0003301034300333968 0.0011150036880354219 -0.00019809995095977325 4.1585180821299763e-05 -0.001475177994610676 7.1546224399924446e-07 -0.00027125996707014254 -0.000278937607107612 0.00071425528570993597 -0.00041599230010760344 0.00077954479318322512 0.00063254687893807727 -0.00030105668339426182 -0.0075277264105776736 0.00015408897117675548 0.00049716283640323031 -0.00023755701570374061 -0.0082596596371036189 -0.00040414316459561723 0.00016764231969252784 0.00029947977272918675 0.00010577880748911136 8.3890482497475769e-05 0.00027108112414084631 0.00025396596392571424 -0.0010323630090430518 0.0045488068285253367 -0.00087004970114294223 -1.0551561283344348e-05 -0.00020740267966624454 -0.00030625787767614161 0.00044206616626470997</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>4</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>3301.4803278688496</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.064877862380807547</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.35005773596202205</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.25456146000000002</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.89306179154117937</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="semiten_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_l/hip_flexion_l /jointset/hip_l/hip_adduction_l /jointset/hip_l/hip_rotation_l /jointset/knee_l/knee_angle_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.45353261652781246 -0.038698996754524498 0.00040959674408782827 -0.010045887577222513 0.0060227427311846824 -0.00081220278277915621 0.0001954461616638274 0.0019331590090445354 0.0010296310897969772 -0.0014983946293391037 0.00026278502393471833 0.0025573999743373358 0.0019095730505034395 -0.00012165909105490849 -0.00037366667560858799 -0.00071780962709560062 0.0012070988606433224 -0.00058733807866351382 -0.0017743433476407121 0.0011191518711537066 -0.00049879443353341001 -0.030515920588255245 0.00065971346014566563 -0.0023623390385275533 0.001798726406346764 -0.00039744938894939279 -0.0042423137495921533 -0.0018730272991854193 -0.0013684890265513339 0.0010508758361991396 -0.0019028707866868969 0.0023436360929968755 -0.0011707773033131879 0.00094762971773742002 5.3526945347654245e-05 0.001816075363453979 0.025027146900236844 0.0014476115547407205 -0.00095115832267488542 0.00021445670190028141 -0.00056103990043597095 -0.0049463139348007107 0.0019271608927015527 -0.00054848805598753034 -0.0015050508541570901 0.0015506773315106769 0.0064347863912967646 -0.00043639316920350037 0.00066407522552398585 0.001788590392041461 0.00032336472157639459 0.00060377845701016508 -0.0032706762601089809 0.0014472997601319071 0.00068029904965413029 0.0008450329064295123 0.043712597821818043 -0.0015334412377765027 -0.0020012093964229677 0.0017591493783108564 -0.00016756079715253837 -0.0024459431870611169 -0.00060597559184613398 0.00013923301981556737 3.5476957833674379e-05 0.0021381897316640926 0.0010337905247836164 -0.00022114532961696638 1.2449391142629451e-05 0.00087238758607820514 -0.00032727974166288192 0.0011933432182954081 -0.00048059864845584799 -0.00068022713998179421 0.00050330582654714595 0.0031914915152276057 0.0080782192349066525 -0.0038476630660580699 0.00071437836991435381 0.00088051514373866172 -0.0012980667701223735 -0.025936116440604944 -0.0008621759141306494 0.00018525277814535838 0.00060745261950737647 -1.7422687354324944e-05 0.0012769789304934104 -0.0013071997860661022 -0.00095570600607361878 -0.0035878172818088194 0.0025011517673835097 0.025133232359613854 0.0016963041857038076 0.00065754527866058673 -0.00076652707331314465 0.001484362753325008 -0.00011572233415638687 -7.0007657409663216e-05 -0.0022884739283345135 -5.223095478916473e-05 -0.00085365978766761873 -0.0002581878479178181 0.0022786518431148653 -0.0013783723491638689 0.0010683985818795605 0.0013149493720847631 -0.00036473791003241093 -0.011226286381604203 0.00015742454875242173 0.00095451609269038475 -0.00018298314431165752 -0.01000578806189936 -0.00067343144985282692 0.00035261703974306838 0.00052708512441977716 0.00029336018712998739 9.0484755245373019e-05 0.00021482899356153174 0.0007547047360868831 -0.0016802066564111469 0.0062494025521511766 -0.0012848134296275047 -0.0001088283157276658 -0.00040714659182478768 -0.00071191741198617701 0.00064023728676060082</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>4</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>886.94262295082092</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.18678110728471156</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.24990387935378747</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.24129500000000001</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.79759088043127335</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="soleus_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/ankle_l/ankle_angle_l /jointset/subtalar_l/subtalar_angle_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.32077289553410415 -0.0032122497017132729 0.0062496166101386925 0.00052175029947768676 0.032398287719241491 -0.0017255760210679876 -0.0049907650073599385 -0.0051677292637884696 0.0027647238045472901 -0.0051139683132226344</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>2</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>3</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>9292.2639344262316</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.044576754968284393</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.27774271502523412</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.38142888000000003</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.64909112403383329</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="tfl_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/hip_l/hip_flexion_l /jointset/hip_l/hip_adduction_l /jointset/hip_l/hip_rotation_l /jointset/knee_l/knee_angle_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.53647681418948467 0.015281138175798606 0.0059961082246705894 -0.0077921575323141546 0.00285375591676013 -0.00043303747468748289 -0.0020001196973429406 -0.00012466144353738819 0.00043056007897010002 -0.00042642961204034384 0.00011891830875588016 0.013504042335322526 0.00018981441860165679 -0.00026054964985414798 7.3870650917726318e-05 0.00025772300009345103 0.0010679410854921318 -0.00058128034691640965 -0.0015112957744896282 -0.00012091471846787695 -0.0013876460108144298 0.063496187760701872 0.00050442950401033307 -0.00081342628466573121 0.00042396382651606665 -6.201994979177434e-05 -0.014303270219467052 0.00096732214176363258 -0.00095922976919588833 0.00026566903354390334 -0.0203398732284596 -0.00025279216901128907 -0.0004847368410195391 0.0033116718950428558 -0.0033364998841432254 -0.0011504412982731396 -0.02334789701093698 0.0005362235755748939 -0.0006188594707063421 0.00024703203511079692 -0.00098926908873485722 0.0001346547508791422 0.00034144599874293775 0.0044961452444863227 -0.0016827144920581946 -0.0047249737898976563 -0.0027142101348729283 -0.00040806443859311753 0.00060143134512414815 -0.00086411443937040012 0.0020820043492312565 -0.00038486803685870285 9.5539025717645279e-05 0.0017524550450254107 0.00058484160897679272 0.0019874589935173566 -0.032182464295405951 0.00011657885527939952 -6.5034898249224731e-05 1.9277757971271657e-05 -8.0108457837264173e-06 -0.032506762903793687 -0.00035021236332378851 0.00050929012669558601 -0.00019100678100405892 0.0088512204796211587 0.00049993472491076927 -0.00013454199111280284 0.0080641494983398117 0.00059515583124827094 0.001445264422067471 -0.0010571869346454033 -4.5310039621777645e-05 9.3156181531495389e-05 -7.9451127940742739e-05 0.014300556376304114 -0.00027047951400290519 1.6280833613174169e-07 -0.0036841805100401698 -0.00037004878105256593 -0.0034829665470850505 0.0054964454196784794 -0.00027235979011092917 -0.00024828720157032166 -0.0084221438600734066 -0.0035381800317409273 -0.0083497880741166975 0.0024712718747450396 -0.0023751610233106865 -0.000592609777550913 -0.0020524766361819462 -0.023223983396282493 -0.00014973315172025912 0.00015426098189198274 -3.6749124308651246e-05 3.7064589195162626e-05 -9.1821324125966762e-05 0.00012995373754460838 -0.0012804369921585381 0.0001167639854253632 0.0018957218071182337 -0.008446069058724812 9.9091255780081242e-05 9.4206454054195229e-05 0.0056601882466333223 0.0003644703289945994 0.015887121682293909 0.0093062575085667582 0.00044904788440378838 0.0036162963753404382 -0.005147712268224418 0.0013051204431692492 -8.0613388577414436e-05 4.0589895944885516e-05 0.0012557246173298862 -0.0001088227929458439 0.00017029098162345675 -0.00024313333312614942 -0.00011434341467321678 0.0025593067071350414 0.00544132105298908 0.00046294563494073333 -3.0132098174664709e-05 0.00014119539958938929 0.00022221812073538663 4.2605461282614349e-05</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>4</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>616.80983606557493</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.09977718409659056</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.43904237857611716</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.052359879999999998</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.50667196309779616</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="tibant_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/ankle_l/ankle_angle_l /jointset/subtalar_l/subtalar_angle_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.29545720576167617 -0.0075887853568329311 -0.0036906222727362942 0.0009729739268528072 0.00069468441865073408 -0.039494818058216613 0.0041747870481638628 0.015630494351371326 0.0012654954039637701 -0.0062069317519810917 -0.0027455625574604597 0.010453272739677496 0.0024499632311233287 -0.0021263548442814299 0.00060737714818679452</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>2</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>4</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>1841.1786885245851</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.088325924696511807</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.20998579236155973</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.19518281000000001</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.71051928294767164</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="tibpost_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/ankle_l/ankle_angle_l /jointset/subtalar_l/subtalar_angle_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.31004963539860642 -0.013701731904091805 0.0010775840320794352 0.002625636764659415 0.0072076556781929813 0.0073123850531433597 -2.7348168005525659e-05 -0.0033870375937672826 0.0041587174082556282 -0.00071954338616888724</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>2</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>3</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>2595.2311475409751</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.045212227354635884</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.26699878355568224</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.22648906999999999</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.69223439602666315</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="vasint_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/knee_l/knee_angle_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.28457002477542259 0.040681717789582669 0.0070490604180805817 -0.012493915064645261 0.004013049173152595 -0.00030557021244333139</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>1</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>2546.0409836065651</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.1055715465860155</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.20042722259529186</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.063099730000000007</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.70738868164445234</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="vaslat_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/knee_l/knee_angle_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.29917032871057786 0.036767804620666318 0.021775914081467913 -0.029708874524294514 0.011671756825501601 -0.0014856090686389827</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>1</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>7723.1508196721406</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.10287278904815571</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.22244464540185693</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.25286729000000002</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.71100955172042646</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<DeGrooteFregly2016Muscle name="vasmed_l">
										<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
										<appliesForce>true</appliesForce>
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>0.01</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>3</max_control>
										<!--The path of the actuator which defines length and lengthening speed.-->
										<FunctionBasedPath name="path">
											<!--The list of paths to the model coordinates that are used as arguments to the length, lengthening speed, and moment arm functions. You must provide a least one coordinate path, and the order of the paths must match the order of the arguments passed to `length_function` (and `moment_arm_functions` and `lengthening_speed_function`, if provided).-->
											<coordinate_paths>/jointset/knee_l/knee_angle_l</coordinate_paths>
											<!--(Required) The OpenSim::Function object that computes the length of the path as a function of the coordinate values. The function arguments must match the order in `coordinate_paths`.-->
											<length_function>
												<MultivariatePolynomialFunction>
													<!--Coefficients of a multivariate polynomial function in order of ascending powers starting from the last independent component.-->
													<coefficients>0.27293172402859733 0.040437152998330166 0.0069288365680119368 -0.014443837444382438 0.0053404352586347908 -0.00055454649772429662</coefficients>
													<!--Number of input dimensions (i.e., independent components).-->
													<dimension>1</dimension>
													<!--The largest sum of exponents in a single term.-->
													<order>5</order>
												</MultivariatePolynomialFunction>
											</length_function>
										</FunctionBasedPath>
										<!--Maximum isometric force that the fibers can generate-->
										<max_isometric_force>4121.7344262294901</max_isometric_force>
										<!--Optimal length of the muscle fibers-->
										<optimal_fiber_length>0.10249440413890117</optimal_fiber_length>
										<!--Resting length of the tendon-->
										<tendon_slack_length>0.19921583784871344</tendon_slack_length>
										<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
										<pennation_angle_at_optimal>0.42222252999999998</pennation_angle_at_optimal>
										<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
										<max_contraction_velocity>20</max_contraction_velocity>
										<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
										<ignore_tendon_compliance>false</ignore_tendon_compliance>
										<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
										<ignore_activation_dynamics>false</ignore_activation_dynamics>
										<!--Smaller value means activation can increase more rapidly. Default: 0.015 seconds.-->
										<activation_time_constant>0.01</activation_time_constant>
										<!--Smaller value means activation can decrease more rapidly. Default: 0.060 seconds.-->
										<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
										<!--Value of activation in the default state returned by initSystem(). Default: 0.5.-->
										<default_activation>0.01</default_activation>
										<!--Scale factor for the width of the active force-length curve. Larger values make the curve wider. Default: 1.0.-->
										<active_force_width_scale>1.5</active_force_width_scale>
										<!--Use this property to define the linear damping force that is added to the total muscle fiber force. It is computed by multiplying this damping parameter by the normalized fiber velocity and the max isometric force. Default: 0.-->
										<fiber_damping>0.01</fiber_damping>
										<!--Fiber strain when the passive fiber force is 1 normalized force. Default: 0.6.-->
										<passive_fiber_strain_at_one_norm_force>0.70594804094955421</passive_fiber_strain_at_one_norm_force>
										<!--Tendon strain at a tension of 1 normalized force. Default: 0.049.-->
										<tendon_strain_at_one_norm_force>0.049000000000000002</tendon_strain_at_one_norm_force>
										<!--Make the passive fiber force 0. Default: false.-->
										<ignore_passive_fiber_force>true</ignore_passive_fiber_force>
										<!--The dynamics method used to enforce tendon compliance dynamics. Options: 'explicit' or 'implicit'. Default: 'explicit'. -->
										<tendon_compliance_dynamics_mode>implicit</tendon_compliance_dynamics_mode>
									</DeGrooteFregly2016Muscle>
									<ActivationCoordinateActuator name="tau_lumbar_bend">
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>-Inf</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>Inf</max_control>
										<!--Name of the generalized coordinate to which the actuator applies.-->
										<coordinate>lumbar_bend</coordinate>
										<!--The maximum generalized force produced by this actuator.-->
										<optimal_force>200</optimal_force>
									</ActivationCoordinateActuator>
									<ActivationCoordinateActuator name="tau_lumbar_ext">
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>-Inf</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>Inf</max_control>
										<!--Name of the generalized coordinate to which the actuator applies.-->
										<coordinate>lumbar_ext</coordinate>
										<!--The maximum generalized force produced by this actuator.-->
										<optimal_force>300</optimal_force>
									</ActivationCoordinateActuator>
									<ActivationCoordinateActuator name="tau_lumbar_rota">
										<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
										<min_control>-Inf</min_control>
										<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
										<max_control>Inf</max_control>
										<!--Name of the generalized coordinate to which the actuator applies.-->
										<coordinate>lumbar_rota</coordinate>
										<!--The maximum generalized force produced by this actuator.-->
										<optimal_force>100</optimal_force>
									</ActivationCoordinateActuator>
								</objects>
								<groups>
									<ObjectGroup name="right_leg">
										<members />
									</ObjectGroup>
									<ObjectGroup name="left_leg">
										<members />
									</ObjectGroup>
									<ObjectGroup name="hip_add_r">
										<members />
									</ObjectGroup>
									<ObjectGroup name="hip_abd_r">
										<members />
									</ObjectGroup>
									<ObjectGroup name="hip_flex_r">
										<members />
									</ObjectGroup>
									<ObjectGroup name="hip_ext_r">
										<members />
									</ObjectGroup>
									<ObjectGroup name="hip_inrot_r">
										<members />
									</ObjectGroup>
									<ObjectGroup name="hip_exrot_r">
										<members />
									</ObjectGroup>
									<ObjectGroup name="knee_flex_r">
										<members />
									</ObjectGroup>
									<ObjectGroup name="knee_ext_r">
										<members />
									</ObjectGroup>
									<ObjectGroup name="ankle_df_r">
										<members />
									</ObjectGroup>
									<ObjectGroup name="ankle_pf_r">
										<members />
									</ObjectGroup>
									<ObjectGroup name="everter_r">
										<members />
									</ObjectGroup>
									<ObjectGroup name="inverter_r">
										<members />
									</ObjectGroup>
									<ObjectGroup name="hip_add_l">
										<members />
									</ObjectGroup>
									<ObjectGroup name="hip_abd_l">
										<members />
									</ObjectGroup>
									<ObjectGroup name="hip_flex_l">
										<members />
									</ObjectGroup>
									<ObjectGroup name="hip_ext_l">
										<members />
									</ObjectGroup>
									<ObjectGroup name="hip_exrot_l">
										<members />
									</ObjectGroup>
									<ObjectGroup name="hip_inrot_l">
										<members />
									</ObjectGroup>
									<ObjectGroup name="knee_flex_l">
										<members />
									</ObjectGroup>
									<ObjectGroup name="knee_ext_l">
										<members />
									</ObjectGroup>
									<ObjectGroup name="ankle_df_l">
										<members />
									</ObjectGroup>
									<ObjectGroup name="ankle_pf_l">
										<members />
									</ObjectGroup>
									<ObjectGroup name="everter_l">
										<members />
									</ObjectGroup>
									<ObjectGroup name="inverter_l">
										<members />
									</ObjectGroup>
								</groups>
							</ForceSet>
							<!--Markers in the model.-->
							<MarkerSet name="markerset">
								<objects>
									<Marker name="C7">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/torso</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>-0.07064922631181117 0.4149163994709979 -7.470326530752924e-09</location>
										<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
										<fixed>true</fixed>
									</Marker>
									<Marker name="R_GTROC">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/femur_r</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>-0.025396541999999998 -0.017057074413999999 0.09601375136000001</location>
										<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
										<fixed>true</fixed>
									</Marker>
									<Marker name="L_GTROC">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/femur_l</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>-0.025396541999999998 -0.017057074413999999 -0.09601375136000001</location>
										<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
										<fixed>true</fixed>
									</Marker>
									<Marker name="R_LAT_FEM_EPI">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/femur_r</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>0.0058975985999999998 -0.40539568312999996 0.05801712584000001</location>
										<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
										<fixed>true</fixed>
									</Marker>
									<Marker name="L_LAT_FEM_EPI">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/femur_l</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>0.0058975985999999998 -0.40539568312999996 -0.05801712584000001</location>
										<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
										<fixed>true</fixed>
									</Marker>
									<Marker name="R_PSIS">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/pelvis</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>-0.14767260117520004 0.031603657271987051 0.048535921868929431</location>
										<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
										<fixed>true</fixed>
									</Marker>
									<Marker name="L_PSIS">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/pelvis</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>-0.13955218955877657 0.032692615963332797 -0.050607207456618439</location>
										<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
										<fixed>true</fixed>
									</Marker>
									<Marker name="R_ACROMION">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/torso</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>-0.066300536033673946 0.36915452937378135 0.19635951111916009</location>
										<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
										<fixed>true</fixed>
									</Marker>
									<Marker name="L_ACROMION">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/torso</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>-0.066300563966237472 0.36915435694386395 -0.19635920248221284</location>
										<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
										<fixed>true</fixed>
									</Marker>
									<Marker name="R_ASIS">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/pelvis</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>0.0086327435480000013 -0.0015643782781999999 0.14893438040000001</location>
										<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
										<fixed>true</fixed>
									</Marker>
									<Marker name="L_ASIS">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/pelvis</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>0.0086327408282346006 -0.0015643814702838599 -0.14893464393027359</location>
										<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
										<fixed>true</fixed>
									</Marker>
									<Marker name="R_MED_FEM_EPI">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/femur_r</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>0.0058265066950000007 -0.40946347442999997 -0.061639291280000008</location>
										<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
										<fixed>true</fixed>
									</Marker>
									<Marker name="R_MED_MAL">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/tibia_r</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>0.0049837219650999999 -0.38806606800000004 -0.037391748416000001</location>
										<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
										<fixed>true</fixed>
									</Marker>
									<Marker name="R_CALC">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/calcn_r</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>-0.008818583113353028 0.0088495344698451828 -0.0063680636279606698</location>
										<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
										<fixed>true</fixed>
									</Marker>
									<Marker name="R_5TH">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/toes_r</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>-0.034257348257471197 0.0038689195615191369 0.041127233966078265</location>
										<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
										<fixed>true</fixed>
									</Marker>
									<Marker name="R_1ST">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/toes_r</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>0.0038689195615191369 0.0038689195615191369 -0.034046492141368401</location>
										<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
										<fixed>true</fixed>
									</Marker>
									<Marker name="L_MED_FEM_EPI">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/femur_l</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>0.0058265066950000007 -0.40946347442999997 0.061639291280000008</location>
										<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
										<fixed>true</fixed>
									</Marker>
									<Marker name="L_LAT_MAL">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/tibia_l</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>-0.0058784963726999998 -0.41556822240000002 -0.052816927496000005</location>
										<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
										<fixed>true</fixed>
									</Marker>
									<Marker name="R_LAT_MAL">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/tibia_r</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>-0.0078859067469999999 -0.41450932559999998 0.051698251472000002</location>
										<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
										<fixed>true</fixed>
									</Marker>
									<Marker name="L_CALC">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/calcn_l</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>-0.0090024341709164183 0.013845160786069923 0.0047469321668102893</location>
										<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
										<fixed>true</fixed>
									</Marker>
									<Marker name="L_1ST">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/toes_l</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>0.0038689195615191369 0.0038689195615191369 0.034192118273663981</location>
										<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
										<fixed>true</fixed>
									</Marker>
									<Marker name="R_DORSAL">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/calcn_r</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>0.15089967068699131 0.018638157627707444 0.018469467664993015</location>
										<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
										<fixed>true</fixed>
									</Marker>
									<Marker name="L_DORSAL">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/calcn_l</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>0.16043577127263245 0.021599250162847517 -0.0073393845525739996</location>
										<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
										<fixed>true</fixed>
									</Marker>
									<Marker name="L_5TH">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/toes_l</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>-0.03405624181866343 0.0038689195615191369 -0.041044903357809137</location>
										<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
										<fixed>true</fixed>
									</Marker>
									<Marker name="L_MED_MAL">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/tibia_l</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>0.014005496293 -0.38806104000000002 0.037567412112000001</location>
										<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
										<fixed>true</fixed>
									</Marker>
									<Marker name="heel_r">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/calcn_r</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>0.0011070327596084011 -0.0080999999999999996 0</location>
									</Marker>
									<Marker name="latheel_r">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/calcn_r</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>0.018040255047322203 -0.0080999999999999996 0.021166527859642251</location>
									</Marker>
									<Marker name="medheel_r">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/calcn_r</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>0.018040255047322203 -0.0080999999999999996 -0.021166527859642251</location>
									</Marker>
									<Marker name="mid_r">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/calcn_r</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>0.070741719552714494 -0.0080999999999999996 0.0047413022405598639</location>
									</Marker>
									<Marker name="latmid_r">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/calcn_r</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>0.061089782848717626 -0.0080999999999999996 0.02624649454595639</location>
									</Marker>
									<Marker name="medmid_r">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/calcn_r</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>0.077599674579238581 -0.0080999999999999996 -0.01947320563087087</location>
									</Marker>
									<Marker name="mh1_r">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/calcn_r</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>0.15409232281819557 -0.0080999999999999996 -0.01947320563087087</location>
									</Marker>
									<Marker name="mh3_r">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/calcn_r</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>0.1403764127651474 -0.0080999999999999996 0.0098212689268740039</location>
									</Marker>
									<Marker name="mh5_r">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/calcn_r</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>0.12107253935715366 -0.0080999999999999996 0.031326461232270529</location>
									</Marker>
									<Marker name="hallux_r">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/toes_r</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>0.047582354628475779 -0.0081000000000000013 -0.01532456617038099</location>
									</Marker>
									<Marker name="othertoes_r">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/toes_r</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>0.03733775514440893 -0.0081000000000000013 0.020489198968133698</location>
									</Marker>
									<Marker name="heel_l">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/calcn_l</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>0.0011070327596084011 -0.0080999999999999996 0</location>
									</Marker>
									<Marker name="latheel_l">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/calcn_l</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>0.018040255047322203 -0.0080999999999999996 -0.021166527859642251</location>
									</Marker>
									<Marker name="medheel_l">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/calcn_l</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>0.018040255047322203 -0.0080999999999999996 0.021166527859642251</location>
									</Marker>
									<Marker name="mid_l">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/calcn_l</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>0.070741719552714494 -0.0080999999999999996 -0.0047413022405598639</location>
									</Marker>
									<Marker name="latmid_l">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/calcn_l</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>0.061089782848717626 -0.0080999999999999996 -0.02624649454595639</location>
									</Marker>
									<Marker name="medmid_l">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/calcn_l</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>0.077599674579238581 -0.0080999999999999996 0.01947320563087087</location>
									</Marker>
									<Marker name="mh1_l">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/calcn_l</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>0.15409232281819557 -0.0080999999999999996 0.01947320563087087</location>
									</Marker>
									<Marker name="mh3_l">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/calcn_l</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>0.1403764127651474 -0.0080999999999999996 -0.0098212689268740039</location>
									</Marker>
									<Marker name="mh5_l">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/calcn_l</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>0.12107253935715366 -0.0080999999999999996 -0.031326461232270529</location>
									</Marker>
									<Marker name="hallux_l">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/toes_l</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>0.047582354628475779 -0.0081000000000000013 0.01532456617038099</location>
									</Marker>
									<Marker name="othertoes_l">
										<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
										<socket_parent_frame>/bodyset/toes_l</socket_parent_frame>
										<!--The fixed location of the station expressed in its parent frame.-->
										<location>0.03733775514440893 -0.0081000000000000013 -0.020489198968133698</location>
									</Marker>
								</objects>
								<groups />
							</MarkerSet>
							<!--Geometry to be used in contact forces.-->
							<ContactGeometrySet name="contactgeometryset">
								<objects>
									<ContactHalfSpace name="floor">
										<!--Path to a Component that satisfies the Socket 'frame' of type PhysicalFrame (description: The frame to which this geometry is attached.).-->
										<socket_frame>/ground</socket_frame>
										<!--Location of geometry center in the PhysicalFrame.-->
										<location>0 0 0</location>
										<!--Orientation of geometry in the PhysicalFrame (body-fixed XYZ Euler angles).-->
										<orientation>0 0 -1.5707963267948966</orientation>
									</ContactHalfSpace>
									<ContactSphere name="heel_r">
										<!--Path to a Component that satisfies the Socket 'frame' of type PhysicalFrame (description: The frame to which this geometry is attached.).-->
										<socket_frame>/bodyset/calcn_r</socket_frame>
										<!--Location of geometry center in the PhysicalFrame.-->
										<location>0.0011070327596084011 -0.0080999999999999996 0</location>
										<!--Radius of the sphere (default: 0).-->
										<radius>0.014999999999999999</radius>
									</ContactSphere>
									<ContactSphere name="latheel_r">
										<!--Path to a Component that satisfies the Socket 'frame' of type PhysicalFrame (description: The frame to which this geometry is attached.).-->
										<socket_frame>/bodyset/calcn_r</socket_frame>
										<!--Location of geometry center in the PhysicalFrame.-->
										<location>0.018040255047322203 -0.0080999999999999996 0.021166527859642251</location>
										<!--Radius of the sphere (default: 0).-->
										<radius>0.014999999999999999</radius>
									</ContactSphere>
									<ContactSphere name="medheel_r">
										<!--Path to a Component that satisfies the Socket 'frame' of type PhysicalFrame (description: The frame to which this geometry is attached.).-->
										<socket_frame>/bodyset/calcn_r</socket_frame>
										<!--Location of geometry center in the PhysicalFrame.-->
										<location>0.018040255047322203 -0.0080999999999999996 -0.021166527859642251</location>
										<!--Radius of the sphere (default: 0).-->
										<radius>0.014999999999999999</radius>
									</ContactSphere>
									<ContactSphere name="mid_r">
										<!--Path to a Component that satisfies the Socket 'frame' of type PhysicalFrame (description: The frame to which this geometry is attached.).-->
										<socket_frame>/bodyset/calcn_r</socket_frame>
										<!--Location of geometry center in the PhysicalFrame.-->
										<location>0.070741719552714494 -0.0080999999999999996 0.0047413022405598639</location>
										<!--Radius of the sphere (default: 0).-->
										<radius>0.014999999999999999</radius>
									</ContactSphere>
									<ContactSphere name="latmid_r">
										<!--Path to a Component that satisfies the Socket 'frame' of type PhysicalFrame (description: The frame to which this geometry is attached.).-->
										<socket_frame>/bodyset/calcn_r</socket_frame>
										<!--Location of geometry center in the PhysicalFrame.-->
										<location>0.061089782848717626 -0.0080999999999999996 0.02624649454595639</location>
										<!--Radius of the sphere (default: 0).-->
										<radius>0.014999999999999999</radius>
									</ContactSphere>
									<ContactSphere name="medmid_r">
										<!--Path to a Component that satisfies the Socket 'frame' of type PhysicalFrame (description: The frame to which this geometry is attached.).-->
										<socket_frame>/bodyset/calcn_r</socket_frame>
										<!--Location of geometry center in the PhysicalFrame.-->
										<location>0.077599674579238581 -0.0080999999999999996 -0.01947320563087087</location>
										<!--Radius of the sphere (default: 0).-->
										<radius>0.014999999999999999</radius>
									</ContactSphere>
									<ContactSphere name="mh1_r">
										<!--Path to a Component that satisfies the Socket 'frame' of type PhysicalFrame (description: The frame to which this geometry is attached.).-->
										<socket_frame>/bodyset/calcn_r</socket_frame>
										<!--Location of geometry center in the PhysicalFrame.-->
										<location>0.15409232281819557 -0.0080999999999999996 -0.01947320563087087</location>
										<!--Radius of the sphere (default: 0).-->
										<radius>0.014999999999999999</radius>
									</ContactSphere>
									<ContactSphere name="mh3_r">
										<!--Path to a Component that satisfies the Socket 'frame' of type PhysicalFrame (description: The frame to which this geometry is attached.).-->
										<socket_frame>/bodyset/calcn_r</socket_frame>
										<!--Location of geometry center in the PhysicalFrame.-->
										<location>0.1403764127651474 -0.0080999999999999996 0.0098212689268740039</location>
										<!--Radius of the sphere (default: 0).-->
										<radius>0.014999999999999999</radius>
									</ContactSphere>
									<ContactSphere name="mh5_r">
										<!--Path to a Component that satisfies the Socket 'frame' of type PhysicalFrame (description: The frame to which this geometry is attached.).-->
										<socket_frame>/bodyset/calcn_r</socket_frame>
										<!--Location of geometry center in the PhysicalFrame.-->
										<location>0.12107253935715366 -0.0080999999999999996 0.031326461232270529</location>
										<!--Radius of the sphere (default: 0).-->
										<radius>0.014999999999999999</radius>
									</ContactSphere>
									<ContactSphere name="hallux_r">
										<!--Path to a Component that satisfies the Socket 'frame' of type PhysicalFrame (description: The frame to which this geometry is attached.).-->
										<socket_frame>/bodyset/toes_r</socket_frame>
										<!--Location of geometry center in the PhysicalFrame.-->
										<location>0.047582354628475779 -0.0081000000000000013 -0.01532456617038099</location>
										<!--Radius of the sphere (default: 0).-->
										<radius>0.014999999999999999</radius>
									</ContactSphere>
									<ContactSphere name="othertoes_r">
										<!--Path to a Component that satisfies the Socket 'frame' of type PhysicalFrame (description: The frame to which this geometry is attached.).-->
										<socket_frame>/bodyset/toes_r</socket_frame>
										<!--Location of geometry center in the PhysicalFrame.-->
										<location>0.03733775514440893 -0.0081000000000000013 0.020489198968133698</location>
										<!--Radius of the sphere (default: 0).-->
										<radius>0.014999999999999999</radius>
									</ContactSphere>
									<ContactSphere name="heel_l">
										<!--Path to a Component that satisfies the Socket 'frame' of type PhysicalFrame (description: The frame to which this geometry is attached.).-->
										<socket_frame>/bodyset/calcn_l</socket_frame>
										<!--Location of geometry center in the PhysicalFrame.-->
										<location>0.0011070327596084011 -0.0080999999999999996 0</location>
										<!--Radius of the sphere (default: 0).-->
										<radius>0.014999999999999999</radius>
									</ContactSphere>
									<ContactSphere name="latheel_l">
										<!--Path to a Component that satisfies the Socket 'frame' of type PhysicalFrame (description: The frame to which this geometry is attached.).-->
										<socket_frame>/bodyset/calcn_l</socket_frame>
										<!--Location of geometry center in the PhysicalFrame.-->
										<location>0.018040255047322203 -0.0080999999999999996 -0.021166527859642251</location>
										<!--Radius of the sphere (default: 0).-->
										<radius>0.014999999999999999</radius>
									</ContactSphere>
									<ContactSphere name="medheel_l">
										<!--Path to a Component that satisfies the Socket 'frame' of type PhysicalFrame (description: The frame to which this geometry is attached.).-->
										<socket_frame>/bodyset/calcn_l</socket_frame>
										<!--Location of geometry center in the PhysicalFrame.-->
										<location>0.018040255047322203 -0.0080999999999999996 0.021166527859642251</location>
										<!--Radius of the sphere (default: 0).-->
										<radius>0.014999999999999999</radius>
									</ContactSphere>
									<ContactSphere name="mid_l">
										<!--Path to a Component that satisfies the Socket 'frame' of type PhysicalFrame (description: The frame to which this geometry is attached.).-->
										<socket_frame>/bodyset/calcn_l</socket_frame>
										<!--Location of geometry center in the PhysicalFrame.-->
										<location>0.070741719552714494 -0.0080999999999999996 -0.0047413022405598639</location>
										<!--Radius of the sphere (default: 0).-->
										<radius>0.014999999999999999</radius>
									</ContactSphere>
									<ContactSphere name="latmid_l">
										<!--Path to a Component that satisfies the Socket 'frame' of type PhysicalFrame (description: The frame to which this geometry is attached.).-->
										<socket_frame>/bodyset/calcn_l</socket_frame>
										<!--Location of geometry center in the PhysicalFrame.-->
										<location>0.061089782848717626 -0.0080999999999999996 -0.02624649454595639</location>
										<!--Radius of the sphere (default: 0).-->
										<radius>0.014999999999999999</radius>
									</ContactSphere>
									<ContactSphere name="medmid_l">
										<!--Path to a Component that satisfies the Socket 'frame' of type PhysicalFrame (description: The frame to which this geometry is attached.).-->
										<socket_frame>/bodyset/calcn_l</socket_frame>
										<!--Location of geometry center in the PhysicalFrame.-->
										<location>0.077599674579238581 -0.0080999999999999996 0.01947320563087087</location>
										<!--Radius of the sphere (default: 0).-->
										<radius>0.014999999999999999</radius>
									</ContactSphere>
									<ContactSphere name="mh1_l">
										<!--Path to a Component that satisfies the Socket 'frame' of type PhysicalFrame (description: The frame to which this geometry is attached.).-->
										<socket_frame>/bodyset/calcn_l</socket_frame>
										<!--Location of geometry center in the PhysicalFrame.-->
										<location>0.15409232281819557 -0.0080999999999999996 0.01947320563087087</location>
										<!--Radius of the sphere (default: 0).-->
										<radius>0.014999999999999999</radius>
									</ContactSphere>
									<ContactSphere name="mh3_l">
										<!--Path to a Component that satisfies the Socket 'frame' of type PhysicalFrame (description: The frame to which this geometry is attached.).-->
										<socket_frame>/bodyset/calcn_l</socket_frame>
										<!--Location of geometry center in the PhysicalFrame.-->
										<location>0.1403764127651474 -0.0080999999999999996 -0.0098212689268740039</location>
										<!--Radius of the sphere (default: 0).-->
										<radius>0.014999999999999999</radius>
									</ContactSphere>
									<ContactSphere name="mh5_l">
										<!--Path to a Component that satisfies the Socket 'frame' of type PhysicalFrame (description: The frame to which this geometry is attached.).-->
										<socket_frame>/bodyset/calcn_l</socket_frame>
										<!--Location of geometry center in the PhysicalFrame.-->
										<location>0.12107253935715366 -0.0080999999999999996 -0.031326461232270529</location>
										<!--Radius of the sphere (default: 0).-->
										<radius>0.014999999999999999</radius>
									</ContactSphere>
									<ContactSphere name="hallux_l">
										<!--Path to a Component that satisfies the Socket 'frame' of type PhysicalFrame (description: The frame to which this geometry is attached.).-->
										<socket_frame>/bodyset/toes_l</socket_frame>
										<!--Location of geometry center in the PhysicalFrame.-->
										<location>0.047582354628475779 -0.0081000000000000013 0.01532456617038099</location>
										<!--Radius of the sphere (default: 0).-->
										<radius>0.014999999999999999</radius>
									</ContactSphere>
									<ContactSphere name="othertoes_l">
										<!--Path to a Component that satisfies the Socket 'frame' of type PhysicalFrame (description: The frame to which this geometry is attached.).-->
										<socket_frame>/bodyset/toes_l</socket_frame>
										<!--Location of geometry center in the PhysicalFrame.-->
										<location>0.03733775514440893 -0.0081000000000000013 -0.020489198968133698</location>
										<!--Radius of the sphere (default: 0).-->
										<radius>0.014999999999999999</radius>
									</ContactSphere>
								</objects>
								<groups />
							</ContactGeometrySet>
							<!--Probes in the model.-->
							<ProbeSet name="probeset">
								<objects>
									<Umberger2010MuscleMetabolicsProbe name="metabolic_cost_Umb">
										<!--The operation to perform on the probe input value: 'value'(no operation, just return the probe value), 'integrate', 'differentiate', 'minimum', 'minabs', 'maximum', 'maxabs'.-->
										<probe_operation>value</probe_operation>
										<!--If set to false, the individual muscle metabolics, basal rate, and total summation will be reported. If set to true, only the total summation will be reported.-->
										<report_total_metabolics_only>false</report_total_metabolics_only>
										<!--A set containing, for each muscle, the parameters required to calculate muscle metabolic power.-->
										<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameterSet>
											<objects>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="addbrev_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.5</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="addlong_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.5</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="addmagDist_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.55200000000000005</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="addmagIsch_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.55200000000000005</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="addmagMid_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.55200000000000005</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="addmagProx_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.55200000000000005</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="bflh_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.54249999999999998</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="bfsh_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.52900000000000003</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="edl_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.75</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="ehl_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.75</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="fdl_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.59999999999999998</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="fhl_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.59999999999999998</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="gaslat_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.50700000000000001</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="gasmed_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.56599999999999995</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="glmax1_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.55000000000000004</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="glmax2_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.55000000000000004</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="glmax3_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.55000000000000004</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="glmed1_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.55000000000000004</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="glmed2_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.55000000000000004</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="glmed3_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.55000000000000004</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="glmin1_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.55000000000000004</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="glmin2_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.55000000000000004</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="glmin3_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.55000000000000004</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="grac_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.5</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="iliacus_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.5</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="perbrev_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.59999999999999998</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="perlong_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.59999999999999998</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="piri_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.5</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="psoas_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.5</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="recfem_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.38650000000000001</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="sart_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.5</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="semimem_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.49249999999999999</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="semiten_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.42499999999999999</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="soleus_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.80300000000000005</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="tfl_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.5</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="tibant_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.69999999999999996</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="tibpost_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.59999999999999998</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="vasint_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.54300000000000004</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="vaslat_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.45500000000000002</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="vasmed_r">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.503</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="addbrev_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.5</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="addlong_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.5</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="addmagDist_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.55200000000000005</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="addmagIsch_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.55200000000000005</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="addmagMid_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.55200000000000005</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="addmagProx_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.55200000000000005</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="bflh_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.54249999999999998</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="bfsh_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.52900000000000003</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="edl_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.75</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="ehl_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.75</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="fdl_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.59999999999999998</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="fhl_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.59999999999999998</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="gaslat_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.50700000000000001</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="gasmed_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.56599999999999995</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="glmax1_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.55000000000000004</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="glmax2_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.55000000000000004</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="glmax3_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.55000000000000004</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="glmed1_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.55000000000000004</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="glmed2_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.55000000000000004</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="glmed3_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.55000000000000004</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="glmin1_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.55000000000000004</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="glmin2_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.55000000000000004</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="glmin3_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.55000000000000004</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="grac_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.5</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="iliacus_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.5</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="perbrev_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.59999999999999998</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="perlong_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.59999999999999998</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="piri_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.5</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="psoas_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.5</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="recfem_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.38650000000000001</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="sart_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.5</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="semimem_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.49249999999999999</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="semiten_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.42499999999999999</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="soleus_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.80300000000000005</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="tfl_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.5</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="tibant_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.69999999999999996</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="tibpost_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.59999999999999998</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="vasint_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.54300000000000004</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="vaslat_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.45500000000000002</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
												<Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter name="vasmed_l">
													<!--Ratio of slow twitch fibers in the muscle (must be between 0 and 1).-->
													<ratio_slow_twitch_fibers>0.503</ratio_slow_twitch_fibers>
													<!--An optional flag that allows the user to explicitly specify a muscle mass. If set to true, the <provided_muscle_mass> property must be specified.-->
													<use_provided_muscle_mass>false</use_provided_muscle_mass>
												</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameter>
											</objects>
											<groups />
										</Umberger2010MuscleMetabolicsProbe_MetabolicMuscleParameterSet>
									</Umberger2010MuscleMetabolicsProbe>
								</objects>
								<groups />
							</ProbeSet>
							<!--Additional components in the model.-->
							<ComponentSet name="componentset">
								<objects>
									<IMU name="torso_imu_offset_imu">
										<!--Path to a Component that satisfies the Socket 'frame' of type PhysicalFrame (description: The frame to which the IMU is attached.).-->
										<socket_frame>/bodyset/torso/torso_imu_offset</socket_frame>
									</IMU>
									<IMU name="pelvis_imu_offset_imu">
										<!--Path to a Component that satisfies the Socket 'frame' of type PhysicalFrame (description: The frame to which the IMU is attached.).-->
										<socket_frame>/bodyset/pelvis/pelvis_imu_offset</socket_frame>
									</IMU>
									<IMU name="femur_r_imu_offset_imu">
										<!--Path to a Component that satisfies the Socket 'frame' of type PhysicalFrame (description: The frame to which the IMU is attached.).-->
										<socket_frame>/bodyset/femur_r/femur_r_imu_offset</socket_frame>
									</IMU>
									<IMU name="tibia_r_imu_offset_imu">
										<!--Path to a Component that satisfies the Socket 'frame' of type PhysicalFrame (description: The frame to which the IMU is attached.).-->
										<socket_frame>/bodyset/tibia_r/tibia_r_imu_offset</socket_frame>
									</IMU>
									<IMU name="toes_r_imu_offset_imu">
										<!--Path to a Component that satisfies the Socket 'frame' of type PhysicalFrame (description: The frame to which the IMU is attached.).-->
										<socket_frame>/bodyset/toes_r/toes_r_imu_offset</socket_frame>
									</IMU>
									<IMU name="femur_l_imu_offset_imu">
										<!--Path to a Component that satisfies the Socket 'frame' of type PhysicalFrame (description: The frame to which the IMU is attached.).-->
										<socket_frame>/bodyset/femur_l/femur_l_imu_offset</socket_frame>
									</IMU>
									<IMU name="tibia_l_imu_offset_imu">
										<!--Path to a Component that satisfies the Socket 'frame' of type PhysicalFrame (description: The frame to which the IMU is attached.).-->
										<socket_frame>/bodyset/tibia_l/tibia_l_imu_offset</socket_frame>
									</IMU>
									<IMU name="toes_l_imu_offset_imu">
										<!--Path to a Component that satisfies the Socket 'frame' of type PhysicalFrame (description: The frame to which the IMU is attached.).-->
										<socket_frame>/bodyset/toes_l/toes_l_imu_offset</socket_frame>
									</IMU>
								</objects>
								<groups />
							</ComponentSet>
						</Model>
					</model>
				</ModelProcessor>
				<!--Bounds on initial value.-->
				<MocoInitialBounds name="time_initial_bounds">
					<!--1 value: required value. 2 values: lower, upper bounds on value.-->
					<bounds>334.82100000000003</bounds>
				</MocoInitialBounds>
				<!--Bounds on final value.-->
				<MocoFinalBounds name="time_final_bounds">
					<!--1 value: required value. 2 values: lower, upper bounds on value.-->
					<bounds>335.53200000000004</bounds>
				</MocoFinalBounds>
				<!--The state variables' bounds.-->
				<state_infos>
					<MocoVariableInfo name="/jointset/ground_pelvis/pelvis_tx/speed">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>2.0833333333333335 5.5555555555555554</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds></initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds></final_bounds>
					</MocoVariableInfo>
					<MocoVariableInfo name="/jointset/ground_pelvis/pelvis_tilt/value">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>-0.43633231299858238 0.43633231299858238</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds></initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds></final_bounds>
					</MocoVariableInfo>
					<MocoVariableInfo name="/jointset/ground_pelvis/pelvis_list/value">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>-0.3490658503988659 0.3490658503988659</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds></initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds></final_bounds>
					</MocoVariableInfo>
					<MocoVariableInfo name="/jointset/ground_pelvis/pelvis_rotation/value">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>-0.3490658503988659 0.3490658503988659</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds></initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds></final_bounds>
					</MocoVariableInfo>
					<MocoVariableInfo name="/jointset/ground_pelvis/pelvis_tx/value">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>0 6</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds>0</initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds></final_bounds>
					</MocoVariableInfo>
					<MocoVariableInfo name="/jointset/hip_l/hip_flexion_l/value">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>-0.78539816339744828 1.3962634015954636</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds>-0.78539816339744828 0.3490658503988659</initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds></final_bounds>
					</MocoVariableInfo>
					<MocoVariableInfo name="/jointset/hip_l/hip_adduction_l/value">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>-0.3490658503988659 0.3490658503988659</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds>-0.17453292519943295 0.17453292519943295</initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds></final_bounds>
					</MocoVariableInfo>
					<MocoVariableInfo name="/jointset/hip_l/hip_rotation_l/value">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>-0.43633231299858238 0.43633231299858238</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds></initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds></final_bounds>
					</MocoVariableInfo>
					<MocoVariableInfo name="/jointset/hip_r/hip_flexion_r/value">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>-0.78539816339744828 1.3962634015954636</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds>0 0.6108652381980153</initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds></final_bounds>
					</MocoVariableInfo>
					<MocoVariableInfo name="/jointset/hip_r/hip_adduction_r/value">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>-0.3490658503988659 0.3490658503988659</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds>0 0.3490658503988659</initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds></final_bounds>
					</MocoVariableInfo>
					<MocoVariableInfo name="/jointset/hip_r/hip_rotation_r/value">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>-0.43633231299858238 0.43633231299858238</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds>-0.17453292519943295 0.17453292519943295</initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds></final_bounds>
					</MocoVariableInfo>
					<MocoVariableInfo name="/jointset/knee_l/knee_angle_l/value">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>-0.087266462599716474 2.7925268031909272</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds>0.69813170079773179 2.7052603405912108</initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds></final_bounds>
					</MocoVariableInfo>
					<MocoVariableInfo name="/jointset/knee_r/knee_angle_r/value">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>-0.087266462599716474 2.7052603405912108</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds>-0.087266462599716474 0.69813170079773179</initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds></final_bounds>
					</MocoVariableInfo>
					<MocoVariableInfo name="/jointset/ankle_l/ankle_angle_l/value">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>-0.69813170079773179 0.52359877559829882</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds>-0.52359877559829882 0</initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds></final_bounds>
					</MocoVariableInfo>
					<MocoVariableInfo name="/jointset/ankle_r/ankle_angle_r/value">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>-0.69813170079773179 0.52359877559829882</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds>-0.3490658503988659 0.3490658503988659</initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds></final_bounds>
					</MocoVariableInfo>
					<MocoVariableInfo name="/jointset/subtalar_l/subtalar_angle_l/value">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>-0.20943951023931953 0.20943951023931953</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds>-0.17453292519943295 0.17453292519943295</initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds></final_bounds>
					</MocoVariableInfo>
					<MocoVariableInfo name="/jointset/subtalar_r/subtalar_angle_r/value">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>-0.20943951023931953 0.20943951023931953</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds>-0.17453292519943295 0.17453292519943295</initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds></final_bounds>
					</MocoVariableInfo>
					<MocoVariableInfo name="/jointset/mtp_l/mtp_angle_l/value">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>-0.52359877559829882 0.52359877559829882</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds>-0.17708744850263 0.17197840189623589</initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds></final_bounds>
					</MocoVariableInfo>
					<MocoVariableInfo name="/jointset/mtp_r/mtp_angle_r/value">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>-0.52359877559829882 0.52359877559829882</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds>-0.1509988982395819 0.11080048955956753</initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds></final_bounds>
					</MocoVariableInfo>
					<MocoVariableInfo name="/jointset/lumbar/lumbar_ext/value">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>-0.69813170079773179 0.52359877559829882</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds>-0.69813170079773179 0</initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds></final_bounds>
					</MocoVariableInfo>
					<MocoVariableInfo name="/jointset/lumbar/lumbar_bend/value">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>-0.43633231299858238 0.52359877559829882</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds>-0.10684179035202518 0.067691134847407769</initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds></final_bounds>
					</MocoVariableInfo>
					<MocoVariableInfo name="/jointset/lumbar/lumbar_rota/value">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>-0.52359877559829882 0.52359877559829882</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds>-0.19374245214083158 -0.01920952694139863</initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds></final_bounds>
					</MocoVariableInfo>
					<MocoVariableInfo name="/jointset/ankle_l/ankle_angle_l/speed">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>-87.266462599716476 87.266462599716476</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds></initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds></final_bounds>
					</MocoVariableInfo>
					<MocoVariableInfo name="/jointset/ankle_r/ankle_angle_r/speed">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>-87.266462599716476 87.266462599716476</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds></initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds></final_bounds>
					</MocoVariableInfo>
					<MocoVariableInfo name="/jointset/ground_pelvis/pelvis_list/speed">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>-87.266462599716476 87.266462599716476</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds></initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds></final_bounds>
					</MocoVariableInfo>
					<MocoVariableInfo name="/jointset/ground_pelvis/pelvis_rotation/speed">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>-87.266462599716476 87.266462599716476</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds></initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds></final_bounds>
					</MocoVariableInfo>
					<MocoVariableInfo name="/jointset/ground_pelvis/pelvis_tilt/speed">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>-34.906585039886593 34.906585039886593</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds></initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds></final_bounds>
					</MocoVariableInfo>
					<MocoVariableInfo name="/jointset/hip_l/hip_adduction_l/speed">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>-87.266462599716476 87.266462599716476</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds></initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds></final_bounds>
					</MocoVariableInfo>
					<MocoVariableInfo name="/jointset/hip_l/hip_rotation_l/speed">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>-87.266462599716476 87.266462599716476</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds></initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds></final_bounds>
					</MocoVariableInfo>
					<MocoVariableInfo name="/jointset/hip_r/hip_adduction_r/speed">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>-87.266462599716476 87.266462599716476</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds></initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds></final_bounds>
					</MocoVariableInfo>
					<MocoVariableInfo name="/jointset/hip_r/hip_rotation_r/speed">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>-87.266462599716476 87.266462599716476</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds></initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds></final_bounds>
					</MocoVariableInfo>
					<MocoVariableInfo name="/jointset/lumbar/lumbar_bend/speed">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>-87.266462599716476 87.266462599716476</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds></initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds></final_bounds>
					</MocoVariableInfo>
					<MocoVariableInfo name="/jointset/lumbar/lumbar_rota/speed">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>-87.266462599716476 87.266462599716476</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds></initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds></final_bounds>
					</MocoVariableInfo>
					<MocoVariableInfo name="/jointset/lumbar/lumbar_ext/speed">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>-87.266462599716476 87.266462599716476</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds></initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds></final_bounds>
					</MocoVariableInfo>
				</state_infos>
				<!--Set state variable bounds for all states matching a regular expression.-->
				<state_infos_pattern>
					<MocoVariableInfo name="/forceset/.*/normalized_tendon_force">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>0 1.8</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds></initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds></final_bounds>
					</MocoVariableInfo>
					<MocoVariableInfo name="/forceset/.*/activation">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>0.001 1</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds></initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds></final_bounds>
					</MocoVariableInfo>
				</state_infos_pattern>
				<!--Integral/endpoint quantities to minimize or constrain.-->
				<goals>
					<MocoStateTrackingGoal name="state_tracking">
						<!--In cost mode, the goal is multiplied by this weight (default: 1).-->
						<weight>0.20000000000000001</weight>
						<!--Trajectories of states (coordinates, speeds, activation, etc.) to track. Column labels should be state variable paths, e.g., 'knee/flexion/value'-->
						<TableProcessor name="reference">
							<!--All properties of this object have their default values.-->
						</TableProcessor>
						<!--Set of weight objects to weight the tracking of individual state variables in the cost.-->
						<MocoWeightSet name="state_weights">
							<objects>
								<MocoWeight name="/jointset/ground_pelvis/pelvis_tilt/value">
									<!--Weight (default: 1)-->
									<weight>1</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/ground_pelvis/pelvis_tilt/speed">
									<!--Weight (default: 1)-->
									<weight>0.0001</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/ground_pelvis/pelvis_list/value">
									<!--Weight (default: 1)-->
									<weight>1</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/ground_pelvis/pelvis_list/speed">
									<!--Weight (default: 1)-->
									<weight>0.0001</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/ground_pelvis/pelvis_rotation/value">
									<!--Weight (default: 1)-->
									<weight>1</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/ground_pelvis/pelvis_rotation/speed">
									<!--Weight (default: 1)-->
									<weight>0.0001</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/ground_pelvis/pelvis_tx/value">
									<!--Weight (default: 1)-->
									<weight>0</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/ground_pelvis/pelvis_tx/speed">
									<!--Weight (default: 1)-->
									<weight>0</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/ground_pelvis/pelvis_ty/value">
									<!--Weight (default: 1)-->
									<weight>0</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/ground_pelvis/pelvis_ty/speed">
									<!--Weight (default: 1)-->
									<weight>0.0001</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/ground_pelvis/pelvis_tz/value">
									<!--Weight (default: 1)-->
									<weight>0</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/ground_pelvis/pelvis_tz/speed">
									<!--Weight (default: 1)-->
									<weight>0</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/hip_r/hip_flexion_r/value">
									<!--Weight (default: 1)-->
									<weight>0.01</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/hip_r/hip_flexion_r/speed">
									<!--Weight (default: 1)-->
									<weight>1.0000000000000002e-06</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/hip_r/hip_adduction_r/value">
									<!--Weight (default: 1)-->
									<weight>1</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/hip_r/hip_adduction_r/speed">
									<!--Weight (default: 1)-->
									<weight>0.0001</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/hip_r/hip_rotation_r/value">
									<!--Weight (default: 1)-->
									<weight>1</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/hip_r/hip_rotation_r/speed">
									<!--Weight (default: 1)-->
									<weight>0.0001</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/knee_r/knee_angle_r/value">
									<!--Weight (default: 1)-->
									<weight>1</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/knee_r/knee_angle_r/speed">
									<!--Weight (default: 1)-->
									<weight>0.0001</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/patellofemoral_r/knee_angle_r_beta/value">
									<!--Weight (default: 1)-->
									<weight>0</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/ankle_r/ankle_angle_r/value">
									<!--Weight (default: 1)-->
									<weight>5</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/ankle_r/ankle_angle_r/speed">
									<!--Weight (default: 1)-->
									<weight>0.00050000000000000001</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/subtalar_r/subtalar_angle_r/value">
									<!--Weight (default: 1)-->
									<weight>1</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/subtalar_r/subtalar_angle_r/speed">
									<!--Weight (default: 1)-->
									<weight>0.0001</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/mtp_r/mtp_angle_r/value">
									<!--Weight (default: 1)-->
									<weight>1</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/mtp_r/mtp_angle_r/speed">
									<!--Weight (default: 1)-->
									<weight>0.0001</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/hip_l/hip_flexion_l/value">
									<!--Weight (default: 1)-->
									<weight>0.01</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/hip_l/hip_flexion_l/speed">
									<!--Weight (default: 1)-->
									<weight>1.0000000000000002e-06</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/hip_l/hip_adduction_l/value">
									<!--Weight (default: 1)-->
									<weight>1</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/hip_l/hip_adduction_l/speed">
									<!--Weight (default: 1)-->
									<weight>0.0001</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/hip_l/hip_rotation_l/value">
									<!--Weight (default: 1)-->
									<weight>1</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/hip_l/hip_rotation_l/speed">
									<!--Weight (default: 1)-->
									<weight>0.0001</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/knee_l/knee_angle_l/value">
									<!--Weight (default: 1)-->
									<weight>1</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/knee_l/knee_angle_l/speed">
									<!--Weight (default: 1)-->
									<weight>0.0001</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/patellofemoral_l/knee_angle_l_beta/value">
									<!--Weight (default: 1)-->
									<weight>0</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/ankle_l/ankle_angle_l/value">
									<!--Weight (default: 1)-->
									<weight>5</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/ankle_l/ankle_angle_l/speed">
									<!--Weight (default: 1)-->
									<weight>0.00050000000000000001</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/subtalar_l/subtalar_angle_l/value">
									<!--Weight (default: 1)-->
									<weight>1</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/subtalar_l/subtalar_angle_l/speed">
									<!--Weight (default: 1)-->
									<weight>0.0001</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/mtp_l/mtp_angle_l/value">
									<!--Weight (default: 1)-->
									<weight>1</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/mtp_l/mtp_angle_l/speed">
									<!--Weight (default: 1)-->
									<weight>0.0001</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/lumbar/lumbar_ext/value">
									<!--Weight (default: 1)-->
									<weight>1</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/lumbar/lumbar_ext/speed">
									<!--Weight (default: 1)-->
									<weight>0.0001</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/lumbar/lumbar_bend/value">
									<!--Weight (default: 1)-->
									<weight>1</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/lumbar/lumbar_bend/speed">
									<!--Weight (default: 1)-->
									<weight>0.0001</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/lumbar/lumbar_rota/value">
									<!--Weight (default: 1)-->
									<weight>1</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/lumbar/lumbar_rota/speed">
									<!--Weight (default: 1)-->
									<weight>0.0001</weight>
								</MocoWeight>
							</objects>
							<groups />
						</MocoWeightSet>
						<!--Flag to determine whether or not references contained in the reference_file are allowed to be ignored by the cost.-->
						<allow_unused_references>true</allow_unused_references>
						<!--Use the range, or the distance between the maximum and minimum value, of each reference quantity to scale the weight for the associated tracking error in the cost. The scale is computed by the inverse of the range, so a reference quantity that changes less across the trajectory has a larger weight. -->
						<scale_weights_with_range>false</scale_weights_with_range>
					</MocoStateTrackingGoal>
					<MocoControlGoal name="control_effort">
						<!--In cost mode, the goal is multiplied by this weight (default: 1).-->
						<weight>1.1627906976744187</weight>
						<!--Divide by the model's displacement over the phase (default: false)-->
						<divide_by_displacement>true</divide_by_displacement>
						<!--The exponent on controls; greater than or equal to 2 (default: 2).-->
						<exponent>3</exponent>
					</MocoControlGoal>
					<MocoStateTrackingGoal name="track2">
						<!--In cost mode, the goal is multiplied by this weight (default: 1).-->
						<weight>0.20000000000000001</weight>
						<!--Trajectories of states (coordinates, speeds, activation, etc.) to track. Column labels should be state variable paths, e.g., 'knee/flexion/value'-->
						<TableProcessor name="reference">
							<!--All properties of this object have their default values.-->
						</TableProcessor>
						<!--Set of weight objects to weight the tracking of individual state variables in the cost.-->
						<MocoWeightSet name="state_weights">
							<objects>
								<MocoWeight name="/jointset/patellofemoral_r/knee_angle_r_beta/value">
									<!--Weight (default: 1)-->
									<weight>0</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/patellofemoral_r/knee_angle_r_beta/speed">
									<!--Weight (default: 1)-->
									<weight>0</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/patellofemoral_l/knee_angle_l_beta/value">
									<!--Weight (default: 1)-->
									<weight>0</weight>
								</MocoWeight>
								<MocoWeight name="/jointset/patellofemoral_l/knee_angle_l_beta/speed">
									<!--Weight (default: 1)-->
									<weight>0</weight>
								</MocoWeight>
							</objects>
							<groups />
						</MocoWeightSet>
					</MocoStateTrackingGoal>
					<MocoPeriodicityGoal name="periodicityGoal">
						<!--In cost mode, the goal is multiplied by this weight (default: 1).-->
						<weight>1</weight>
						<!--'cost' to enforce as a penalty, 'endpoint_constraint' to enforce as a constraint.-->
						<mode>endpoint_constraint</mode>
						<!--Periodic pairs of states.-->
						<state_pairs>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/ground_pelvis/pelvis_tilt/value</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/ground_pelvis/pelvis_tilt/value</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/ground_pelvis/pelvis_tilt/speed</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/ground_pelvis/pelvis_tilt/speed</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/ground_pelvis/pelvis_list/value</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/ground_pelvis/pelvis_list/value</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/ground_pelvis/pelvis_list/speed</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/ground_pelvis/pelvis_list/speed</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/ground_pelvis/pelvis_rotation/value</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/ground_pelvis/pelvis_rotation/value</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/ground_pelvis/pelvis_rotation/speed</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/ground_pelvis/pelvis_rotation/speed</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/ground_pelvis/pelvis_ty/value</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/ground_pelvis/pelvis_ty/value</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/ground_pelvis/pelvis_ty/speed</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/ground_pelvis/pelvis_ty/speed</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/ground_pelvis/pelvis_tz/value</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/ground_pelvis/pelvis_tz/value</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/ground_pelvis/pelvis_tz/speed</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/ground_pelvis/pelvis_tz/speed</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/hip_r/hip_flexion_r/value</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/hip_r/hip_flexion_r/value</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/hip_r/hip_flexion_r/speed</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/hip_r/hip_flexion_r/speed</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/hip_r/hip_adduction_r/value</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/hip_r/hip_adduction_r/value</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/hip_r/hip_adduction_r/speed</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/hip_r/hip_adduction_r/speed</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/hip_r/hip_rotation_r/value</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/hip_r/hip_rotation_r/value</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/hip_r/hip_rotation_r/speed</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/hip_r/hip_rotation_r/speed</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/knee_r/knee_angle_r/value</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/knee_r/knee_angle_r/value</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/knee_r/knee_angle_r/speed</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/knee_r/knee_angle_r/speed</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/ankle_r/ankle_angle_r/value</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/ankle_r/ankle_angle_r/value</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/ankle_r/ankle_angle_r/speed</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/ankle_r/ankle_angle_r/speed</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/subtalar_r/subtalar_angle_r/value</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/subtalar_r/subtalar_angle_r/value</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/subtalar_r/subtalar_angle_r/speed</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/subtalar_r/subtalar_angle_r/speed</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/mtp_r/mtp_angle_r/value</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/mtp_r/mtp_angle_r/value</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/mtp_r/mtp_angle_r/speed</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/mtp_r/mtp_angle_r/speed</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/hip_l/hip_flexion_l/value</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/hip_l/hip_flexion_l/value</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/hip_l/hip_flexion_l/speed</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/hip_l/hip_flexion_l/speed</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/hip_l/hip_adduction_l/value</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/hip_l/hip_adduction_l/value</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/hip_l/hip_adduction_l/speed</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/hip_l/hip_adduction_l/speed</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/hip_l/hip_rotation_l/value</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/hip_l/hip_rotation_l/value</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/hip_l/hip_rotation_l/speed</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/hip_l/hip_rotation_l/speed</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/knee_l/knee_angle_l/value</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/knee_l/knee_angle_l/value</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/knee_l/knee_angle_l/speed</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/knee_l/knee_angle_l/speed</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/ankle_l/ankle_angle_l/value</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/ankle_l/ankle_angle_l/value</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/ankle_l/ankle_angle_l/speed</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/ankle_l/ankle_angle_l/speed</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/subtalar_l/subtalar_angle_l/value</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/subtalar_l/subtalar_angle_l/value</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/subtalar_l/subtalar_angle_l/speed</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/subtalar_l/subtalar_angle_l/speed</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/mtp_l/mtp_angle_l/value</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/mtp_l/mtp_angle_l/value</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/mtp_l/mtp_angle_l/speed</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/mtp_l/mtp_angle_l/speed</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/lumbar/lumbar_ext/value</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/lumbar/lumbar_ext/value</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/lumbar/lumbar_ext/speed</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/lumbar/lumbar_ext/speed</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/lumbar/lumbar_bend/value</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/lumbar/lumbar_bend/value</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/lumbar/lumbar_bend/speed</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/lumbar/lumbar_bend/speed</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/lumbar/lumbar_rota/value</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/lumbar/lumbar_rota/value</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/jointset/lumbar/lumbar_rota/speed</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/jointset/lumbar/lumbar_rota/speed</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/addbrev_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/addbrev_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/addlong_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/addlong_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/addmagDist_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/addmagDist_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/addmagIsch_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/addmagIsch_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/addmagMid_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/addmagMid_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/addmagProx_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/addmagProx_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/bflh_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/bflh_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/bfsh_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/bfsh_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/edl_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/edl_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/ehl_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/ehl_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/fdl_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/fdl_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/fhl_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/fhl_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/gaslat_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/gaslat_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/gasmed_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/gasmed_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/glmax1_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/glmax1_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/glmax2_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/glmax2_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/glmax3_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/glmax3_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/glmed1_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/glmed1_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/glmed2_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/glmed2_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/glmed3_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/glmed3_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/glmin1_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/glmin1_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/glmin2_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/glmin2_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/glmin3_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/glmin3_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/grac_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/grac_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/iliacus_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/iliacus_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/perbrev_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/perbrev_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/perlong_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/perlong_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/piri_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/piri_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/psoas_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/psoas_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/recfem_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/recfem_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/sart_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/sart_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/semimem_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/semimem_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/semiten_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/semiten_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/soleus_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/soleus_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/tfl_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/tfl_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/tibant_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/tibant_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/tibpost_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/tibpost_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/vasint_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/vasint_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/vaslat_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/vaslat_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/vasmed_r/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/vasmed_r/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/addbrev_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/addbrev_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/addlong_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/addlong_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/addmagDist_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/addmagDist_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/addmagIsch_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/addmagIsch_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/addmagMid_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/addmagMid_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/addmagProx_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/addmagProx_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/bflh_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/bflh_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/bfsh_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/bfsh_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/edl_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/edl_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/ehl_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/ehl_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/fdl_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/fdl_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/fhl_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/fhl_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/gaslat_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/gaslat_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/gasmed_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/gasmed_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/glmax1_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/glmax1_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/glmax2_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/glmax2_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/glmax3_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/glmax3_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/glmed1_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/glmed1_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/glmed2_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/glmed2_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/glmed3_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/glmed3_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/glmin1_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/glmin1_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/glmin2_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/glmin2_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/glmin3_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/glmin3_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/grac_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/grac_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/iliacus_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/iliacus_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/perbrev_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/perbrev_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/perlong_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/perlong_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/piri_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/piri_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/psoas_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/psoas_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/recfem_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/recfem_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/sart_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/sart_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/semimem_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/semimem_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/semiten_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/semiten_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/soleus_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/soleus_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/tfl_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/tfl_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/tibant_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/tibant_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/tibpost_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/tibpost_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/vasint_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/vasint_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/vaslat_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/vaslat_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/vasmed_l/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/vasmed_l/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/tau_lumbar_bend/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/tau_lumbar_bend/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/tau_lumbar_ext/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/tau_lumbar_ext/activation</final_variable>
							</MocoPeriodicityGoalPair>
							<MocoPeriodicityGoalPair>
								<!--Initial variable of the pair.-->
								<initial_variable>/forceset/tau_lumbar_rota/activation</initial_variable>
								<!--Final variable of the pair.-->
								<final_variable>/forceset/tau_lumbar_rota/activation</final_variable>
							</MocoPeriodicityGoalPair>
						</state_pairs>
					</MocoPeriodicityGoal>
					<MocoInitialForceEquilibriumDGFGoal name="tendonEQ">
						<!--All properties of this object have their default values.-->
					</MocoInitialForceEquilibriumDGFGoal>
					<MocoInitialVelocityEquilibriumDGFGoal name="tendonV">
						<!--All properties of this object have their default values.-->
					</MocoInitialVelocityEquilibriumDGFGoal>
					<MocoOutputGoal name="met">
						<!--In cost mode, the goal is multiplied by this weight (default: 1).-->
						<weight>0.0050000000000000001</weight>
						<!--Divide by the model's displacement over the phase (default: false)-->
						<divide_by_displacement>true</divide_by_displacement>
						<!--Divide by the model's mass (default: false)-->
						<divide_by_mass>true</divide_by_mass>
						<!--The absolute path to the output in the model to use as the integrand for this goal.-->
						<output_path>/metabolic_cost_Bhargava2004|total_metabolic_rate</output_path>
					</MocoOutputGoal>
					<MocoAccelerationTrackingGoal name="acceleration_tracking">
						<!--In cost mode, the goal is multiplied by this weight (default: 1).-->
						<weight>0.00025000000000000001</weight>
						<!--Path to file (.sto, .csv, ...) containing acceleration reference data to track. Column labels should be paths to frames in the model, e.g. '/bodyset/torso'.-->
						<acceleration_reference_file></acceleration_reference_file>
						<!--The frames in the model (i.e., tracking frames) that this cost term will track. The names set here must correspond to Components that derive from class Frame.-->
						<frame_paths>/bodyset/torso/torso_imu_offset /bodyset/pelvis/pelvis_imu_offset /bodyset/femur_r/femur_r_imu_offset /bodyset/tibia_r/tibia_r_imu_offset /bodyset/toes_r/toes_r_imu_offset /bodyset/femur_l/femur_l_imu_offset /bodyset/tibia_l/tibia_l_imu_offset /bodyset/toes_l/toes_l_imu_offset</frame_paths>
						<!--Set of weight objects to weight the tracking of individual frames' accelerations in the cost.-->
						<MocoWeightSet name="acceleration_weights">
							<objects>
								<MocoWeight name="/bodyset/torso/torso_imu_offset">
									<!--Weight (default: 1)-->
									<weight>8.4386653543669663</weight>
								</MocoWeight>
								<MocoWeight name="/bodyset/pelvis/pelvis_imu_offset">
									<!--Weight (default: 1)-->
									<weight>8.4394477174842155</weight>
								</MocoWeight>
								<MocoWeight name="/bodyset/femur_r/femur_r_imu_offset">
									<!--Weight (default: 1)-->
									<weight>8.8941061506638714</weight>
								</MocoWeight>
								<MocoWeight name="/bodyset/tibia_r/tibia_r_imu_offset">
									<!--Weight (default: 1)-->
									<weight>21.553927661465284</weight>
								</MocoWeight>
								<MocoWeight name="/bodyset/toes_r/toes_r_imu_offset">
									<!--Weight (default: 1)-->
									<weight>0.56728312324738039</weight>
								</MocoWeight>
								<MocoWeight name="/bodyset/femur_l/femur_l_imu_offset">
									<!--Weight (default: 1)-->
									<weight>8.8941061506638714</weight>
								</MocoWeight>
								<MocoWeight name="/bodyset/tibia_l/tibia_l_imu_offset">
									<!--Weight (default: 1)-->
									<weight>21.553927661465284</weight>
								</MocoWeight>
								<MocoWeight name="/bodyset/toes_l/toes_l_imu_offset">
									<!--Weight (default: 1)-->
									<weight>0.56728312324738039</weight>
								</MocoWeight>
							</objects>
							<groups />
						</MocoWeightSet>
						<!--Subtract the model's gravity vector from the model tracking frame accelerations. This offset is performed while the model accelerations are expressed in the ground frame, before the accelerations are expressed in the tracking frames when the 'express_accelerations_in_tracking_frames' property is set to true.-->
						<gravity_offset>true</gravity_offset>
						<!--Express the model-generated accelerations in the individual model tracking frames specified by the 'frame_paths' property. Accelerations are expressed after the gravity offset is applied when 'gravity_offset' is set to true.-->
						<express_accelerations_in_tracking_frames>true</express_accelerations_in_tracking_frames>
					</MocoAccelerationTrackingGoal>
					<MocoAngularVelocityTrackingGoal name="AngularVelocity_tracking">
						<!--In cost mode, the goal is multiplied by this weight (default: 1).-->
						<weight>0.0025000000000000001</weight>
						<!--Trajectories of model state variables from which tracked angular velocity data is computed. Column labels should be model state paths, e.g., '/jointset/ankle_angle_r/value'-->
						<TableProcessor name="states_reference">
							<!--All properties of this object have their default values.-->
						</TableProcessor>
						<!--Path to file (.sto, .csv, ...) containing angular velocity reference data to track. Column labels should be paths to frames in the model, e.g. '/bodyset/torso'.-->
						<angular_velocity_reference_file></angular_velocity_reference_file>
						<!--The frames in the model that this cost term will track. The names set here must correspond to Components that derive from class Frame.-->
						<frame_paths>/bodyset/torso/torso_imu_offset /bodyset/pelvis/pelvis_imu_offset /bodyset/femur_r/femur_r_imu_offset /bodyset/tibia_r/tibia_r_imu_offset /bodyset/toes_r/toes_r_imu_offset /bodyset/femur_l/femur_l_imu_offset /bodyset/tibia_l/tibia_l_imu_offset /bodyset/toes_l/toes_l_imu_offset</frame_paths>
						<!--Set of weight objects to weight the tracking of individual frames' angular velocities in the cost.-->
						<MocoWeightSet name="angular_velocity_weights">
							<objects>
								<MocoWeight name="/bodyset/torso/torso_imu_offset">
									<!--Weight (default: 1)-->
									<weight>7.3429033164419764</weight>
								</MocoWeight>
								<MocoWeight name="/bodyset/pelvis/pelvis_imu_offset">
									<!--Weight (default: 1)-->
									<weight>15.210064233638395</weight>
								</MocoWeight>
								<MocoWeight name="/bodyset/femur_r/femur_r_imu_offset">
									<!--Weight (default: 1)-->
									<weight>11.787080782498602</weight>
								</MocoWeight>
								<MocoWeight name="/bodyset/tibia_r/tibia_r_imu_offset">
									<!--Weight (default: 1)-->
									<weight>11.608650991395713</weight>
								</MocoWeight>
								<MocoWeight name="/bodyset/toes_r/toes_r_imu_offset">
									<!--Weight (default: 1)-->
									<weight>0.51976921205513227</weight>
								</MocoWeight>
								<MocoWeight name="/bodyset/femur_l/femur_l_imu_offset">
									<!--Weight (default: 1)-->
									<weight>11.787080782498602</weight>
								</MocoWeight>
								<MocoWeight name="/bodyset/tibia_l/tibia_l_imu_offset">
									<!--Weight (default: 1)-->
									<weight>11.608650991395713</weight>
								</MocoWeight>
								<MocoWeight name="/bodyset/toes_l/toes_l_imu_offset">
									<!--Weight (default: 1)-->
									<weight>0.51976921205513227</weight>
								</MocoWeight>
							</objects>
							<groups />
						</MocoWeightSet>
					</MocoAngularVelocityTrackingGoal>
					<MocoOrientationTrackingGoal name="IMU_Orientation_tracking">
						<!--In cost mode, the goal is multiplied by this weight (default: 1).-->
						<weight>0.125</weight>
						<!--Trajectories of model state variables from which tracked rotation data is computed. Column labels should be model state paths, e.g., '/jointset/ankle_angle_r/value'-->
						<TableProcessor name="states_reference">
							<!--All properties of this object have their default values.-->
						</TableProcessor>
						<!--Path to file (.sto, .csv, ...) containing orientation reference data to track. Column labels should be paths to frames in the model, e.g. '/bodyset/torso'.-->
						<rotation_reference_file></rotation_reference_file>
						<!--The frames in the model that this cost term will track. The names set here must correspond to Components that derive from class Frame.-->
						<frame_paths>/bodyset/torso/torso_imu_offset /bodyset/pelvis/pelvis_imu_offset /bodyset/femur_r/femur_r_imu_offset /bodyset/tibia_r/tibia_r_imu_offset /bodyset/toes_r/toes_r_imu_offset /bodyset/femur_l/femur_l_imu_offset /bodyset/tibia_l/tibia_l_imu_offset /bodyset/toes_l/toes_l_imu_offset</frame_paths>
						<!--Set of weight objects to weight the tracking of individual frames' rotations in the cost.-->
						<MocoWeightSet name="rotation_weights">
							<objects>
								<MocoWeight name="/bodyset/pelvis/pelvis_imu_offset">
									<!--Weight (default: 1)-->
									<weight>5.1765066391042653</weight>
								</MocoWeight>
								<MocoWeight name="/bodyset/femur_r/femur_r_imu_offset">
									<!--Weight (default: 1)-->
									<weight>14.886530810099224</weight>
								</MocoWeight>
								<MocoWeight name="/bodyset/tibia_r/tibia_r_imu_offset">
									<!--Weight (default: 1)-->
									<weight>15.101484220063051</weight>
								</MocoWeight>
								<MocoWeight name="/bodyset/toes_r/toes_r_imu_offset">
									<!--Weight (default: 1)-->
									<weight>0.37220570866252195</weight>
								</MocoWeight>
								<MocoWeight name="/bodyset/femur_l/femur_l_imu_offset">
									<!--Weight (default: 1)-->
									<weight>14.886530810099224</weight>
								</MocoWeight>
								<MocoWeight name="/bodyset/tibia_l/tibia_l_imu_offset">
									<!--Weight (default: 1)-->
									<weight>15.101484220063051</weight>
								</MocoWeight>
								<MocoWeight name="/bodyset/toes_l/toes_l_imu_offset">
									<!--Weight (default: 1)-->
									<weight>0.37220570866252195</weight>
								</MocoWeight>
							</objects>
							<groups />
						</MocoWeightSet>
					</MocoOrientationTrackingGoal>
					<MocoOrientationTrackingGoal name="torsoGoal">
						<!--In cost mode, the goal is multiplied by this weight (default: 1).-->
						<weight>0.5</weight>
						<!--Trajectories of model state variables from which tracked rotation data is computed. Column labels should be model state paths, e.g., '/jointset/ankle_angle_r/value'-->
						<TableProcessor name="states_reference">
							<!--File path to a TimeSeriesTable.-->
							<filepath>refQ_0State_S1.sto</filepath>
						</TableProcessor>
						<!--Path to file (.sto, .csv, ...) containing orientation reference data to track. Column labels should be paths to frames in the model, e.g. '/bodyset/torso'.-->
						<rotation_reference_file></rotation_reference_file>
						<!--The frames in the model that this cost term will track. The names set here must correspond to Components that derive from class Frame.-->
						<frame_paths>/bodyset/torso</frame_paths>
					</MocoOrientationTrackingGoal>
					<MocoContactTrackingGoal name="contactGoalVert">
						<!--In cost mode, the goal is multiplied by this weight (default: 1).-->
						<weight>1000</weight>
						<!--Associate contact elements in the model with force data.-->
						<contact_groups>
							<MocoContactTrackingGoalGroup>
								<!--Paths to SmoothSphereHalfSpaceForce objects in the model whose forces are summed and compared to the data from a single ExternalForce.-->
								<contact_force_paths>forceset/SmoothSphereHalfSpaceForce_mh1_r forceset/SmoothSphereHalfSpaceForce_mh3_r forceset/SmoothSphereHalfSpaceForce_mh5_r forceset/SmoothSphereHalfSpaceForce_heel_r forceset/SmoothSphereHalfSpaceForce_hallux_r forceset/SmoothSphereHalfSpaceForce_othertoes_r forceset/SmoothSphereHalfSpaceForce_latheel_r forceset/SmoothSphereHalfSpaceForce_medheel_r forceset/SmoothSphereHalfSpaceForce_mid_r forceset/SmoothSphereHalfSpaceForce_latmid_r forceset/SmoothSphereHalfSpaceForce_medmid_r</contact_force_paths>
								<!--The name of an ExternalForce object in the ExternalLoads set.-->
								<external_force_name>RightGRF</external_force_name>
								<!--If neither of the two bodies/frames of a contact force match ExternalForce's applied_to_body, then one of the bodies/frames must match one of these alternative frame paths.-->
								<alternative_frame_paths>/bodyset/toes_r</alternative_frame_paths>
							</MocoContactTrackingGoalGroup>
							<MocoContactTrackingGoalGroup>
								<!--Paths to SmoothSphereHalfSpaceForce objects in the model whose forces are summed and compared to the data from a single ExternalForce.-->
								<contact_force_paths>forceset/SmoothSphereHalfSpaceForce_mh1_l forceset/SmoothSphereHalfSpaceForce_mh3_l forceset/SmoothSphereHalfSpaceForce_mh5_l forceset/SmoothSphereHalfSpaceForce_heel_l forceset/SmoothSphereHalfSpaceForce_hallux_l forceset/SmoothSphereHalfSpaceForce_othertoes_l forceset/SmoothSphereHalfSpaceForce_latheel_l forceset/SmoothSphereHalfSpaceForce_medheel_l forceset/SmoothSphereHalfSpaceForce_mid_l forceset/SmoothSphereHalfSpaceForce_latmid_l forceset/SmoothSphereHalfSpaceForce_medmid_l</contact_force_paths>
								<!--The name of an ExternalForce object in the ExternalLoads set.-->
								<external_force_name>LeftGRF</external_force_name>
								<!--If neither of the two bodies/frames of a contact force match ExternalForce's applied_to_body, then one of the bodies/frames must match one of these alternative frame paths.-->
								<alternative_frame_paths>/bodyset/toes_l</alternative_frame_paths>
							</MocoContactTrackingGoalGroup>
						</contact_groups>
						<!--Experimental contact force data as an ExternalLoads XML file.-->
						<external_loads_file>refGRF_edit_S1.xml</external_loads_file>
						<!--'none' (default): use full 3-D force error; 'vector': project force error onto projection_vector; 'plane': project force error onto the plane perpendicular to projection_vector.-->
						<projection>vector</projection>
						<!--(optional) If provided, the force error is projected onto the plane perpendicular to this vector. The vector is expressed in ground. The vector can have any length.-->
						<projection_vector>0 1 0</projection_vector>
						<!--Normalize each component of the 3-D tracking error by the peak magnitude of each contact force component in the tracking data. If the peak magnitude of the ground contact force data is close to zero, an exception is thrown (default: false).-->
						<normalize_tracking_error>true</normalize_tracking_error>
					</MocoContactTrackingGoal>
					<MocoContactTrackingGoal name="contactGoalHor">
						<!--In cost mode, the goal is multiplied by this weight (default: 1).-->
						<weight>1000</weight>
						<!--Associate contact elements in the model with force data.-->
						<contact_groups>
							<MocoContactTrackingGoalGroup>
								<!--Paths to SmoothSphereHalfSpaceForce objects in the model whose forces are summed and compared to the data from a single ExternalForce.-->
								<contact_force_paths>forceset/SmoothSphereHalfSpaceForce_mh1_r forceset/SmoothSphereHalfSpaceForce_mh3_r forceset/SmoothSphereHalfSpaceForce_mh5_r forceset/SmoothSphereHalfSpaceForce_heel_r forceset/SmoothSphereHalfSpaceForce_hallux_r forceset/SmoothSphereHalfSpaceForce_othertoes_r forceset/SmoothSphereHalfSpaceForce_latheel_r forceset/SmoothSphereHalfSpaceForce_medheel_r forceset/SmoothSphereHalfSpaceForce_mid_r forceset/SmoothSphereHalfSpaceForce_latmid_r forceset/SmoothSphereHalfSpaceForce_medmid_r</contact_force_paths>
								<!--The name of an ExternalForce object in the ExternalLoads set.-->
								<external_force_name>RightGRF</external_force_name>
								<!--If neither of the two bodies/frames of a contact force match ExternalForce's applied_to_body, then one of the bodies/frames must match one of these alternative frame paths.-->
								<alternative_frame_paths>/bodyset/toes_r</alternative_frame_paths>
							</MocoContactTrackingGoalGroup>
							<MocoContactTrackingGoalGroup>
								<!--Paths to SmoothSphereHalfSpaceForce objects in the model whose forces are summed and compared to the data from a single ExternalForce.-->
								<contact_force_paths>forceset/SmoothSphereHalfSpaceForce_mh1_l forceset/SmoothSphereHalfSpaceForce_mh3_l forceset/SmoothSphereHalfSpaceForce_mh5_l forceset/SmoothSphereHalfSpaceForce_heel_l forceset/SmoothSphereHalfSpaceForce_hallux_l forceset/SmoothSphereHalfSpaceForce_othertoes_l forceset/SmoothSphereHalfSpaceForce_latheel_l forceset/SmoothSphereHalfSpaceForce_medheel_l forceset/SmoothSphereHalfSpaceForce_mid_l forceset/SmoothSphereHalfSpaceForce_latmid_l forceset/SmoothSphereHalfSpaceForce_medmid_l</contact_force_paths>
								<!--The name of an ExternalForce object in the ExternalLoads set.-->
								<external_force_name>LeftGRF</external_force_name>
								<!--If neither of the two bodies/frames of a contact force match ExternalForce's applied_to_body, then one of the bodies/frames must match one of these alternative frame paths.-->
								<alternative_frame_paths>/bodyset/toes_l</alternative_frame_paths>
							</MocoContactTrackingGoalGroup>
						</contact_groups>
						<!--Experimental contact force data as an ExternalLoads XML file.-->
						<external_loads_file>refGRF_edit_S1.xml</external_loads_file>
						<!--'none' (default): use full 3-D force error; 'vector': project force error onto projection_vector; 'plane': project force error onto the plane perpendicular to projection_vector.-->
						<projection>vector</projection>
						<!--(optional) If provided, the force error is projected onto the plane perpendicular to this vector. The vector is expressed in ground. The vector can have any length.-->
						<projection_vector>1 0 0</projection_vector>
						<!--Normalize each component of the 3-D tracking error by the peak magnitude of each contact force component in the tracking data. If the peak magnitude of the ground contact force data is close to zero, an exception is thrown (default: false).-->
						<normalize_tracking_error>true</normalize_tracking_error>
					</MocoContactTrackingGoal>
					<MocoJointReactionGoal name="reaction_r">
						<!--In cost mode, the goal is multiplied by this weight (default: 1).-->
						<weight>0.0001</weight>
						<!--The model path to the joint whose reaction load(s) will be minimized.-->
						<joint_path>/jointset/knee_r</joint_path>
						<!--A specific set of reaction measures to be minimized. Options: 'moment-x', 'moment-y', 'moment-z', 'force-x', 'force-y', and 'force-z'. All reaction measures are minimized by default.-->
						<reaction_measures>force-x force-y</reaction_measures>
					</MocoJointReactionGoal>
					<MocoJointReactionGoal name="reaction_l">
						<!--In cost mode, the goal is multiplied by this weight (default: 1).-->
						<weight>0.0001</weight>
						<!--The model path to the joint whose reaction load(s) will be minimized.-->
						<joint_path>/jointset/knee_l</joint_path>
						<!--A specific set of reaction measures to be minimized. Options: 'moment-x', 'moment-y', 'moment-z', 'force-x', 'force-y', and 'force-z'. All reaction measures are minimized by default.-->
						<reaction_measures>force-x force-y</reaction_measures>
					</MocoJointReactionGoal>
				</goals>
			</MocoPhase>
		</MocoProblem>
		<!--The optimal control algorithm for solving the problem.-->
		<MocoCasADiSolver name="solver">
			<!--The number of uniformly-sized mesh intervals for the problem (default: 100). If a non-uniform mesh exists, the non-uniform mesh is used instead.-->
			<num_mesh_intervals>100</num_mesh_intervals>
			<!--0 for silent. 1 for only Moco's own output. 2 for output from CasADi and the underlying solver (default: 2).-->
			<verbosity>2</verbosity>
			<!--'true' (default) or 'false', whether or not derivatives of kinematic constraints are enforced as path constraints in the optimal control problem.-->
			<enforce_constraint_derivatives>true</enforce_constraint_derivatives>
			<!--Multibody dynamics are expressed as 'explicit' (default) or 'implicit' differential equations.-->
			<multibody_dynamics_mode>explicit</multibody_dynamics_mode>
			<!--Maximum number of iterations in the optimization solver (-1 for solver's default).-->
			<optim_max_iterations>7000</optim_max_iterations>
			<!--Tolerance used to determine if the objective is minimized (-1 for solver's default)-->
			<optim_convergence_tolerance>0.002</optim_convergence_tolerance>
			<!--Tolerance used to determine if the constraints are satisfied (-1 for solver's default)-->
			<optim_constraint_tolerance>0.01</optim_constraint_tolerance>
			<!--IPOPT's verbosity (see IPOPT documentation).-->
			<optim_ipopt_print_level>5</optim_ipopt_print_level>
			<!--A MocoTrajectory file storing an initial guess.-->
			<guess_file>RE_Post_01TP_2_timepoint3_S1265_guess2.sto</guess_file>
			<!--The finite difference scheme CasADi will use to calculate problem derivatives (default: 'central').-->
			<optim_finite_difference_scheme>forward</optim_finite_difference_scheme>
			<!--Evaluate integral costs and the differential-algebraic equations in parallel across grid points? 0: not parallel; 1: use all cores (default); greater than 1: usethis number of parallel jobs. This overrides the OPENSIM_MOCO_PARALLEL environment variable.-->
			<parallel>1</parallel>
			<!--Minimize the integral of the squared derivative continuous variables for components with implicit auxiliary dynamics. Default: false.-->
			<minimize_implicit_auxiliary_derivatives>true</minimize_implicit_auxiliary_derivatives>
			<!--The weight on the cost term added if 'minimize_implicit_auxiliary_derivatives' is enabled.Default: 1.0.-->
			<implicit_auxiliary_derivatives_weight>0.0001</implicit_auxiliary_derivatives_weight>
		</MocoCasADiSolver>
	</MocoStudy>
</OpenSimDocument>
